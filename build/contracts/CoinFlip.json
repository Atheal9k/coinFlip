{
  "contractName": "CoinFlip",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "LogNewProvableQuery",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "checkBalance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "checkBalance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "checkIfBetIsCorrect",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "whatHappened",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "funds",
          "type": "uint256"
        }
      ],
      "name": "depositedFunds",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "randomNumber",
          "type": "uint256"
        }
      ],
      "name": "generatedRandomNumber",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "a",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "q_id",
          "type": "bytes32"
        }
      ],
      "name": "idCheck",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "whatHappened",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "funds",
          "type": "uint256"
        }
      ],
      "name": "withDrewFunds",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "youLose",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "youWin",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_queryId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "createPlayer",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "n_punter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_betAmount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "q_id",
          "type": "bytes32"
        }
      ],
      "name": "fillPlayerInfo",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getPunterBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "latestNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "n_punter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_betAmount",
          "type": "uint256"
        }
      ],
      "name": "payPunter",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "punter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_betAmount",
          "type": "uint256"
        }
      ],
      "name": "random",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "numberCalled",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "q_id",
          "type": "bytes32"
        }
      ],
      "name": "saveResults",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawPunterBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "depositFunds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "betAmount",
          "type": "uint256"
        }
      ],
      "name": "placeBet",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"LogNewProvableQuery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"checkBalance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"checkBalance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"checkIfBetIsCorrect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"whatHappened\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"funds\",\"type\":\"uint256\"}],\"name\":\"depositedFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"randomNumber\",\"type\":\"uint256\"}],\"name\":\"generatedRandomNumber\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"a\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"q_id\",\"type\":\"bytes32\"}],\"name\":\"idCheck\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"whatHappened\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"funds\",\"type\":\"uint256\"}],\"name\":\"withDrewFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"youLose\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"youWin\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createPlayer\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"depositFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"n_punter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_betAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"q_id\",\"type\":\"bytes32\"}],\"name\":\"fillPlayerInfo\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getPunterBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"latestNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"n_punter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_betAmount\",\"type\":\"uint256\"}],\"name\":\"payPunter\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"betAmount\",\"type\":\"uint256\"}],\"name\":\"placeBet\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"punter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_betAmount\",\"type\":\"uint256\"}],\"name\":\"random\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numberCalled\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"q_id\",\"type\":\"bytes32\"}],\"name\":\"saveResults\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawPunterBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"__callback(bytes32,string)\":{\"details\":\"The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/CoinFlip.sol\":\"CoinFlip\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/CoinFlip.sol\":{\"keccak256\":\"0x3d35dba68af2f6edff681ce5fc5e2366978d82c7051200f01d8b32aa6e0d207d\",\"urls\":[\"bzz-raw://5db90cb24bcfd67834b19038518e9eb19d1b75af958864067ba22eba1ba12279\",\"dweb:/ipfs/QmU8YmzrFZcAeAkUZRTn9Ek36NV1gsauaiha5VLfsvtEjt\"]},\"/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/Ownable.sol\":{\"keccak256\":\"0x933d3b74faed1f2e02c4d24e12b88b080203bf8862de1ffd5b4082f66cafbc75\",\"urls\":[\"bzz-raw://f92431d08e0e13c06d1bca6a6b12c2d434e48b0029fa9f3635e3ec4c0c937a2d\",\"dweb:/ipfs/QmexuenmxTwbnGP5d6enhScFjMuLTospfGczoLFUyAqX7H\"]},\"/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/Storagable.sol\":{\"keccak256\":\"0xc6bbfb3f6f70713533a8f384e6ef4f40a1851ec98801e9a4fda4bc7e144682c9\",\"urls\":[\"bzz-raw://65aa3784390e6e276ca6e29c3f969ccd1f3a499e18a1c5297dbaa92297610bb8\",\"dweb:/ipfs/Qmbj7VFpnaJ956x9pFDPnoMYL2eDvRCL9sM3gbJYNMt315\"]},\"/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/Winnable.sol\":{\"keccak256\":\"0xb2bf10fea182d9613830482364700819d6b36d051a63fc3df1a8505b05dc2f53\",\"urls\":[\"bzz-raw://3574e00be65f50b23a2aaabef7537b64bac127b483eda148bddf6bfb0fea12d4\",\"dweb:/ipfs/Qma3CEEEX7AdHJfX6SuWPvnsjS6MFPBbL9T3xjfoVQacNT\"]},\"/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/oracle.sol\":{\"keccak256\":\"0x9e18f051ddd15ec6aac1b049ad1c561863d161de7b163ff5c89610f5bea31dae\",\"urls\":[\"bzz-raw://8ab396e4a272f64794e71663805eff76884b7bf85bd1cb391428c0f805cfb8d1\",\"dweb:/ipfs/QmdunAhK6cKun6e6prskttdRyDXZqjPdJ3Sd6DBwi6gikK\"]},\"/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/provableAPI.sol\":{\"keccak256\":\"0x6988135f2d9e695931e5efe9ad1b3ba859e0d2949d984eaaf787e038e09cab00\",\"urls\":[\"bzz-raw://a0846a0117c7e1f1a9957c8f011d875708ec1f7380286d2af58502b73f4da7d4\",\"dweb:/ipfs/QmYWTc5MLUXJra934htUjaikBB5QESXh9cMio7CdaXEB3e\"]}},\"version\":1}",
  "bytecode": "0x608060405233600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506136ac806100546000396000f3fe6080604052600436106100e85760003560e01c80637be8af901161008a578063bfab3db911610059578063bfab3db91461052c578063d79f5ec514610557578063dc34b0aa1461059c578063e2c41dbc146105c7576100e8565b80637be8af901461040e5780638da5cb5b1461045c578063a35bfd21146104b3578063b69ef8a814610501576100e8565b806338bbfa50116100c657806338bbfa50146102185780633fa9fcf8146103815780634ff540d41461038b5780635aa81139146103b6576100e8565b806310fe7c48146100ed57806327dc297e1461011b57806332a1b764146101ed575b600080fd5b6101196004803603602081101561010357600080fd5b81019080803590602001909291905050506105e5565b005b34801561012757600080fd5b506101eb6004803603604081101561013e57600080fd5b81019080803590602001909291908035906020019064010000000081111561016557600080fd5b82018360208201111561017757600080fd5b8035906020019184600183028401116401000000008311171561019957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610880565b005b3480156101f957600080fd5b506102026108c3565b6040518082815260200191505060405180910390f35b34801561022457600080fd5b5061037f6004803603606081101561023b57600080fd5b81019080803590602001909291908035906020019064010000000081111561026257600080fd5b82018360208201111561027457600080fd5b8035906020019184600183028401116401000000008311171561029657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102f957600080fd5b82018360208201111561030b57600080fd5b8035906020019184600183028401116401000000008311171561032d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610a50565b005b610389610bdb565b005b34801561039757600080fd5b506103a0610ce7565b6040518082815260200191505060405180910390f35b61040c600480360360608110156103cc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610df4565b005b61045a6004803603604081101561042457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f93565b005b34801561046857600080fd5b50610471610fe7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104ff600480360360408110156104c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061100d565b005b34801561050d57600080fd5b506105166110fa565b6040518082815260200191505060405180910390f35b34801561053857600080fd5b50610541611100565b6040518082815260200191505060405180910390f35b34801561056357600080fd5b5061059a6004803603604081101561057a57600080fd5b8101908080359060200190929190803590602001909291905050506111b9565b005b3480156105a857600080fd5b506105b1611256565b6040518082815260200191505060405180910390f35b6105cf61125c565b6040518082815260200191505060405180910390f35b6127108034101561065e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f4e656564206174206c6561737420302e3120737a61626f00000000000000000081525060200191505060405180910390fd5b66038d7ea4c6800082029150600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600c819055506000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541180156107475750600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101548210155b1561076457600c548203600d819055506000600c8190555061081b565b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541180156107f75750600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015482105b1561081a5781600c5403600d81905550600d54600c600082825403925050819055505b5b61082733600d5461100d565b7f23f0e69628915e8fb8a89f2a6a2ec30e1ce0bdf0425ba6047a868902718b9f38600c54604051808060200183815260200182810382526023815260200180613621602391396040019250505060405180910390a15050565b6108bf828260006040519080825280601f01601f1916602001820160405280156108b95781602001600182028038833980820191505090505b50610a50565b5050565b600080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490507fb471f40a10881404b70a4f7819c075d0ae5fec92ae9454b1ccdad5c0fe9a6ab28182604051808381526020018281526020019250505060405180910390a16000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156109d8573d6000803e3d6000fd5b507f888f4fb33f1429a5c0e82c8ca8b08617833224470b7efbaf5cb4d0b00e695e658160405180806020018381526020018281038252600d8152602001807f596f7520776974686472657720000000000000000000000000000000000000008152506020019250505060405180910390a18091505090565b610a586112d0565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a8f57600080fd5b6000600760008581526020019081526020016000206002015490506000600a600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006002856040516020018082805190602001908083835b60208310610b1d5780518252602082019150602081019050602083039250610afa565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c81610b6257fe5b06905080600b819055507fc13d60fe9dffdb6908d2d446cd18134373a51db0738ee04f296eeb9128121cbc816040518082815260200191505060405180910390a1610baf600b54876111b9565b610bb8866115ed565b506007600087815260200190815260200160002060020160009055505050505050565b610be3613497565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600081602001818152505080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555090505050565b60007fb471f40a10881404b70a4f7819c075d0ae5fec92ae9454b1ccdad5c0fe9a6ab2600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154604051808381526020018281526020019250505060405180910390a1600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905090565b33600a600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610ecf6134da565b83816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508281602001818152505081816040018181525050806007600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015590505050505050565b80600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825401925050819055505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809050600062030d4090506000611028836001846118ff565b9050349350611038338583610df4565b7f5e35a070670d9d1b09ecfeeae77ca75380c3bf10808c2cc6ae99b217977e09bd816040518080602001838152602001828103825260178152602001807f546865204944206f6620746869732063616c6c206973200000000000000000008152506020019250505060405180910390a17fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c473896040518080602001828103825260348152602001806136446034913960400191505060405180910390a15050505050565b60065481565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461115c57600080fd5b6000600654905060006006819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156111b1573d6000803e3d6000fd5b508091505090565b6111c1613514565b828160000181815250508181604001818152505060018314156111f4576001816020019015159081151581525050611206565b60008160200190151590811515815250505b80600860008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555060408201518160020155905050505050565b600b5481565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112b857600080fd5b34600660008282540192505081905550600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061135857506000611356600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611e9a565b145b15611369576113676000611ea5565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156113d357600080fd5b505af11580156113e7573d6000803e3d6000fd5b505050506040513d60208110156113fd57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461154657600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156114cb57600080fd5b505af11580156114df573d6000803e3d6000fd5b505050506040513d60208110156114f557600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156115ad57600080fd5b505afa1580156115c1573d6000803e3d6000fd5b505050506040513d60208110156115d757600080fd5b8101908080519060200190929190505050905090565b6000806008600084815260200190815260200160002060010160009054906101000a900460ff1690506000600760008581526020019081526020016000206001015490506000600a600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611671613497565b600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1615151515815250509050600115158415151480611759575060001515841515145b1561187157600060028402905080600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f7f286286ddac21458cfcd9160c74a2bb53f361388c342a089321237fb3e21a24816040518082815260200191505060405180910390a1836006600082825403925050819055507f7e7d5e50adfbb4e81427323125a4d6250cf27f8b49ff7305f48c9fcb4d2525ea600285026040518080602001838152602001828103825260088152602001807f596f7520776f6e200000000000000000000000000000000000000000000000008152506020019250505060405180910390a160009050506118f2565b826006600082825401925050819055507fdbc743cebacba388691ee70a334a0faaee0490d78d1e3be2ba9081622471cdad836040518080602001838152602001828103825260098152602001807f596f75206c6f73742000000000000000000000000000000000000000000000008152506020019250505060405180910390a15b6000925050505050919050565b60008083118015611911575060208311155b61191a57600080fd5b600a84029350606060016040519080825280601f01601f1916602001820160405280156119565781602001600182028038833980820191505090505b5090508360f81b8160008151811061196a57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f1916602001820160405280156119cf5781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f191660200182016040528015611a085781602001600182028038833980820191505090505b5090506000611a15611eb6565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f191660200182016040528015611a695781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f191660200182016040528015611aa85781602001600182028038833980820191505090505b509050611abb82601860088460006121d3565b50611ac461353a565b60405180608001604052808781526020018881526020018681526020018481525090506000611b296040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c612232565b9050606060086040519080825280601f01601f191660200182016040528015611b615781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a010000000000000000000000000000000000000000000000000000810460228301537901000000000000000000000000000000000000000000000000008104602183015378010000000000000000000000000000000000000000000000008104602083015350611e87828285600160048110611ca057fe5b6020020151600287600060048110611cb457fe5b60200201516040518082805190602001908083835b60208310611cec5780518252602082019150602081019050602083039250611cc9565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015611d2e573d6000803e3d6000fd5b5050506040513d6020811015611d4357600080fd5b810190808051906020019092919050505087600260048110611d6157fe5b60200201516040516020018085805190602001908083835b60208310611d9c5780518252602082019150602081019050602083039250611d79565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b60208310611ded5780518252602082019150602081019050602083039250611dca565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b60208310611e445780518252602082019150602081019050602083039250611e21565b6001836020036101000a0380198251168184511680821785525050505050509050019450505050506040516020818303038152906040528051906020012061259f565b8199505050505050505050509392505050565b6000813b9050919050565b6000611eaf6125bb565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611f3e57506000611f3c600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611e9a565b145b15611f4f57611f4d6000611ea5565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611fb957600080fd5b505af1158015611fcd573d6000803e3d6000fd5b505050506040513d6020811015611fe357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461212c57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156120b157600080fd5b505af11580156120c5573d6000803e3d6000fd5b505050506040513d60208110156120db57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561219357600080fd5b505afa1580156121a7573d6000803e3d6000fd5b505050506040513d60208110156121bd57600080fd5b8101908080519060200190929190505050905090565b60606000828501905080845110156121ea57600080fd5b600086602001905060008460200190505b86886020010182101561222357818901518082880152506020820191506020810190506121fb565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806122ba575060006122b8600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611e9a565b145b156122cb576122c96000611ea5565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561233557600080fd5b505af1158015612349573d6000803e3d6000fd5b505050506040513d602081101561235f57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146124a857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561242d57600080fd5b505af1158015612441573d6000803e3d6000fd5b505050506040513d602081101561245757600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b606060046040519080825280602002602001820160405280156124df57816020015b60608152602001906001900390816124ca5790505b509050836000600481106124ef57fe5b60200201518160008151811061250157fe5b60200260200101819052508360016004811061251957fe5b60200201518160018151811061252b57fe5b60200260200101819052508360026004811061254357fe5b60200201518160028151811061255557fe5b60200260200101819052508360036004811061256d57fe5b60200201518160038151811061257f57fe5b6020026020010181905250612595858285612b12565b9150509392505050565b8060036000848152602001908152602001600020819055505050565b6000806125db731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611e9a565b111561267d57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506126746040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250613074565b60019050612b0f565b600061269c73c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611e9a565b111561273e5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506127356040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250613074565b60019050612b0f565b600061275d73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611e9a565b11156127ff5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506127f66040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250613074565b60019050612b0f565b600061281e73146500cfd35b22e4a392fe0adc06de1a1368ed48611e9a565b11156128c05773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506128b76040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250613074565b60019050612b0f565b60006128df73a2998efd205fb9d4b4963afb70778d6354ad3a41611e9a565b11156129815773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506129786040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250613074565b60019050612b0f565b60006129a0736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611e9a565b1115612a0457736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612b0f565b6000612a237320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611e9a565b1115612a87577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612b0f565b6000612aa67351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611e9a565b1115612b0a577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612b0f565b600090505b90565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480612b9a57506000612b98600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611e9a565b145b15612bab57612ba96000611ea5565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612c1557600080fd5b505af1158015612c29573d6000803e3d6000fd5b505050506040513d6020811015612c3f57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612d8857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612d0d57600080fd5b505af1158015612d21573d6000803e3d6000fd5b505050506040513d6020811015612d3757600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015612e1e578082015181840152602081019050612e03565b50505050905090810190601f168015612e4b5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015612e6b57600080fd5b505af1158015612e7f573d6000803e3d6000fd5b505050506040513d6020811015612e9557600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a764000001811115612ec8576000801b91505061306d565b6060612ed38561308e565b90506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015612f77578082015181840152602081019050612f5c565b50505050905090810190601f168015612fa45780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015612fdd578082015181840152602081019050612fc2565b50505050905090810190601f16801561300a5780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b15801561302c57600080fd5b505af1158015613040573d6000803e3d6000fd5b50505050506040513d602081101561305757600080fd5b8101908080519060200190929190505050925050505b9392505050565b806002908051906020019061308a929190613561565b5050565b606061309861310e565b6130a06135e1565b6130ac8161040061311a565b6130b581613164565b60008090505b83518110156130f7576130ea8482815181106130d357fe5b60200260200101518361317290919063ffffffff16565b80806001019150506130bb565b5061310181613197565b8060000151915050919050565b60405180590338823950565b600081905060006020828161312b57fe5b0614613144576020818161313b57fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b61316f8160046131a5565b50565b61317f82600283516131c6565b613192818361330690919063ffffffff16565b505050565b6131a28160076131a5565b50565b6131c2601f60058360ff16901b17836133b190919063ffffffff16565b5050565b601781116131f2576131ed8160058460ff16901b60ff1617846133b190919063ffffffff16565b613301565b60ff811161323357613217601860058460ff16901b17846133b190919063ffffffff16565b61322d816001856133f19092919063ffffffff16565b50613300565b61ffff811161327557613259601960058460ff16901b17846133b190919063ffffffff16565b61326f816002856133f19092919063ffffffff16565b506132ff565b63ffffffff81116132b95761329d601a60058460ff16901b17846133b190919063ffffffff16565b6132b3816004856133f19092919063ffffffff16565b506132fe565b67ffffffffffffffff81116132fd576132e5601b60058460ff16901b17846133b190919063ffffffff16565b6132fb816008856133f19092919063ffffffff16565b505b5b5b5b5b505050565b61330e6135e1565b8260200151836000015151835101111561333e5761333d83600261333786602001518651613458565b02613474565b5b60008060008451905085518051602081830101945086518101825260208701935050505b602081106133855781518352602083019250602082019150602081039050613362565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b816020015160018360000151510111156133d7576133d6826002846020015102613474565b5b815180516020818301018381536001820183525050505050565b6133f96135e1565b83602001518460000151518301111561342757613426846002613420876020015186613458565b02613474565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b60008183111561346a5782905061346e565b8190505b92915050565b606082600001519050613487838361311a565b6134918382613306565b50505050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600080191681526020016000151581525090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600080191681525090565b604051806060016040528060008152602001600015158152602001600080191681525090565b60405180608001604052806004905b60608152602001906001900390816135495790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106135a257805160ff19168380011785556135d0565b828001600101855582156135d0579182015b828111156135cf5782518255916020019190600101906135b4565b5b5090506135dd91906135fb565b5090565b604051806040016040528060608152602001600081525090565b61361d91905b80821115613619576000816000905550600101613601565b5090565b9056fe5468652050756e7465722042616c616e6365207768656e2062657474696e672069732050726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722ea265627a7a72315820289551d05db23febe015136d0662705106910a7d04da19e916c0f3f369f2b84e64736f6c634300050c0032",
  "deployedBytecode": "0x6080604052600436106100e85760003560e01c80637be8af901161008a578063bfab3db911610059578063bfab3db91461052c578063d79f5ec514610557578063dc34b0aa1461059c578063e2c41dbc146105c7576100e8565b80637be8af901461040e5780638da5cb5b1461045c578063a35bfd21146104b3578063b69ef8a814610501576100e8565b806338bbfa50116100c657806338bbfa50146102185780633fa9fcf8146103815780634ff540d41461038b5780635aa81139146103b6576100e8565b806310fe7c48146100ed57806327dc297e1461011b57806332a1b764146101ed575b600080fd5b6101196004803603602081101561010357600080fd5b81019080803590602001909291905050506105e5565b005b34801561012757600080fd5b506101eb6004803603604081101561013e57600080fd5b81019080803590602001909291908035906020019064010000000081111561016557600080fd5b82018360208201111561017757600080fd5b8035906020019184600183028401116401000000008311171561019957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610880565b005b3480156101f957600080fd5b506102026108c3565b6040518082815260200191505060405180910390f35b34801561022457600080fd5b5061037f6004803603606081101561023b57600080fd5b81019080803590602001909291908035906020019064010000000081111561026257600080fd5b82018360208201111561027457600080fd5b8035906020019184600183028401116401000000008311171561029657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102f957600080fd5b82018360208201111561030b57600080fd5b8035906020019184600183028401116401000000008311171561032d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610a50565b005b610389610bdb565b005b34801561039757600080fd5b506103a0610ce7565b6040518082815260200191505060405180910390f35b61040c600480360360608110156103cc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610df4565b005b61045a6004803603604081101561042457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f93565b005b34801561046857600080fd5b50610471610fe7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104ff600480360360408110156104c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061100d565b005b34801561050d57600080fd5b506105166110fa565b6040518082815260200191505060405180910390f35b34801561053857600080fd5b50610541611100565b6040518082815260200191505060405180910390f35b34801561056357600080fd5b5061059a6004803603604081101561057a57600080fd5b8101908080359060200190929190803590602001909291905050506111b9565b005b3480156105a857600080fd5b506105b1611256565b6040518082815260200191505060405180910390f35b6105cf61125c565b6040518082815260200191505060405180910390f35b6127108034101561065e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f4e656564206174206c6561737420302e3120737a61626f00000000000000000081525060200191505060405180910390fd5b66038d7ea4c6800082029150600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600c819055506000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541180156107475750600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101548210155b1561076457600c548203600d819055506000600c8190555061081b565b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541180156107f75750600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015482105b1561081a5781600c5403600d81905550600d54600c600082825403925050819055505b5b61082733600d5461100d565b7f23f0e69628915e8fb8a89f2a6a2ec30e1ce0bdf0425ba6047a868902718b9f38600c54604051808060200183815260200182810382526023815260200180613621602391396040019250505060405180910390a15050565b6108bf828260006040519080825280601f01601f1916602001820160405280156108b95781602001600182028038833980820191505090505b50610a50565b5050565b600080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490507fb471f40a10881404b70a4f7819c075d0ae5fec92ae9454b1ccdad5c0fe9a6ab28182604051808381526020018281526020019250505060405180910390a16000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156109d8573d6000803e3d6000fd5b507f888f4fb33f1429a5c0e82c8ca8b08617833224470b7efbaf5cb4d0b00e695e658160405180806020018381526020018281038252600d8152602001807f596f7520776974686472657720000000000000000000000000000000000000008152506020019250505060405180910390a18091505090565b610a586112d0565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a8f57600080fd5b6000600760008581526020019081526020016000206002015490506000600a600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006002856040516020018082805190602001908083835b60208310610b1d5780518252602082019150602081019050602083039250610afa565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c81610b6257fe5b06905080600b819055507fc13d60fe9dffdb6908d2d446cd18134373a51db0738ee04f296eeb9128121cbc816040518082815260200191505060405180910390a1610baf600b54876111b9565b610bb8866115ed565b506007600087815260200190815260200160002060020160009055505050505050565b610be3613497565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600081602001818152505080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555090505050565b60007fb471f40a10881404b70a4f7819c075d0ae5fec92ae9454b1ccdad5c0fe9a6ab2600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154604051808381526020018281526020019250505060405180910390a1600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905090565b33600a600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610ecf6134da565b83816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508281602001818152505081816040018181525050806007600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015590505050505050565b80600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825401925050819055505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809050600062030d4090506000611028836001846118ff565b9050349350611038338583610df4565b7f5e35a070670d9d1b09ecfeeae77ca75380c3bf10808c2cc6ae99b217977e09bd816040518080602001838152602001828103825260178152602001807f546865204944206f6620746869732063616c6c206973200000000000000000008152506020019250505060405180910390a17fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c473896040518080602001828103825260348152602001806136446034913960400191505060405180910390a15050505050565b60065481565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461115c57600080fd5b6000600654905060006006819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156111b1573d6000803e3d6000fd5b508091505090565b6111c1613514565b828160000181815250508181604001818152505060018314156111f4576001816020019015159081151581525050611206565b60008160200190151590811515815250505b80600860008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555060408201518160020155905050505050565b600b5481565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112b857600080fd5b34600660008282540192505081905550600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061135857506000611356600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611e9a565b145b15611369576113676000611ea5565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156113d357600080fd5b505af11580156113e7573d6000803e3d6000fd5b505050506040513d60208110156113fd57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461154657600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156114cb57600080fd5b505af11580156114df573d6000803e3d6000fd5b505050506040513d60208110156114f557600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156115ad57600080fd5b505afa1580156115c1573d6000803e3d6000fd5b505050506040513d60208110156115d757600080fd5b8101908080519060200190929190505050905090565b6000806008600084815260200190815260200160002060010160009054906101000a900460ff1690506000600760008581526020019081526020016000206001015490506000600a600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611671613497565b600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1615151515815250509050600115158415151480611759575060001515841515145b1561187157600060028402905080600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f7f286286ddac21458cfcd9160c74a2bb53f361388c342a089321237fb3e21a24816040518082815260200191505060405180910390a1836006600082825403925050819055507f7e7d5e50adfbb4e81427323125a4d6250cf27f8b49ff7305f48c9fcb4d2525ea600285026040518080602001838152602001828103825260088152602001807f596f7520776f6e200000000000000000000000000000000000000000000000008152506020019250505060405180910390a160009050506118f2565b826006600082825401925050819055507fdbc743cebacba388691ee70a334a0faaee0490d78d1e3be2ba9081622471cdad836040518080602001838152602001828103825260098152602001807f596f75206c6f73742000000000000000000000000000000000000000000000008152506020019250505060405180910390a15b6000925050505050919050565b60008083118015611911575060208311155b61191a57600080fd5b600a84029350606060016040519080825280601f01601f1916602001820160405280156119565781602001600182028038833980820191505090505b5090508360f81b8160008151811061196a57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f1916602001820160405280156119cf5781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f191660200182016040528015611a085781602001600182028038833980820191505090505b5090506000611a15611eb6565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f191660200182016040528015611a695781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f191660200182016040528015611aa85781602001600182028038833980820191505090505b509050611abb82601860088460006121d3565b50611ac461353a565b60405180608001604052808781526020018881526020018681526020018481525090506000611b296040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c612232565b9050606060086040519080825280601f01601f191660200182016040528015611b615781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a010000000000000000000000000000000000000000000000000000810460228301537901000000000000000000000000000000000000000000000000008104602183015378010000000000000000000000000000000000000000000000008104602083015350611e87828285600160048110611ca057fe5b6020020151600287600060048110611cb457fe5b60200201516040518082805190602001908083835b60208310611cec5780518252602082019150602081019050602083039250611cc9565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015611d2e573d6000803e3d6000fd5b5050506040513d6020811015611d4357600080fd5b810190808051906020019092919050505087600260048110611d6157fe5b60200201516040516020018085805190602001908083835b60208310611d9c5780518252602082019150602081019050602083039250611d79565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b60208310611ded5780518252602082019150602081019050602083039250611dca565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b60208310611e445780518252602082019150602081019050602083039250611e21565b6001836020036101000a0380198251168184511680821785525050505050509050019450505050506040516020818303038152906040528051906020012061259f565b8199505050505050505050509392505050565b6000813b9050919050565b6000611eaf6125bb565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611f3e57506000611f3c600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611e9a565b145b15611f4f57611f4d6000611ea5565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611fb957600080fd5b505af1158015611fcd573d6000803e3d6000fd5b505050506040513d6020811015611fe357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461212c57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156120b157600080fd5b505af11580156120c5573d6000803e3d6000fd5b505050506040513d60208110156120db57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561219357600080fd5b505afa1580156121a7573d6000803e3d6000fd5b505050506040513d60208110156121bd57600080fd5b8101908080519060200190929190505050905090565b60606000828501905080845110156121ea57600080fd5b600086602001905060008460200190505b86886020010182101561222357818901518082880152506020820191506020810190506121fb565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806122ba575060006122b8600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611e9a565b145b156122cb576122c96000611ea5565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561233557600080fd5b505af1158015612349573d6000803e3d6000fd5b505050506040513d602081101561235f57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146124a857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561242d57600080fd5b505af1158015612441573d6000803e3d6000fd5b505050506040513d602081101561245757600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b606060046040519080825280602002602001820160405280156124df57816020015b60608152602001906001900390816124ca5790505b509050836000600481106124ef57fe5b60200201518160008151811061250157fe5b60200260200101819052508360016004811061251957fe5b60200201518160018151811061252b57fe5b60200260200101819052508360026004811061254357fe5b60200201518160028151811061255557fe5b60200260200101819052508360036004811061256d57fe5b60200201518160038151811061257f57fe5b6020026020010181905250612595858285612b12565b9150509392505050565b8060036000848152602001908152602001600020819055505050565b6000806125db731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611e9a565b111561267d57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506126746040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250613074565b60019050612b0f565b600061269c73c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611e9a565b111561273e5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506127356040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250613074565b60019050612b0f565b600061275d73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611e9a565b11156127ff5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506127f66040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250613074565b60019050612b0f565b600061281e73146500cfd35b22e4a392fe0adc06de1a1368ed48611e9a565b11156128c05773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506128b76040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250613074565b60019050612b0f565b60006128df73a2998efd205fb9d4b4963afb70778d6354ad3a41611e9a565b11156129815773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506129786040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250613074565b60019050612b0f565b60006129a0736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611e9a565b1115612a0457736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612b0f565b6000612a237320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611e9a565b1115612a87577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612b0f565b6000612aa67351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611e9a565b1115612b0a577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612b0f565b600090505b90565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480612b9a57506000612b98600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611e9a565b145b15612bab57612ba96000611ea5565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612c1557600080fd5b505af1158015612c29573d6000803e3d6000fd5b505050506040513d6020811015612c3f57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612d8857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612d0d57600080fd5b505af1158015612d21573d6000803e3d6000fd5b505050506040513d6020811015612d3757600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015612e1e578082015181840152602081019050612e03565b50505050905090810190601f168015612e4b5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015612e6b57600080fd5b505af1158015612e7f573d6000803e3d6000fd5b505050506040513d6020811015612e9557600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a764000001811115612ec8576000801b91505061306d565b6060612ed38561308e565b90506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015612f77578082015181840152602081019050612f5c565b50505050905090810190601f168015612fa45780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015612fdd578082015181840152602081019050612fc2565b50505050905090810190601f16801561300a5780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b15801561302c57600080fd5b505af1158015613040573d6000803e3d6000fd5b50505050506040513d602081101561305757600080fd5b8101908080519060200190929190505050925050505b9392505050565b806002908051906020019061308a929190613561565b5050565b606061309861310e565b6130a06135e1565b6130ac8161040061311a565b6130b581613164565b60008090505b83518110156130f7576130ea8482815181106130d357fe5b60200260200101518361317290919063ffffffff16565b80806001019150506130bb565b5061310181613197565b8060000151915050919050565b60405180590338823950565b600081905060006020828161312b57fe5b0614613144576020818161313b57fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b61316f8160046131a5565b50565b61317f82600283516131c6565b613192818361330690919063ffffffff16565b505050565b6131a28160076131a5565b50565b6131c2601f60058360ff16901b17836133b190919063ffffffff16565b5050565b601781116131f2576131ed8160058460ff16901b60ff1617846133b190919063ffffffff16565b613301565b60ff811161323357613217601860058460ff16901b17846133b190919063ffffffff16565b61322d816001856133f19092919063ffffffff16565b50613300565b61ffff811161327557613259601960058460ff16901b17846133b190919063ffffffff16565b61326f816002856133f19092919063ffffffff16565b506132ff565b63ffffffff81116132b95761329d601a60058460ff16901b17846133b190919063ffffffff16565b6132b3816004856133f19092919063ffffffff16565b506132fe565b67ffffffffffffffff81116132fd576132e5601b60058460ff16901b17846133b190919063ffffffff16565b6132fb816008856133f19092919063ffffffff16565b505b5b5b5b5b505050565b61330e6135e1565b8260200151836000015151835101111561333e5761333d83600261333786602001518651613458565b02613474565b5b60008060008451905085518051602081830101945086518101825260208701935050505b602081106133855781518352602083019250602082019150602081039050613362565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b816020015160018360000151510111156133d7576133d6826002846020015102613474565b5b815180516020818301018381536001820183525050505050565b6133f96135e1565b83602001518460000151518301111561342757613426846002613420876020015186613458565b02613474565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b60008183111561346a5782905061346e565b8190505b92915050565b606082600001519050613487838361311a565b6134918382613306565b50505050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600080191681526020016000151581525090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600080191681525090565b604051806060016040528060008152602001600015158152602001600080191681525090565b60405180608001604052806004905b60608152602001906001900390816135495790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106135a257805160ff19168380011785556135d0565b828001600101855582156135d0579182015b828111156135cf5782518255916020019190600101906135b4565b5b5090506135dd91906135fb565b5090565b604051806040016040528060608152602001600081525090565b61361d91905b80821115613619576000816000905550600101613601565b5090565b9056fe5468652050756e7465722042616c616e6365207768656e2062657474696e672069732050726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722ea265627a7a72315820289551d05db23febe015136d0662705106910a7d04da19e916c0f3f369f2b84e64736f6c634300050c0032",
  "sourceMap": "144:1409:0:-;;;236:10:2;228:5;;:18;;;;;;;;;;;;;;;;;;144:1409:0;;;;;;",
  "deployedSourceMap": "144:1409:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;578:950;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;578:950:0;;;;;;;;;;;;;;;;;:::i;:::-;;15686:124:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15686:124:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15686:124:6;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15686:124:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15686:124:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15686:124:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15686:124:6;;;;;;;;;;;;;;;:::i;:::-;;2804:358:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2804:358:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;441:502:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;441:502:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;441:502:5;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;441:502:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;441:502:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;441:502:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;441:502:5;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;441:502:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;441:502:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;441:502:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;441:502:5;;;;;;;;;;;;;;;:::i;:::-;;848:382:3;;;:::i;:::-;;2590:206;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2590:206:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1238:356;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1238:356:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1606:139;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1606:139:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;60:20:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;60:20:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;953:590:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;953:590:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;439:19:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;439:19:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3170:193;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3170:193:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1758:370;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1758:370:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1758:370:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;237:27:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;237:27:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;446:124:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;578:950;634:9;270:4;257:9;:17;;249:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;680:4;668:9;:16;656:28;;719:7;:19;727:10;719:19;;;;;;;;;;;;;;;:33;;;698:18;:54;;;;806:1;770:7;:19;778:10;770:19;;;;;;;;;;;;;;;:33;;;:37;:87;;;;;824:7;:19;832:10;824:19;;;;;;;;;;;;;;;:33;;;811:9;:46;;770:87;766:604;;;981:18;;969:9;:30;945:21;:54;;;;1035:1;1014:18;:22;;;;766:604;;;1107:1;1071:7;:19;1079:10;1071:19;;;;;;;;;;;;;;;:33;;;:37;:86;;;;;1124:7;:19;1132:10;1124:19;;;;;;;;;;;;;;;:33;;;1112:9;:45;1071:86;1067:303;;;1290:9;1269:18;;:30;1245:21;:54;;;;1337:21;;1315:18;;:43;;;;;;;;;;;1067:303;766:604;1382:40;1389:10;1400:21;;1382:6;:40::i;:::-;1438:78;1497:18;;1438:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;578:950;;:::o;15686:124:6:-;15762:40;15773:5;15780:7;15799:1;15789:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;15789:12:6;;;;15762:10;:40::i;:::-;15686:124;;:::o;2804:358:3:-;2853:4;2869:15;2887:7;:19;2895:10;2887:19;;;;;;;;;;;;;;;:33;;;2869:51;;2936:36;2949:10;2961;2936:36;;;;;;;;;;;;;;;;;;;;;;;;3019:1;2983:7;:19;2991:10;2983:19;;;;;;;;;;;;;;;:33;;:37;;;;3031:10;:19;;:31;3051:10;3031:31;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3031:31:3;3080:42;3111:10;3080:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3140:10;3133:17;;;2804:358;:::o;441:502:5:-;559:20;:18;:20::i;:::-;545:34;;:10;:34;;;537:43;;;;;;587:14;604:7;:17;612:8;604:17;;;;;;;;;;;:20;;;587:37;;631:15;649:7;:17;657:8;649:17;;;;;;;;;;;;;;;;;;;;;631:35;;675:20;746:1;733:7;716:25;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;716:25:5;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;716:25:5;;;706:36;;;;;;698:45;;:49;;;;;;675:72;;771:12;756;:27;;;;795:35;817:12;795:35;;;;;;;;;;;;;;;;;;837:34;849:12;;862:8;837:11;:34::i;:::-;878:19;888:8;878:9;:19::i;:::-;;915:7;:17;923:8;915:17;;;;;;;;;;;:20;;908:27;;;441:502;;;;;;:::o;848:382:3:-;1043:23;;:::i;:::-;1096:10;1077:9;:16;;:29;;;;;;;;;;;1143:1;1117:9;:23;;:27;;;;;1209:9;1187:7;:19;1195:10;1187:19;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;848:382;:::o;2590:206::-;2634:4;2655:82;2668:7;:19;2676:10;2668:19;;;;;;;;;;;;;;;:33;;;2703:7;:19;2711:10;2703:19;;;;;;;;;;;;;;;:33;;;2655:82;;;;;;;;;;;;;;;;;;;;;;;;2755:7;:19;2763:10;2755:19;;;;;;;;;;;;;;;:33;;;2748:40;;2590:206;:::o;1238:356::-;1365:10;1349:7;:13;1357:4;1349:13;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;1413:8;1386:7;:17;1394:8;1386:17;;;;;;;;;;;;;;;:24;;;:35;;;;;;;;;;;;;;;;;;1434:17;;:::i;:::-;1478:8;1462:6;:13;;:24;;;;;;;;;;;1516:10;1497:6;:16;;:29;;;;;1549:4;1537:6;:9;;:16;;;;;1580:6;1564:7;:13;1572:4;1564:13;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1238:356;;;;:::o;1606:139::-;1727:10;1693:7;:17;1701:8;1693:17;;;;;;;;;;;;;;;:31;;;:44;;;;;;;;;;;1606:139;;:::o;60:20:2:-;;;;;;;;;;;;;:::o;953:590:5:-;1025:29;1056:1;1025:32;;1064:21;1088:6;1064:30;;1104:12;1120:130;1156:21;231:1;1225:16;1120:25;:130::i;:::-;1104:146;;1273:9;1260:22;;1344:45;1360:10;1372;1384:4;1344:14;:45::i;:::-;1408:40;1443:4;1408:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1460:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;953:590;;;;;:::o;439:19:3:-;;;;:::o;3170:193::-;3232:4;142:5:2;;;;;;;;;;;128:19;;:10;:19;;;120:28;;;;;;3248:11:3;3262:7;;3248:21;;3290:1;3280:7;:11;;;;3302:10;:19;;:27;3322:6;3302:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3302:27:3;3347:6;3340:13;;;3170:193;:::o;1758:370::-;1829:23;;:::i;:::-;1882:12;1863:9;:16;;:31;;;;;1920:4;1905:9;:12;;:19;;;;;1959:1;1943:12;:17;1939:138;;;1994:4;1976:9;:15;;:22;;;;;;;;;;;1939:138;;;2060:5;2042:9;:15;;:23;;;;;;;;;;;1939:138;2105:9;2089:7;:13;2097:4;2089:13;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1758:370;;;:::o;237:27:5:-;;;;:::o;446:124:0:-;503:4;142:5:2;;;;;;;;;;;128:19;;:10;:19;;;120:28;;;;;;528:9:0;517:7;;:20;;;;;;;;;;;553:7;;546:14;;446:124;:::o;38024:132:6:-;38084:24;12155:1;12131:26;;12139:3;;;;;;;;;;;12131:26;;;12130:64;;;;12192:1;12163:25;12183:3;;;;;;;;;;;12163:11;:25::i;:::-;:30;12130:64;12126:132;;;12211:35;11777:1;12211:19;:35::i;:::-;;12126:132;12293:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12293:16:6;;;;;;;;;;;;;;;;12272:37;;12280:8;;;;;;;;;;;12272:37;;;12268:108;;12347:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12347:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12347:16:6;;;;;;;;;;;;;;;;12326:8;;:38;;;;;;;;;;;;;;;;;;12268:108;38128:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;38128:20:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38128:20:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;38128:20:6;;;;;;;;;;;;;;;;38121:27;;38024:132;:::o;260:943:4:-;311:4;329:14;346:7;:13;354:4;346:13;;;;;;;;;;;:19;;;;;;;;;;;;329:36;;378:14;395:7;:13;403:4;395:13;;;;;;;;;;;:23;;;378:40;;431:21;455:7;:13;463:4;455:13;;;;;;;;;;;;;;;;;;;;;431:37;;479:23;;:::i;:::-;505:7;:21;513:12;505:21;;;;;;;;;;;;;;;479:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;558:4;545:17;;:9;:17;;;:39;;;;579:5;566:18;;:9;:18;;;545:39;541:625;;;628:13;656:1;644:9;:13;628:29;;708:8;670:7;:21;678:12;670:21;;;;;;;;;;;;;;;:35;;:46;;;;864:22;877:8;864:22;;;;;;;;;;;;;;;;;;923:9;901:18;;:31;;;;;;;;;;;954:32;984:1;973:9;:12;954:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1012:1;1001:12;;541:625;;;;1094:9;1083:7;;:20;;;;;;;;;;;1123:31;1144:9;1123:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;541:625;1192:1;1180:13;;260:943;;;;;;;:::o;46097:2683:6:-;46199:16;46247:1;46237:7;:11;46236:32;;;;;46265:2;46254:7;:13;;46236:32;46228:41;;;;;;46290:2;46280:12;;;;46349:19;46381:1;46371:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46371:12:6;;;;46349:34;;46417:7;46406:20;;46394:6;46401:1;46394:9;;;;;;;;;;;:32;;;;;;;;;;;46437:19;46469:2;46459:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46459:13:6;;;;46437:35;;46483:27;46523:2;46513:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46513:13:6;;;;46483:43;;46537:30;46570:40;:38;:40::i;:::-;46537:73;;46660:4;46652:6;46645:20;47013:9;47003:8;46999:24;46994:1;46986:6;46982:14;46972:25;46968:56;46961:4;46953:6;46949:17;46942:83;47062:4;47046:14;47039:28;47115:22;47108:4;47092:14;47088:25;47081:57;47159:18;47190:2;47180:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47180:13:6;;;;47159:34;;47253:6;47246:4;47239:5;47235:16;47228:32;47281:25;47319:1;47309:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47309:12:6;;;;47281:40;;47332;47342:5;47349:2;47353:1;47356:12;47370:1;47332:9;:40::i;:::-;;47383:20;;:::i;:::-;:62;;;;;;;;47407:6;47383:62;;;;47415:6;47383:62;;;;47423:14;47383:62;;;;47439:5;47383:62;;;;;47456:15;47474:47;;;;;;;;;;;;;;;;;;47499:4;47505:15;47474:14;:47::i;:::-;47456:65;;47532:30;47575:1;47565:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47565:12:6;;;;47532:45;;47645:4;47631:12;47627:23;47621:30;47710:65;47707:1;47703:73;47696:4;47677:17;47673:28;47665:112;47836:63;47833:1;47829:71;47822:4;47803:17;47799:28;47791:110;47960:61;47957:1;47953:69;47946:4;47927:17;47923:28;47915:108;48082:59;48079:1;48075:67;48068:4;48049:17;48045:28;48037:106;48202:57;48199:1;48195:65;48188:4;48169:17;48165:28;48157:104;48320:55;48317:1;48313:63;48306:4;48287:17;48283:28;48275:102;48436:53;48433:1;48429:61;48422:4;48403:17;48399:28;48391:100;48550:51;48547:1;48543:59;48536:4;48517:17;48513:28;48505:98;47597:1017;48624:123;48656:7;48692:17;48711:4;48716:1;48711:7;;;;;;;;;;;48720:15;48727:4;48732:1;48727:7;;;;;;;;;;;48720:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48720:15:6;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;48720:15:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;48720:15:6;;;;;;;;;;;;;;;;48737:4;48742:1;48737:7;;;;;;;;;;;48675:70;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48675:70:6;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48675:70:6;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48675:70:6;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;48675:70:6;;;48665:81;;;;;;48624:31;:123::i;:::-;48765:7;48758:14;;;;;;;;;;;46097:2683;;;;;:::o;38164:151::-;38223:10;38291:5;38279:18;38270:27;;38255:53;;;:::o;12880:208::-;12945:16;13059:21;:19;:21::i;:::-;13052:28;;12880:208;;;:::o;38467:171::-;38547:23;12155:1;12131:26;;12139:3;;;;;;;;;;;12131:26;;;12130:64;;;;12192:1;12163:25;12183:3;;;;;;;;;;;12163:11;:25::i;:::-;:30;12130:64;12126:132;;;12211:35;11777:1;12211:19;:35::i;:::-;;12126:132;12293:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12293:16:6;;;;;;;;;;;;;;;;12272:37;;12280:8;;;;;;;;;;;12272:37;;;12268:108;;12347:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12347:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12347:16:6;;;;;;;;;;;;;;;;12326:8;;:38;;;;;;;;;;;;;;;;;;12268:108;38590:8;;;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;38590:40:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38590:40:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;38590:40:6;;;;;;;;;;;;;;;;38583:47;;38467:171;:::o;55551:707::-;55679:25;55717:14;55744:9;55734:7;:19;55717:36;;55786:9;55772:3;:10;:23;;55764:32;;;;;;55852:6;55866:11;55861:2;:16;55852:25;;55969:6;55983:9;55978:2;:14;55969:23;;56003:227;56034:7;56020:11;56015:2;:16;:26;56010:1;:32;56003:227;;;56115:1;56108:5;56104:13;56098:20;56156:3;56152:1;56147:3;56143:11;56136:24;56068:107;56194:2;56189:7;;;;56216:2;56211:7;;;;56003:227;;;56247:3;56240:10;;;;;55551:707;;;;;;;:::o;35804:384::-;35924:11;12155:1;12131:26;;12139:3;;;;;;;;;;;12131:26;;;12130:64;;;;12192:1;12163:25;12183:3;;;;;;;;;;;12163:11;:25::i;:::-;:30;12130:64;12126:132;;;12211:35;11777:1;12211:19;:35::i;:::-;;12126:132;12293:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12293:16:6;;;;;;;;;;;;;;;;12272:37;;12280:8;;;;;;;;;;;12272:37;;;12268:108;;12347:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12347:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12347:16:6;;;;;;;;;;;;;;;;12326:8;;:38;;;;;;;;;;;;;;;;;;12268:108;35948:22;35985:1;35973:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35948:39;;36011:5;36017:1;36011:8;;;;;;;;;;;35998:7;36006:1;35998:10;;;;;;;;;;;;;:21;;;;36043:5;36049:1;36043:8;;;;;;;;;;;36030:7;36038:1;36030:10;;;;;;;;;;;;;:21;;;;36075:5;36081:1;36075:8;;;;;;;;;;;36062:7;36070:1;36062:10;;;;;;;;;;;;;:21;;;;36107:5;36113:1;36107:8;;;;;;;;;;;36094:7;36102:1;36094:10;;;;;;;;;;;;;:21;;;;36133:47;36148:11;36161:7;36170:9;36133:14;:47::i;:::-;36126:54;;;35804:384;;;;;:::o;48788:154::-;48923:11;48888:22;:32;48911:8;48888:32;;;;;;;;;;;:46;;;;48788:154;;:::o;13372:2070::-;13421:16;13512:1;13454:55;13466:42;13454:11;:55::i;:::-;:59;13450:250;;;13566:42;13540:3;;:69;;;;;;;;;;;;;;;;;;13624:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13684:4;13677:11;;;;13450:250;13772:1;13714:55;13726:42;13714:11;:55::i;:::-;:59;13710:259;;;13834:42;13808:3;;:69;;;;;;;;;;;;;;;;;;13892:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;13953:4;13946:11;;;;13710:259;14041:1;13983:55;13995:42;13983:11;:55::i;:::-;:59;13979:254;;;14101:42;14075:3;;:69;;;;;;;;;;;;;;;;;;14159:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;14217:4;14210:11;;;;13979:254;14305:1;14247:55;14259:42;14247:11;:55::i;:::-;:59;14243:258;;;14367:42;14341:3;;:69;;;;;;;;;;;;;;;;;;14425:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14485:4;14478:11;;;;14243:258;14573:1;14515:55;14527:42;14515:11;:55::i;:::-;:59;14511:256;;;14634:42;14608:3;;:69;;;;;;;;;;;;;;;;;;14692:37;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14751:4;14744:11;;;;14511:256;14839:1;14781:55;14793:42;14781:11;:55::i;:::-;:59;14777:205;;;14901:42;14875:3;;:69;;;;;;;;;;;;;;;;;;14966:4;14959:11;;;;14777:205;15054:1;14996:55;15008:42;14996:11;:55::i;:::-;:59;14992:204;;;15115:42;15089:3;;:69;;;;;;;;;;;;;;;;;;15180:4;15173:11;;;;14992:204;15268:1;15210:55;15222:42;15210:11;:55::i;:::-;:59;15206:206;;;15331:42;15305:3;;:69;;;;;;;;;;;;;;;;;;15396:4;15389:11;;;;15206:206;15429:5;15422:12;;13372:2070;;:::o;30207:461::-;30326:11;12155:1;12131:26;;12139:3;;;;;;;;;;;12131:26;;;12130:64;;;;12192:1;12163:25;12183:3;;;;;;;;;;;12163:11;:25::i;:::-;:30;12130:64;12126:132;;;12211:35;11777:1;12211:19;:35::i;:::-;;12126:132;12293:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12293:16:6;;;;;;;;;;;;;;;;12272:37;;12280:8;;;;;;;;;;;12272:37;;;12268:108;;12347:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12347:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12347:16:6;;;;;;;;;;;;;;;;12326:8;;:38;;;;;;;;;;;;;;;;;;12268:108;30350:10;30363:8;;;;;;;;;;;:17;;;30381:11;30394:9;30363:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30363:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30363:41:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30363:41:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;30363:41:6;;;;;;;;;;;;;;;;30350:54;;30451:9;30437:11;:23;30427:7;:33;30419:5;:41;30415:109;;;30484:1;30477:8;;;;;;;30415:109;30534:17;30554:14;30562:5;30554:7;:14::i;:::-;30534:34;;30586:8;;;;;;;;;;;:28;;;30621:5;30628:1;30631:11;30644:4;30650:9;30586:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30586:74:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30586:74:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30586:74:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30586:74:6;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;30586:74:6;;;;;;;;;;;;;;;;30579:81;;;;12386:1;30207:461;;;;;:::o;13096:127::-;13202:13;13178:21;:37;;;;;;;;;;;;:::i;:::-;;13096:127;:::o;45714:375::-;45775:26;45814:19;:17;:19::i;:::-;45844:24;;:::i;:::-;45879:22;45891:3;45896:4;45879:11;:22::i;:::-;45912:16;:3;:14;:16::i;:::-;45944:6;45953:1;45944:10;;45939:90;45960:4;:11;45956:1;:15;45939:90;;;45993:24;46009:4;46014:1;46009:7;;;;;;;;;;;;;;45993:3;:15;;:24;;;;:::i;:::-;45973:3;;;;;;;45939:90;;;;46039:17;:3;:15;:17::i;:::-;46074:3;:7;;;46067:14;;;45714:375;;;:::o;59205:175::-;59301:4;59295:11;59356:4;59349:5;59345:16;59335:8;59329:4;59320:42;59268:105;:::o;4339:446::-;4414:13;4430:9;4414:25;;4471:1;4465:2;4454:8;:13;;;;;;:18;4450:83;;4518:2;4507:8;:13;;;;;;4501:2;:20;4489:32;;;;4450:83;4559:8;4543:4;:13;;:24;;;;;4657:4;4651:11;4689:3;4683:4;4676:17;4719:1;4714:3;4707:14;4757:8;4752:3;4748:18;4742:4;4735:32;4625:153;;;;:::o;10737:130::-;10809:50;10836:4;8844:1;10809:26;:50::i;:::-;10737:130;:::o;10342:181::-;10436:49;10447:4;8794:1;10471:6;:13;10436:10;:49::i;:::-;10496:19;10508:6;10496:4;:11;;:19;;;;:::i;:::-;;10342:181;;:::o;11009:138::-;11082:57;11109:4;9009:1;11082:26;:57::i;:::-;11009:138;:::o;9765:147::-;9866:38;9900:2;9895:1;9885:6;:11;;;;9884:18;9866:4;:11;;:38;;;;:::i;:::-;9765:147;;:::o;9019:738::-;9131:2;9121:6;:12;9117:633;;9150:42;9184:6;9179:1;9169:6;:11;;;;9168:22;;;9150:4;:11;;:42;;;;:::i;:::-;9117:633;;;9224:4;9214:6;:14;9210:540;;9245:38;9279:2;9274:1;9264:6;:11;;;;9263:18;9245:4;:11;;:38;;;;:::i;:::-;9298:25;9313:6;9321:1;9298:4;:14;;:25;;;;;:::i;:::-;;9210:540;;;9355:6;9345;:16;9341:409;;9378:38;9412:2;9407:1;9397:6;:11;;;;9396:18;9378:4;:11;;:38;;;;:::i;:::-;9431:25;9446:6;9454:1;9431:4;:14;;:25;;;;;:::i;:::-;;9341:409;;;9488:10;9478:6;:20;9474:276;;9515:38;9549:2;9544:1;9534:6;:11;;;;9533:18;9515:4;:11;;:38;;;;:::i;:::-;9568:25;9583:6;9591:1;9568:4;:14;;:25;;;;;:::i;:::-;;9474:276;;;9625:18;9615:6;:28;9611:139;;9660:38;9694:2;9689:1;9679:6;:11;;;;9678:18;9660:4;:11;;:38;;;;:::i;:::-;9713:25;9728:6;9736:1;9713:4;:14;;:25;;;;;:::i;:::-;;9611:139;9474:276;9341:409;9210:540;9117:633;9019:738;;;:::o;5425:1241::-;5504:21;;:::i;:::-;5575:4;:13;;;5557:4;:8;;;:15;5542:5;:12;:30;:46;5538:129;;;5605:50;5612:4;5653:1;5618:32;5622:4;:13;;;5637:5;:12;5618:3;:32::i;:::-;:36;5605:6;:50::i;:::-;5538:129;5677:9;5697:8;5716;5727:5;:12;5716:23;;5794:4;5788:11;5870:6;5864:13;5958:2;5949:6;5941;5937:19;5933:28;5925:36;;6082:5;6076:12;6068:6;6064:25;6056:6;6049:41;6146:2;6139:5;6135:14;6128:21;;5759:401;;6170:212;6183:2;6176:3;:9;6170:212;;6302:3;6296:10;6290:4;6283:24;6344:2;6336:10;;;;6368:2;6361:9;;;;6194:2;6187:9;;;;6170:212;;;6392:9;6424:1;6417:3;6412:2;:8;6404:3;:17;:21;6392:33;;6519:4;6515:9;6509:3;6503:10;6499:26;6572:4;6565;6559:11;6555:22;6617:7;6607:8;6604:21;6598:4;6591:35;6469:168;;6654:4;6647:11;;;;;;5425:1241;;;;:::o;6960:586::-;7060:4;:13;;;7056:1;7038:4;:8;;;:15;:19;:35;7034:99;;;7090:31;7097:4;7119:1;7103:4;:13;;;:17;7090:6;:31::i;:::-;7034:99;7187:4;7181:11;7263:6;7257:13;7355:2;7346:6;7338;7334:19;7330:28;7454:5;7448:4;7440:20;7501:1;7493:6;7489:14;7481:6;7474:30;7152:387;;;;;:::o;7840:748::-;7925:21;;:::i;:::-;7988:4;:13;;;7970:4;:8;;;:15;7963:4;:22;:38;7959:113;;;8018:42;8025:4;8058:1;8031:24;8035:4;:13;;;8050:4;8031:3;:24::i;:::-;:28;8018:6;:42::i;:::-;7959:113;8082:9;8108:1;8101:4;8094:3;:11;:15;8082:27;;8164:4;8158:11;8240:6;8234:13;8332:4;8323:6;8315;8311:19;8307:30;8470:5;8462:4;8458:9;8451:4;8445:11;8441:27;8438:38;8432:4;8425:52;8518:4;8510:6;8506:17;8498:6;8491:33;8129:430;;;8576:4;8569:11;;;7840:748;;;;;:::o;4978:151::-;5031:9;5062:2;5057;:7;5053:49;;;5088:2;5081:9;;;;5053:49;5119:2;5112:9;;4978:151;;;;;:::o;4793:177::-;4869:19;4891:4;:8;;;4869:30;;4910:21;4915:4;4921:9;4910:4;:21::i;:::-;4942:20;4949:4;4955:6;4942;:20::i;:::-;;4793:177;;;:::o;144:1409:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.5.12 < 0.6.0;\r\nimport \"./Ownable.sol\";\r\nimport \"./Storagable.sol\";\r\nimport \"./Winnable.sol\";\r\nimport \"./oracle.sol\";\r\n\r\n\r\n\r\ncontract CoinFlip is Ownable, Storagable, Winnable, oracle{\r\n\r\n\r\n    modifier costs(uint cost){\r\n        require(msg.value >= cost, \"Need at least 0.1 szabo\");\r\n        _;\r\n\r\n\r\n    }\r\n\r\n    uint playerWantingToBet;\r\n    uint additionalFundsNeeded;\r\n    event checkIfBetIsCorrect (string, uint);\r\n\r\n    function depositFunds() public onlyOwner payable returns(uint){\r\n      balance += msg.value;\r\n      return balance;\r\n\r\n    }\r\n\r\n    function placeBet(uint betAmount) public payable costs (10000 wei){\r\n         betAmount = betAmount * 1e15;\r\n\r\n         playerWantingToBet = punters[msg.sender].punterBalance;\r\n\r\n         if (punters[msg.sender].punterBalance > 0 && betAmount >= punters[msg.sender].punterBalance) {\r\n           // playerWantingToBet = punters[msg.sender].punterBalance;\r\n            additionalFundsNeeded = betAmount - playerWantingToBet;\r\n            playerWantingToBet = 0;\r\n\r\n        }\r\n\r\n        else if (punters[msg.sender].punterBalance > 0 && betAmount < punters[msg.sender].punterBalance){\r\n           // playerWantingToBet = punters[msg.sender].punterBalance;\r\n             additionalFundsNeeded = playerWantingToBet - betAmount;\r\n             playerWantingToBet -= additionalFundsNeeded;\r\n        }\r\n\r\n        random(msg.sender,additionalFundsNeeded);\r\n        emit checkIfBetIsCorrect(\"The Punter Balance when betting is \", playerWantingToBet);\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n",
  "sourcePath": "D:/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/CoinFlip.sol",
  "ast": {
    "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/CoinFlip.sol",
    "exportedSymbols": {
      "CoinFlip": [
        141
      ]
    },
    "id": 142,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".12",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:0"
      },
      {
        "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 142,
        "sourceUnit": 200,
        "src": "35:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/Storagable.sol",
        "file": "./Storagable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 142,
        "sourceUnit": 498,
        "src": "60:26:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/Winnable.sol",
        "file": "./Winnable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 142,
        "sourceUnit": 614,
        "src": "88:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/oracle.sol",
        "file": "./oracle.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 142,
        "sourceUnit": 757,
        "src": "114:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 199,
              "src": "165:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$199",
                "typeString": "contract Ownable"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "165:7:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "Storagable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 497,
              "src": "174:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Storagable_$497",
                "typeString": "contract Storagable"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "174:10:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "Winnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 613,
              "src": "186:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Winnable_$613",
                "typeString": "contract Winnable"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "186:8:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "oracle",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 756,
              "src": "196:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_oracle_$756",
                "typeString": "contract oracle"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "196:6:0"
          }
        ],
        "contractDependencies": [
          199,
          497,
          613,
          756,
          7052
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 141,
        "linearizedBaseContracts": [
          141,
          756,
          613,
          497,
          199,
          7052
        ],
        "name": "CoinFlip",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "238:88:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 18,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7067,
                            "src": "257:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 19,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "257:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 20,
                          "name": "cost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "270:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "257:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e656564206174206c6561737420302e3120737a61626f",
                        "id": 22,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "276:25:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4af9c2b541dd5a9595c9191c1e7852c5782a43dfbf68fbcdd2472acdc1ffdcaf",
                          "typeString": "literal_string \"Need at least 0.1 szabo\""
                        },
                        "value": "Need at least 0.1 szabo"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4af9c2b541dd5a9595c9191c1e7852c5782a43dfbf68fbcdd2472acdc1ffdcaf",
                          "typeString": "literal_string \"Need at least 0.1 szabo\""
                        }
                      ],
                      "id": 17,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7070,
                        7071
                      ],
                      "referencedDeclaration": 7071,
                      "src": "249:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "249:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "249:53:0"
                },
                {
                  "id": 25,
                  "nodeType": "PlaceholderStatement",
                  "src": "313:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 27,
            "name": "costs",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "name": "cost",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "228:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "228:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "227:11:0"
            },
            "src": "213:113:0",
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 29,
            "name": "playerWantingToBet",
            "nodeType": "VariableDeclaration",
            "scope": 141,
            "src": "334:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "334:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 31,
            "name": "additionalFundsNeeded",
            "nodeType": "VariableDeclaration",
            "scope": 141,
            "src": "364:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 30,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "364:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37,
            "name": "checkIfBetIsCorrect",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "424:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "424:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "indexed": false,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "432:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "432:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "423:14:0"
            },
            "src": "397:41:0"
          },
          {
            "body": {
              "id": 51,
              "nodeType": "Block",
              "src": "508:62:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 44,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "517:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 45,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7067,
                        "src": "528:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "528:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "517:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "517:20:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 49,
                    "name": "balance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 229,
                    "src": "553:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 43,
                  "id": 50,
                  "nodeType": "Return",
                  "src": "546:14:0"
                }
              ]
            },
            "documentation": null,
            "id": 52,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 40,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 39,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 189,
                  "src": "477:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "477:9:0"
              }
            ],
            "name": "depositFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "467:2:0"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "503:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "502:6:0"
            },
            "scope": 141,
            "src": "446:124:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 139,
              "nodeType": "Block",
              "src": "644:884:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 60,
                      "name": "betAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "656:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 63,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 61,
                        "name": "betAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "668:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31653135",
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "680:4:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000_by_1",
                          "typeString": "int_const 1000000000000000"
                        },
                        "value": "1e15"
                      },
                      "src": "668:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "656:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "656:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 66,
                      "name": "playerWantingToBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "698:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 67,
                          "name": "punters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 241,
                          "src": "719:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_punter_$227_storage_$",
                            "typeString": "mapping(address => struct Storagable.punter storage ref)"
                          }
                        },
                        "id": 70,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 68,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7067,
                            "src": "727:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "727:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "719:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_punter_$227_storage",
                          "typeString": "struct Storagable.punter storage ref"
                        }
                      },
                      "id": 71,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "punterBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 222,
                      "src": "719:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "698:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "698:54:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 74,
                            "name": "punters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 241,
                            "src": "770:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_punter_$227_storage_$",
                              "typeString": "mapping(address => struct Storagable.punter storage ref)"
                            }
                          },
                          "id": 77,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 75,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7067,
                              "src": "778:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 76,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "778:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "770:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_punter_$227_storage",
                            "typeString": "struct Storagable.punter storage ref"
                          }
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "punterBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 222,
                        "src": "770:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "806:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "770:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 87,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 81,
                        "name": "betAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "811:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 82,
                            "name": "punters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 241,
                            "src": "824:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_punter_$227_storage_$",
                              "typeString": "mapping(address => struct Storagable.punter storage ref)"
                            }
                          },
                          "id": 85,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 83,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7067,
                              "src": "832:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 84,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "832:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "824:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_punter_$227_storage",
                            "typeString": "struct Storagable.punter storage ref"
                          }
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "punterBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 222,
                        "src": "824:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "811:46:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "770:87:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 100,
                              "name": "punters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 241,
                              "src": "1071:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_punter_$227_storage_$",
                                "typeString": "mapping(address => struct Storagable.punter storage ref)"
                              }
                            },
                            "id": 103,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 101,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7067,
                                "src": "1079:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1079:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1071:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_punter_$227_storage",
                              "typeString": "struct Storagable.punter storage ref"
                            }
                          },
                          "id": 104,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "punterBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 222,
                          "src": "1071:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1107:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1071:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 107,
                          "name": "betAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "1112:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 108,
                              "name": "punters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 241,
                              "src": "1124:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_punter_$227_storage_$",
                                "typeString": "mapping(address => struct Storagable.punter storage ref)"
                              }
                            },
                            "id": 111,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 109,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7067,
                                "src": "1132:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1132:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1124:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_punter_$227_storage",
                              "typeString": "struct Storagable.punter storage ref"
                            }
                          },
                          "id": 112,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "punterBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 222,
                          "src": "1124:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1112:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1071:86:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 126,
                    "nodeType": "IfStatement",
                    "src": "1067:303:0",
                    "trueBody": {
                      "id": 125,
                      "nodeType": "Block",
                      "src": "1158:212:0",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 115,
                              "name": "additionalFundsNeeded",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "1245:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 118,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 116,
                                "name": "playerWantingToBet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29,
                                "src": "1269:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 117,
                                "name": "betAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54,
                                "src": "1290:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1269:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1245:54:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 120,
                          "nodeType": "ExpressionStatement",
                          "src": "1245:54:0"
                        },
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 121,
                              "name": "playerWantingToBet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "1315:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "-=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "id": 122,
                              "name": "additionalFundsNeeded",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "1337:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1315:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 124,
                          "nodeType": "ExpressionStatement",
                          "src": "1315:43:0"
                        }
                      ]
                    }
                  },
                  "id": 127,
                  "nodeType": "IfStatement",
                  "src": "766:604:0",
                  "trueBody": {
                    "id": 99,
                    "nodeType": "Block",
                    "src": "859:191:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 89,
                            "name": "additionalFundsNeeded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "945:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 92,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 90,
                              "name": "betAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "969:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 91,
                              "name": "playerWantingToBet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "981:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "969:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "945:54:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 94,
                        "nodeType": "ExpressionStatement",
                        "src": "945:54:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 95,
                            "name": "playerWantingToBet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "1014:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 96,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1035:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1014:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 98,
                        "nodeType": "ExpressionStatement",
                        "src": "1014:22:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 129,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7067,
                          "src": "1389:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1389:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 131,
                        "name": "additionalFundsNeeded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "1400:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 128,
                      "name": "random",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 755,
                      "src": "1382:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1382:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "1382:40:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652050756e7465722042616c616e6365207768656e2062657474696e6720697320",
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1458:37:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_621ed4bd611418fb958ee9ad26f6bd5ff09b2e96b14da15950c25b47a8526bc1",
                          "typeString": "literal_string \"The Punter Balance when betting is \""
                        },
                        "value": "The Punter Balance when betting is "
                      },
                      {
                        "argumentTypes": null,
                        "id": 136,
                        "name": "playerWantingToBet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "1497:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_621ed4bd611418fb958ee9ad26f6bd5ff09b2e96b14da15950c25b47a8526bc1",
                          "typeString": "literal_string \"The Punter Balance when betting is \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 134,
                      "name": "checkIfBetIsCorrect",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "1438:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1438:78:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138,
                  "nodeType": "EmitStatement",
                  "src": "1433:83:0"
                }
              ]
            },
            "documentation": null,
            "id": 140,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "3130303030",
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "634:9:0",
                    "subdenomination": "wei",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000_by_1",
                      "typeString": "int_const 10000"
                    },
                    "value": "10000"
                  }
                ],
                "id": 58,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 56,
                  "name": "costs",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 27,
                  "src": "627:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "627:17:0"
              }
            ],
            "name": "placeBet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "name": "betAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "596:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "596:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "595:16:0"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "644:0:0"
            },
            "scope": 141,
            "src": "578:950:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 142,
        "src": "144:1409:0"
      }
    ],
    "src": "0:1555:0"
  },
  "legacyAST": {
    "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/CoinFlip.sol",
    "exportedSymbols": {
      "CoinFlip": [
        141
      ]
    },
    "id": 142,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".12",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:0"
      },
      {
        "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 142,
        "sourceUnit": 200,
        "src": "35:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/Storagable.sol",
        "file": "./Storagable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 142,
        "sourceUnit": 498,
        "src": "60:26:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/Winnable.sol",
        "file": "./Winnable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 142,
        "sourceUnit": 614,
        "src": "88:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/oracle.sol",
        "file": "./oracle.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 142,
        "sourceUnit": 757,
        "src": "114:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 199,
              "src": "165:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$199",
                "typeString": "contract Ownable"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "165:7:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "Storagable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 497,
              "src": "174:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Storagable_$497",
                "typeString": "contract Storagable"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "174:10:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "Winnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 613,
              "src": "186:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Winnable_$613",
                "typeString": "contract Winnable"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "186:8:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "oracle",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 756,
              "src": "196:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_oracle_$756",
                "typeString": "contract oracle"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "196:6:0"
          }
        ],
        "contractDependencies": [
          199,
          497,
          613,
          756,
          7052
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 141,
        "linearizedBaseContracts": [
          141,
          756,
          613,
          497,
          199,
          7052
        ],
        "name": "CoinFlip",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "238:88:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 18,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7067,
                            "src": "257:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 19,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "257:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 20,
                          "name": "cost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "270:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "257:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e656564206174206c6561737420302e3120737a61626f",
                        "id": 22,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "276:25:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4af9c2b541dd5a9595c9191c1e7852c5782a43dfbf68fbcdd2472acdc1ffdcaf",
                          "typeString": "literal_string \"Need at least 0.1 szabo\""
                        },
                        "value": "Need at least 0.1 szabo"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4af9c2b541dd5a9595c9191c1e7852c5782a43dfbf68fbcdd2472acdc1ffdcaf",
                          "typeString": "literal_string \"Need at least 0.1 szabo\""
                        }
                      ],
                      "id": 17,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7070,
                        7071
                      ],
                      "referencedDeclaration": 7071,
                      "src": "249:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "249:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "249:53:0"
                },
                {
                  "id": 25,
                  "nodeType": "PlaceholderStatement",
                  "src": "313:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 27,
            "name": "costs",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "name": "cost",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "228:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "228:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "227:11:0"
            },
            "src": "213:113:0",
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 29,
            "name": "playerWantingToBet",
            "nodeType": "VariableDeclaration",
            "scope": 141,
            "src": "334:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "334:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 31,
            "name": "additionalFundsNeeded",
            "nodeType": "VariableDeclaration",
            "scope": 141,
            "src": "364:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 30,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "364:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37,
            "name": "checkIfBetIsCorrect",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "424:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "424:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "indexed": false,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "432:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "432:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "423:14:0"
            },
            "src": "397:41:0"
          },
          {
            "body": {
              "id": 51,
              "nodeType": "Block",
              "src": "508:62:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 44,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "517:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 45,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7067,
                        "src": "528:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "528:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "517:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "517:20:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 49,
                    "name": "balance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 229,
                    "src": "553:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 43,
                  "id": 50,
                  "nodeType": "Return",
                  "src": "546:14:0"
                }
              ]
            },
            "documentation": null,
            "id": 52,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 40,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 39,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 189,
                  "src": "477:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "477:9:0"
              }
            ],
            "name": "depositFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "467:2:0"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "503:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "502:6:0"
            },
            "scope": 141,
            "src": "446:124:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 139,
              "nodeType": "Block",
              "src": "644:884:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 60,
                      "name": "betAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "656:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 63,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 61,
                        "name": "betAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "668:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31653135",
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "680:4:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000_by_1",
                          "typeString": "int_const 1000000000000000"
                        },
                        "value": "1e15"
                      },
                      "src": "668:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "656:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "656:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 66,
                      "name": "playerWantingToBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "698:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 67,
                          "name": "punters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 241,
                          "src": "719:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_punter_$227_storage_$",
                            "typeString": "mapping(address => struct Storagable.punter storage ref)"
                          }
                        },
                        "id": 70,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 68,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7067,
                            "src": "727:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "727:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "719:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_punter_$227_storage",
                          "typeString": "struct Storagable.punter storage ref"
                        }
                      },
                      "id": 71,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "punterBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 222,
                      "src": "719:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "698:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "698:54:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 74,
                            "name": "punters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 241,
                            "src": "770:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_punter_$227_storage_$",
                              "typeString": "mapping(address => struct Storagable.punter storage ref)"
                            }
                          },
                          "id": 77,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 75,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7067,
                              "src": "778:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 76,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "778:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "770:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_punter_$227_storage",
                            "typeString": "struct Storagable.punter storage ref"
                          }
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "punterBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 222,
                        "src": "770:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "806:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "770:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 87,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 81,
                        "name": "betAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "811:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 82,
                            "name": "punters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 241,
                            "src": "824:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_punter_$227_storage_$",
                              "typeString": "mapping(address => struct Storagable.punter storage ref)"
                            }
                          },
                          "id": 85,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 83,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7067,
                              "src": "832:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 84,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "832:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "824:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_punter_$227_storage",
                            "typeString": "struct Storagable.punter storage ref"
                          }
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "punterBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 222,
                        "src": "824:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "811:46:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "770:87:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 100,
                              "name": "punters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 241,
                              "src": "1071:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_punter_$227_storage_$",
                                "typeString": "mapping(address => struct Storagable.punter storage ref)"
                              }
                            },
                            "id": 103,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 101,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7067,
                                "src": "1079:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1079:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1071:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_punter_$227_storage",
                              "typeString": "struct Storagable.punter storage ref"
                            }
                          },
                          "id": 104,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "punterBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 222,
                          "src": "1071:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1107:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1071:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 107,
                          "name": "betAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "1112:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 108,
                              "name": "punters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 241,
                              "src": "1124:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_punter_$227_storage_$",
                                "typeString": "mapping(address => struct Storagable.punter storage ref)"
                              }
                            },
                            "id": 111,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 109,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7067,
                                "src": "1132:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1132:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1124:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_punter_$227_storage",
                              "typeString": "struct Storagable.punter storage ref"
                            }
                          },
                          "id": 112,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "punterBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 222,
                          "src": "1124:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1112:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1071:86:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 126,
                    "nodeType": "IfStatement",
                    "src": "1067:303:0",
                    "trueBody": {
                      "id": 125,
                      "nodeType": "Block",
                      "src": "1158:212:0",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 115,
                              "name": "additionalFundsNeeded",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "1245:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 118,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 116,
                                "name": "playerWantingToBet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29,
                                "src": "1269:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 117,
                                "name": "betAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54,
                                "src": "1290:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1269:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1245:54:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 120,
                          "nodeType": "ExpressionStatement",
                          "src": "1245:54:0"
                        },
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 121,
                              "name": "playerWantingToBet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "1315:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "-=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "id": 122,
                              "name": "additionalFundsNeeded",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "1337:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1315:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 124,
                          "nodeType": "ExpressionStatement",
                          "src": "1315:43:0"
                        }
                      ]
                    }
                  },
                  "id": 127,
                  "nodeType": "IfStatement",
                  "src": "766:604:0",
                  "trueBody": {
                    "id": 99,
                    "nodeType": "Block",
                    "src": "859:191:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 89,
                            "name": "additionalFundsNeeded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "945:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 92,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 90,
                              "name": "betAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "969:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 91,
                              "name": "playerWantingToBet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "981:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "969:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "945:54:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 94,
                        "nodeType": "ExpressionStatement",
                        "src": "945:54:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 95,
                            "name": "playerWantingToBet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "1014:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 96,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1035:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1014:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 98,
                        "nodeType": "ExpressionStatement",
                        "src": "1014:22:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 129,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7067,
                          "src": "1389:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1389:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 131,
                        "name": "additionalFundsNeeded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "1400:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 128,
                      "name": "random",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 755,
                      "src": "1382:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1382:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "1382:40:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652050756e7465722042616c616e6365207768656e2062657474696e6720697320",
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1458:37:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_621ed4bd611418fb958ee9ad26f6bd5ff09b2e96b14da15950c25b47a8526bc1",
                          "typeString": "literal_string \"The Punter Balance when betting is \""
                        },
                        "value": "The Punter Balance when betting is "
                      },
                      {
                        "argumentTypes": null,
                        "id": 136,
                        "name": "playerWantingToBet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "1497:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_621ed4bd611418fb958ee9ad26f6bd5ff09b2e96b14da15950c25b47a8526bc1",
                          "typeString": "literal_string \"The Punter Balance when betting is \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 134,
                      "name": "checkIfBetIsCorrect",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "1438:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1438:78:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138,
                  "nodeType": "EmitStatement",
                  "src": "1433:83:0"
                }
              ]
            },
            "documentation": null,
            "id": 140,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "3130303030",
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "634:9:0",
                    "subdenomination": "wei",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000_by_1",
                      "typeString": "int_const 10000"
                    },
                    "value": "10000"
                  }
                ],
                "id": 58,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 56,
                  "name": "costs",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 27,
                  "src": "627:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "627:17:0"
              }
            ],
            "name": "placeBet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "name": "betAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "596:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "596:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "595:16:0"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "644:0:0"
            },
            "scope": 141,
            "src": "578:950:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 142,
        "src": "144:1409:0"
      }
    ],
    "src": "0:1555:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0xc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c47389": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "name": "LogNewProvableQuery",
          "type": "event",
          "signature": "0xc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c47389"
        },
        "0x7f286286ddac21458cfcd9160c74a2bb53f361388c342a089321237fb3e21a24": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "checkBalance",
          "type": "event",
          "signature": "0x7f286286ddac21458cfcd9160c74a2bb53f361388c342a089321237fb3e21a24"
        },
        "0xb471f40a10881404b70a4f7819c075d0ae5fec92ae9454b1ccdad5c0fe9a6ab2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "checkBalance",
          "type": "event",
          "signature": "0xb471f40a10881404b70a4f7819c075d0ae5fec92ae9454b1ccdad5c0fe9a6ab2"
        },
        "0x23f0e69628915e8fb8a89f2a6a2ec30e1ce0bdf0425ba6047a868902718b9f38": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "checkIfBetIsCorrect",
          "type": "event",
          "signature": "0x23f0e69628915e8fb8a89f2a6a2ec30e1ce0bdf0425ba6047a868902718b9f38"
        },
        "0xa3c1c9e897beaade9e73a3a0976777a38c29c8ccf556641ceeb8f43e5181be12": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "whatHappened",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "funds",
              "type": "uint256"
            }
          ],
          "name": "depositedFunds",
          "type": "event",
          "signature": "0xa3c1c9e897beaade9e73a3a0976777a38c29c8ccf556641ceeb8f43e5181be12"
        },
        "0xc13d60fe9dffdb6908d2d446cd18134373a51db0738ee04f296eeb9128121cbc": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "randomNumber",
              "type": "uint256"
            }
          ],
          "name": "generatedRandomNumber",
          "type": "event",
          "signature": "0xc13d60fe9dffdb6908d2d446cd18134373a51db0738ee04f296eeb9128121cbc"
        },
        "0x5e35a070670d9d1b09ecfeeae77ca75380c3bf10808c2cc6ae99b217977e09bd": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "a",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "q_id",
              "type": "bytes32"
            }
          ],
          "name": "idCheck",
          "type": "event",
          "signature": "0x5e35a070670d9d1b09ecfeeae77ca75380c3bf10808c2cc6ae99b217977e09bd"
        },
        "0x888f4fb33f1429a5c0e82c8ca8b08617833224470b7efbaf5cb4d0b00e695e65": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "whatHappened",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "funds",
              "type": "uint256"
            }
          ],
          "name": "withDrewFunds",
          "type": "event",
          "signature": "0x888f4fb33f1429a5c0e82c8ca8b08617833224470b7efbaf5cb4d0b00e695e65"
        },
        "0xdbc743cebacba388691ee70a334a0faaee0490d78d1e3be2ba9081622471cdad": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "youLose",
          "type": "event",
          "signature": "0xdbc743cebacba388691ee70a334a0faaee0490d78d1e3be2ba9081622471cdad"
        },
        "0x7e7d5e50adfbb4e81427323125a4d6250cf27f8b49ff7305f48c9fcb4d2525ea": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "youWin",
          "type": "event",
          "signature": "0x7e7d5e50adfbb4e81427323125a4d6250cf27f8b49ff7305f48c9fcb4d2525ea"
        }
      },
      "links": {},
      "address": "0x8193c39eFd9Ba40B19e6a5A35139789a2B55f5A1",
      "transactionHash": "0x23c0622c2f620b261221b6f2b142345db3dd286a426e8e00ae2b6f9dd18cbdbe"
    },
    "5777": {
      "events": {
        "0xdbc743cebacba388691ee70a334a0faaee0490d78d1e3be2ba9081622471cdad": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "youLose",
          "type": "event"
        },
        "0x7e7d5e50adfbb4e81427323125a4d6250cf27f8b49ff7305f48c9fcb4d2525ea": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "youWin",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x49e3Bb1DdBd463E3A74Fd8FB306179f4fAf8E0d0",
      "transactionHash": "0x300bde5fef7b2f549caebb4a4660e9bf0bb7fac9ddbd1cdebce7ff573e5dff96"
    }
  },
  "schemaVersion": "3.0.16",
  "updatedAt": "2020-10-31T05:16:05.838Z",
  "devdoc": {
    "methods": {
      "__callback(bytes32,string)": {
        "details": "The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}
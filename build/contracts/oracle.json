{
  "contractName": "oracle",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "LogNewProvableQuery",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "checkBalance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "whatHappened",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "funds",
          "type": "uint256"
        }
      ],
      "name": "depositedFunds",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "randomNumber",
          "type": "uint256"
        }
      ],
      "name": "generatedRandomNumber",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "a",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "q_id",
          "type": "bytes32"
        }
      ],
      "name": "idCheck",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "whatHappened",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "funds",
          "type": "uint256"
        }
      ],
      "name": "withDrewFunds",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "youLose",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "youWin",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "n_player",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_betAmount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "q_id",
          "type": "bytes32"
        }
      ],
      "name": "createPlayer",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "depositPunterFunds",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getPunterBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "latestNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "numberCalled",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "q_id",
          "type": "bytes32"
        }
      ],
      "name": "saveResults",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawPunterBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "punter",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_queryId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_betAmount",
          "type": "uint256"
        }
      ],
      "name": "random",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"LogNewProvableQuery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"checkBalance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"whatHappened\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"funds\",\"type\":\"uint256\"}],\"name\":\"depositedFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"randomNumber\",\"type\":\"uint256\"}],\"name\":\"generatedRandomNumber\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"a\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"q_id\",\"type\":\"bytes32\"}],\"name\":\"idCheck\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"whatHappened\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"funds\",\"type\":\"uint256\"}],\"name\":\"withDrewFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"youLose\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"youWin\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"punter\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"n_player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_betAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"q_id\",\"type\":\"bytes32\"}],\"name\":\"createPlayer\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"depositPunterFunds\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getPunterBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"latestNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_betAmount\",\"type\":\"uint256\"}],\"name\":\"random\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numberCalled\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"q_id\",\"type\":\"bytes32\"}],\"name\":\"saveResults\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawPunterBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"__callback(bytes32,string)\":{\"details\":\"The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/oracle.sol\":\"oracle\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/Ownable.sol\":{\"keccak256\":\"0x933d3b74faed1f2e02c4d24e12b88b080203bf8862de1ffd5b4082f66cafbc75\",\"urls\":[\"bzz-raw://f92431d08e0e13c06d1bca6a6b12c2d434e48b0029fa9f3635e3ec4c0c937a2d\",\"dweb:/ipfs/QmexuenmxTwbnGP5d6enhScFjMuLTospfGczoLFUyAqX7H\"]},\"/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/Storagable.sol\":{\"keccak256\":\"0x532282e5c86dc01a96f2accd71b52b8cdfe15f5962527b216b23a8601a0da445\",\"urls\":[\"bzz-raw://e3be515b18d96ebb736a81866a9eacb4c13cad25e8da2f47b2d0cc9d5f920d7b\",\"dweb:/ipfs/Qmds2XkGNSAzvJfNk7PKS9WqLsTefjdsmhdZ6oetNd8RYj\"]},\"/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/Winnable.sol\":{\"keccak256\":\"0x64f70fccea174c765347f9f44d1901a15bb002752f19252673391f9d46567781\",\"urls\":[\"bzz-raw://6cee56111a4ed8dcfb6a1b28bb636e7ee375a70ef4bc7004d98cc6bbc11f127c\",\"dweb:/ipfs/QmNaDoPS35CWFgNLLanAjvLsvGRKDjjwyBdS6Hz3L1dqkD\"]},\"/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/oracle.sol\":{\"keccak256\":\"0x5037b27e5dc220b0e1047dab63c2faa1c2a2c467554c40fe2072cf0287b9ff38\",\"urls\":[\"bzz-raw://19d7a2c1d36285b0cc3318da3b836a60953bd87025cd161a44ab44f9a94160a3\",\"dweb:/ipfs/QmUgWreDPVb9CHCNcYnNAg1pg8cN7kvQ3jSFgiyCNUcTes\"]},\"/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/provableAPI.sol\":{\"keccak256\":\"0x6988135f2d9e695931e5efe9ad1b3ba859e0d2949d984eaaf787e038e09cab00\",\"urls\":[\"bzz-raw://a0846a0117c7e1f1a9957c8f011d875708ec1f7380286d2af58502b73f4da7d4\",\"dweb:/ipfs/QmYWTc5MLUXJra934htUjaikBB5QESXh9cMio7CdaXEB3e\"]}},\"version\":1}",
  "bytecode": "0x608060405233600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506132cd806100546000396000f3fe6080604052600436106100c25760003560e01c8063adcf72901161007f578063bfab3db911610059578063bfab3db914610552578063d79f5ec51461057d578063dc34b0aa146105c2578063fab4a46d146105ed576100c2565b8063adcf729014610407578063b69ef8a8146104f9578063b863bd3714610524576100c2565b806327dc297e146100c757806332a1b7641461019957806338bbfa50146101c45780634ff540d41461032d5780638da5cb5b146103585780638f86456b146103af575b600080fd5b3480156100d357600080fd5b50610197600480360360408110156100ea57600080fd5b81019080803590602001909291908035906020019064010000000081111561011157600080fd5b82018360208201111561012357600080fd5b8035906020019184600183028401116401000000008311171561014557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506105f7565b005b3480156101a557600080fd5b506101ae61063a565b6040518082815260200191505060405180910390f35b3480156101d057600080fd5b5061032b600480360360608110156101e757600080fd5b81019080803590602001909291908035906020019064010000000081111561020e57600080fd5b82018360208201111561022057600080fd5b8035906020019184600183028401116401000000008311171561024257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102a557600080fd5b8201836020820111156102b757600080fd5b803590602001918460018302840111640100000000831117156102d957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506107c7565b005b34801561033957600080fd5b506103426107ea565b6040518082815260200191505060405180910390f35b34801561036457600080fd5b5061036d6108f7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610405600480360360608110156103c557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919050505061091d565b005b34801561041357600080fd5b506104f76004803603606081101561042a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561047157600080fd5b82018360208201111561048357600080fd5b803590602001918460018302840111640100000000831117156104a557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610a26565b005b34801561050557600080fd5b5061050e610b9d565b6040518082815260200191505060405180910390f35b6105506004803603602081101561053a57600080fd5b8101908080359060200190929190505050610ba3565b005b34801561055e57600080fd5b50610567610c8f565b6040518082815260200191505060405180910390f35b34801561058957600080fd5b506105c0600480360360408110156105a057600080fd5b810190808035906020019092919080359060200190929190505050610d48565b005b3480156105ce57600080fd5b506105d7610de5565b6040518082815260200191505060405180910390f35b6105f5610deb565b005b610636828260006040519080825280601f01601f1916602001820160405280156106305781602001600182028038833980820191505090505b506107c7565b5050565b600080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490507fb471f40a10881404b70a4f7819c075d0ae5fec92ae9454b1ccdad5c0fe9a6ab28182604051808381526020018281526020019250505060405180910390a16000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561074f573d6000803e3d6000fd5b507f888f4fb33f1429a5c0e82c8ca8b08617833224470b7efbaf5cb4d0b00e695e658160405180806020018381526020018281038252600d8152602001807f596f7520776974686472657720000000000000000000000000000000000000008152506020019250505060405180910390a18091505090565b6000801b600360008060001b815260200190815260200160002081905550505050565b60007fb471f40a10881404b70a4f7819c075d0ae5fec92ae9454b1ccdad5c0fe9a6ab2600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154604051808381526020018281526020019250505060405180910390a1600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6109256130e4565b83816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505082816020018181525050806007600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015590505081600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555050505050565b610a2e611024565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a6557600080fd5b60006002826040516020018082805190602001908083835b60208310610aa05780518252602082019150602081019050602083039250610a7d565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c81610ae557fe5b06905080600a819055507fc13d60fe9dffdb6908d2d446cd18134373a51db0738ee04f296eeb9128121cbc816040518082815260200191505060405180910390a1610b32600a5484610d48565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002050610b7c8484611341565b50600760008481526020019081526020016000206002016000905550505050565b60065481565b6000809050600062030d4090506000610bbe8360018461154c565b9050349350610bce33858361091d565b7f5e35a070670d9d1b09ecfeeae77ca75380c3bf10808c2cc6ae99b217977e09bd816040518080602001838152602001828103825260178152602001807f546865204944206f6620746869732063616c6c206973200000000000000000008152506020019250505060405180910390a17fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c473896040518080602001828103825260348152602001806132656034913960400191505060405180910390a150505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ceb57600080fd5b6000600654905060006006819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610d40573d6000803e3d6000fd5b508091505090565b610d5061311e565b82816000018181525050818160400181815250506001831415610d83576001816020019015159081151581525050610d95565b60008160200190151590811515815250505b80600860008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555060408201518160020155905050505050565b600a5481565b610df3613144565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154816020018181525050600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015481604001818152505080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015590505034600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825401925050819055507fa3c1c9e897beaade9e73a3a0976777a38c29c8ccf556641ceeb8f43e5181be123460405180806020018381526020018281038252600e8152602001807f596f75206465706f7369746564200000000000000000000000000000000000008152506020019250505060405180910390a150565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806110ac575060006110aa600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611ae7565b145b156110bd576110bb6000611af2565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561112757600080fd5b505af115801561113b573d6000803e3d6000fd5b505050506040513d602081101561115157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461129a57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561121f57600080fd5b505af1158015611233573d6000803e3d6000fd5b505050506040513d602081101561124957600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561130157600080fd5b505afa158015611315573d6000803e3d6000fd5b505050506040513d602081101561132b57600080fd5b8101908080519060200190929190505050905090565b6000806008600084815260200190815260200160002060010160009054906101000a900460ff16905060006007600085815260200190815260200160002060010154905060011515821515148061139c575060001515821515145b156114bf5760006002820290506000600960008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905081810190507fb471f40a10881404b70a4f7819c075d0ae5fec92ae9454b1ccdad5c0fe9a6ab28382604051808381526020018281526020019250505060405180910390a1826006600082825403925050819055507f7e7d5e50adfbb4e81427323125a4d6250cf27f8b49ff7305f48c9fcb4d2525ea826040518080602001838152602001828103825260088152602001807f596f7520776f6e200000000000000000000000000000000000000000000000008152506020019250505060405180910390a1600091505050611540565b806006600082825401925050819055507fdbc743cebacba388691ee70a334a0faaee0490d78d1e3be2ba9081622471cdad816040518080602001838152602001828103825260098152602001807f596f75206c6f73742000000000000000000000000000000000000000000000008152506020019250505060405180910390a15b60009050505092915050565b6000808311801561155e575060208311155b61156757600080fd5b600a84029350606060016040519080825280601f01601f1916602001820160405280156115a35781602001600182028038833980820191505090505b5090508360f81b816000815181106115b757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f19166020018201604052801561161c5781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f1916602001820160405280156116555781602001600182028038833980820191505090505b5090506000611662611b03565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f1916602001820160405280156116b65781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f1916602001820160405280156116f55781602001600182028038833980820191505090505b5090506117088260186008846000611e20565b5061171161317e565b604051806080016040528087815260200188815260200186815260200184815250905060006117766040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c611e7f565b9050606060086040519080825280601f01601f1916602001820160405280156117ae5781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a010000000000000000000000000000000000000000000000000000810460228301537901000000000000000000000000000000000000000000000000008104602183015378010000000000000000000000000000000000000000000000008104602083015350611ad48282856001600481106118ed57fe5b602002015160028760006004811061190157fe5b60200201516040518082805190602001908083835b602083106119395780518252602082019150602081019050602083039250611916565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa15801561197b573d6000803e3d6000fd5b5050506040513d602081101561199057600080fd5b8101908080519060200190929190505050876002600481106119ae57fe5b60200201516040516020018085805190602001908083835b602083106119e957805182526020820191506020810190506020830392506119c6565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b60208310611a3a5780518252602082019150602081019050602083039250611a17565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b60208310611a915780518252602082019150602081019050602083039250611a6e565b6001836020036101000a038019825116818451168082178552505050505050905001945050505050604051602081830303815290604052805190602001206121ec565b8199505050505050505050509392505050565b6000813b9050919050565b6000611afc612208565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611b8b57506000611b89600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611ae7565b145b15611b9c57611b9a6000611af2565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611c0657600080fd5b505af1158015611c1a573d6000803e3d6000fd5b505050506040513d6020811015611c3057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611d7957600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cfe57600080fd5b505af1158015611d12573d6000803e3d6000fd5b505050506040513d6020811015611d2857600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b158015611de057600080fd5b505afa158015611df4573d6000803e3d6000fd5b505050506040513d6020811015611e0a57600080fd5b8101908080519060200190929190505050905090565b6060600082850190508084511015611e3757600080fd5b600086602001905060008460200190505b868860200101821015611e705781890151808288015250602082019150602081019050611e48565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611f0757506000611f05600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611ae7565b145b15611f1857611f166000611af2565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611f8257600080fd5b505af1158015611f96573d6000803e3d6000fd5b505050506040513d6020811015611fac57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146120f557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561207a57600080fd5b505af115801561208e573d6000803e3d6000fd5b505050506040513d60208110156120a457600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6060600460405190808252806020026020018201604052801561212c57816020015b60608152602001906001900390816121175790505b5090508360006004811061213c57fe5b60200201518160008151811061214e57fe5b60200260200101819052508360016004811061216657fe5b60200201518160018151811061217857fe5b60200260200101819052508360026004811061219057fe5b6020020151816002815181106121a257fe5b6020026020010181905250836003600481106121ba57fe5b6020020151816003815181106121cc57fe5b60200260200101819052506121e285828561275f565b9150509392505050565b8060036000848152602001908152602001600020819055505050565b600080612228731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611ae7565b11156122ca57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506122c16040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250612cc1565b6001905061275c565b60006122e973c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611ae7565b111561238b5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506123826040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250612cc1565b6001905061275c565b60006123aa73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611ae7565b111561244c5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506124436040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250612cc1565b6001905061275c565b600061246b73146500cfd35b22e4a392fe0adc06de1a1368ed48611ae7565b111561250d5773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506125046040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250612cc1565b6001905061275c565b600061252c73a2998efd205fb9d4b4963afb70778d6354ad3a41611ae7565b11156125ce5773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506125c56040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250612cc1565b6001905061275c565b60006125ed736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611ae7565b111561265157736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061275c565b60006126707320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611ae7565b11156126d4577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061275c565b60006126f37351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611ae7565b1115612757577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061275c565b600090505b90565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806127e7575060006127e5600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611ae7565b145b156127f8576127f66000611af2565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561286257600080fd5b505af1158015612876573d6000803e3d6000fd5b505050506040513d602081101561288c57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146129d557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561295a57600080fd5b505af115801561296e573d6000803e3d6000fd5b505050506040513d602081101561298457600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015612a6b578082015181840152602081019050612a50565b50505050905090810190601f168015612a985780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015612ab857600080fd5b505af1158015612acc573d6000803e3d6000fd5b505050506040513d6020811015612ae257600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a764000001811115612b15576000801b915050612cba565b6060612b2085612cdb565b90506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015612bc4578082015181840152602081019050612ba9565b50505050905090810190601f168015612bf15780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015612c2a578082015181840152602081019050612c0f565b50505050905090810190601f168015612c575780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b158015612c7957600080fd5b505af1158015612c8d573d6000803e3d6000fd5b50505050506040513d6020811015612ca457600080fd5b8101908080519060200190929190505050925050505b9392505050565b8060029080519060200190612cd79291906131a5565b5050565b6060612ce5612d5b565b612ced613225565b612cf981610400612d67565b612d0281612db1565b60008090505b8351811015612d4457612d37848281518110612d2057fe5b602002602001015183612dbf90919063ffffffff16565b8080600101915050612d08565b50612d4e81612de4565b8060000151915050919050565b60405180590338823950565b6000819050600060208281612d7857fe5b0614612d915760208181612d8857fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b612dbc816004612df2565b50565b612dcc8260028351612e13565b612ddf8183612f5390919063ffffffff16565b505050565b612def816007612df2565b50565b612e0f601f60058360ff16901b1783612ffe90919063ffffffff16565b5050565b60178111612e3f57612e3a8160058460ff16901b60ff161784612ffe90919063ffffffff16565b612f4e565b60ff8111612e8057612e64601860058460ff16901b1784612ffe90919063ffffffff16565b612e7a8160018561303e9092919063ffffffff16565b50612f4d565b61ffff8111612ec257612ea6601960058460ff16901b1784612ffe90919063ffffffff16565b612ebc8160028561303e9092919063ffffffff16565b50612f4c565b63ffffffff8111612f0657612eea601a60058460ff16901b1784612ffe90919063ffffffff16565b612f008160048561303e9092919063ffffffff16565b50612f4b565b67ffffffffffffffff8111612f4a57612f32601b60058460ff16901b1784612ffe90919063ffffffff16565b612f488160088561303e9092919063ffffffff16565b505b5b5b5b5b505050565b612f5b613225565b82602001518360000151518351011115612f8b57612f8a836002612f84866020015186516130a5565b026130c1565b5b60008060008451905085518051602081830101945086518101825260208701935050505b60208110612fd25781518352602083019250602082019150602081039050612faf565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b81602001516001836000015151011115613024576130238260028460200151026130c1565b5b815180516020818301018381536001820183525050505050565b613046613225565b8360200151846000015151830111156130745761307384600261306d8760200151866130a5565b026130c1565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b6000818311156130b7578290506130bb565b8190505b92915050565b6060826000015190506130d48383612d67565b6130de8382612f53565b50505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600080191681525090565b604051806060016040528060008152602001600015158152602001600080191681525090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600080191681525090565b60405180608001604052806004905b606081526020019060019003908161318d5790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106131e657805160ff1916838001178555613214565b82800160010185558215613214579182015b828111156132135782518255916020019190600101906131f8565b5b509050613221919061323f565b5090565b604051806040016040528060608152602001600081525090565b61326191905b8082111561325d576000816000905550600101613245565b5090565b9056fe50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722ea265627a7a72315820f4d58d9bf5e540ffca00df25de377b88923c9f786426f6fa37ba53413c65d82a64736f6c634300050c0032",
  "deployedBytecode": "0x6080604052600436106100c25760003560e01c8063adcf72901161007f578063bfab3db911610059578063bfab3db914610552578063d79f5ec51461057d578063dc34b0aa146105c2578063fab4a46d146105ed576100c2565b8063adcf729014610407578063b69ef8a8146104f9578063b863bd3714610524576100c2565b806327dc297e146100c757806332a1b7641461019957806338bbfa50146101c45780634ff540d41461032d5780638da5cb5b146103585780638f86456b146103af575b600080fd5b3480156100d357600080fd5b50610197600480360360408110156100ea57600080fd5b81019080803590602001909291908035906020019064010000000081111561011157600080fd5b82018360208201111561012357600080fd5b8035906020019184600183028401116401000000008311171561014557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506105f7565b005b3480156101a557600080fd5b506101ae61063a565b6040518082815260200191505060405180910390f35b3480156101d057600080fd5b5061032b600480360360608110156101e757600080fd5b81019080803590602001909291908035906020019064010000000081111561020e57600080fd5b82018360208201111561022057600080fd5b8035906020019184600183028401116401000000008311171561024257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102a557600080fd5b8201836020820111156102b757600080fd5b803590602001918460018302840111640100000000831117156102d957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506107c7565b005b34801561033957600080fd5b506103426107ea565b6040518082815260200191505060405180910390f35b34801561036457600080fd5b5061036d6108f7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610405600480360360608110156103c557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919050505061091d565b005b34801561041357600080fd5b506104f76004803603606081101561042a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561047157600080fd5b82018360208201111561048357600080fd5b803590602001918460018302840111640100000000831117156104a557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610a26565b005b34801561050557600080fd5b5061050e610b9d565b6040518082815260200191505060405180910390f35b6105506004803603602081101561053a57600080fd5b8101908080359060200190929190505050610ba3565b005b34801561055e57600080fd5b50610567610c8f565b6040518082815260200191505060405180910390f35b34801561058957600080fd5b506105c0600480360360408110156105a057600080fd5b810190808035906020019092919080359060200190929190505050610d48565b005b3480156105ce57600080fd5b506105d7610de5565b6040518082815260200191505060405180910390f35b6105f5610deb565b005b610636828260006040519080825280601f01601f1916602001820160405280156106305781602001600182028038833980820191505090505b506107c7565b5050565b600080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490507fb471f40a10881404b70a4f7819c075d0ae5fec92ae9454b1ccdad5c0fe9a6ab28182604051808381526020018281526020019250505060405180910390a16000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561074f573d6000803e3d6000fd5b507f888f4fb33f1429a5c0e82c8ca8b08617833224470b7efbaf5cb4d0b00e695e658160405180806020018381526020018281038252600d8152602001807f596f7520776974686472657720000000000000000000000000000000000000008152506020019250505060405180910390a18091505090565b6000801b600360008060001b815260200190815260200160002081905550505050565b60007fb471f40a10881404b70a4f7819c075d0ae5fec92ae9454b1ccdad5c0fe9a6ab2600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154604051808381526020018281526020019250505060405180910390a1600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6109256130e4565b83816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505082816020018181525050806007600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015590505081600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555050505050565b610a2e611024565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a6557600080fd5b60006002826040516020018082805190602001908083835b60208310610aa05780518252602082019150602081019050602083039250610a7d565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c81610ae557fe5b06905080600a819055507fc13d60fe9dffdb6908d2d446cd18134373a51db0738ee04f296eeb9128121cbc816040518082815260200191505060405180910390a1610b32600a5484610d48565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002050610b7c8484611341565b50600760008481526020019081526020016000206002016000905550505050565b60065481565b6000809050600062030d4090506000610bbe8360018461154c565b9050349350610bce33858361091d565b7f5e35a070670d9d1b09ecfeeae77ca75380c3bf10808c2cc6ae99b217977e09bd816040518080602001838152602001828103825260178152602001807f546865204944206f6620746869732063616c6c206973200000000000000000008152506020019250505060405180910390a17fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c473896040518080602001828103825260348152602001806132656034913960400191505060405180910390a150505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ceb57600080fd5b6000600654905060006006819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610d40573d6000803e3d6000fd5b508091505090565b610d5061311e565b82816000018181525050818160400181815250506001831415610d83576001816020019015159081151581525050610d95565b60008160200190151590811515815250505b80600860008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555060408201518160020155905050505050565b600a5481565b610df3613144565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154816020018181525050600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015481604001818152505080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015590505034600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825401925050819055507fa3c1c9e897beaade9e73a3a0976777a38c29c8ccf556641ceeb8f43e5181be123460405180806020018381526020018281038252600e8152602001807f596f75206465706f7369746564200000000000000000000000000000000000008152506020019250505060405180910390a150565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806110ac575060006110aa600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611ae7565b145b156110bd576110bb6000611af2565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561112757600080fd5b505af115801561113b573d6000803e3d6000fd5b505050506040513d602081101561115157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461129a57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561121f57600080fd5b505af1158015611233573d6000803e3d6000fd5b505050506040513d602081101561124957600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561130157600080fd5b505afa158015611315573d6000803e3d6000fd5b505050506040513d602081101561132b57600080fd5b8101908080519060200190929190505050905090565b6000806008600084815260200190815260200160002060010160009054906101000a900460ff16905060006007600085815260200190815260200160002060010154905060011515821515148061139c575060001515821515145b156114bf5760006002820290506000600960008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905081810190507fb471f40a10881404b70a4f7819c075d0ae5fec92ae9454b1ccdad5c0fe9a6ab28382604051808381526020018281526020019250505060405180910390a1826006600082825403925050819055507f7e7d5e50adfbb4e81427323125a4d6250cf27f8b49ff7305f48c9fcb4d2525ea826040518080602001838152602001828103825260088152602001807f596f7520776f6e200000000000000000000000000000000000000000000000008152506020019250505060405180910390a1600091505050611540565b806006600082825401925050819055507fdbc743cebacba388691ee70a334a0faaee0490d78d1e3be2ba9081622471cdad816040518080602001838152602001828103825260098152602001807f596f75206c6f73742000000000000000000000000000000000000000000000008152506020019250505060405180910390a15b60009050505092915050565b6000808311801561155e575060208311155b61156757600080fd5b600a84029350606060016040519080825280601f01601f1916602001820160405280156115a35781602001600182028038833980820191505090505b5090508360f81b816000815181106115b757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f19166020018201604052801561161c5781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f1916602001820160405280156116555781602001600182028038833980820191505090505b5090506000611662611b03565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f1916602001820160405280156116b65781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f1916602001820160405280156116f55781602001600182028038833980820191505090505b5090506117088260186008846000611e20565b5061171161317e565b604051806080016040528087815260200188815260200186815260200184815250905060006117766040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c611e7f565b9050606060086040519080825280601f01601f1916602001820160405280156117ae5781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a010000000000000000000000000000000000000000000000000000810460228301537901000000000000000000000000000000000000000000000000008104602183015378010000000000000000000000000000000000000000000000008104602083015350611ad48282856001600481106118ed57fe5b602002015160028760006004811061190157fe5b60200201516040518082805190602001908083835b602083106119395780518252602082019150602081019050602083039250611916565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa15801561197b573d6000803e3d6000fd5b5050506040513d602081101561199057600080fd5b8101908080519060200190929190505050876002600481106119ae57fe5b60200201516040516020018085805190602001908083835b602083106119e957805182526020820191506020810190506020830392506119c6565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b60208310611a3a5780518252602082019150602081019050602083039250611a17565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b60208310611a915780518252602082019150602081019050602083039250611a6e565b6001836020036101000a038019825116818451168082178552505050505050905001945050505050604051602081830303815290604052805190602001206121ec565b8199505050505050505050509392505050565b6000813b9050919050565b6000611afc612208565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611b8b57506000611b89600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611ae7565b145b15611b9c57611b9a6000611af2565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611c0657600080fd5b505af1158015611c1a573d6000803e3d6000fd5b505050506040513d6020811015611c3057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611d7957600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cfe57600080fd5b505af1158015611d12573d6000803e3d6000fd5b505050506040513d6020811015611d2857600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b158015611de057600080fd5b505afa158015611df4573d6000803e3d6000fd5b505050506040513d6020811015611e0a57600080fd5b8101908080519060200190929190505050905090565b6060600082850190508084511015611e3757600080fd5b600086602001905060008460200190505b868860200101821015611e705781890151808288015250602082019150602081019050611e48565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611f0757506000611f05600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611ae7565b145b15611f1857611f166000611af2565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611f8257600080fd5b505af1158015611f96573d6000803e3d6000fd5b505050506040513d6020811015611fac57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146120f557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561207a57600080fd5b505af115801561208e573d6000803e3d6000fd5b505050506040513d60208110156120a457600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6060600460405190808252806020026020018201604052801561212c57816020015b60608152602001906001900390816121175790505b5090508360006004811061213c57fe5b60200201518160008151811061214e57fe5b60200260200101819052508360016004811061216657fe5b60200201518160018151811061217857fe5b60200260200101819052508360026004811061219057fe5b6020020151816002815181106121a257fe5b6020026020010181905250836003600481106121ba57fe5b6020020151816003815181106121cc57fe5b60200260200101819052506121e285828561275f565b9150509392505050565b8060036000848152602001908152602001600020819055505050565b600080612228731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611ae7565b11156122ca57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506122c16040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250612cc1565b6001905061275c565b60006122e973c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611ae7565b111561238b5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506123826040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250612cc1565b6001905061275c565b60006123aa73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611ae7565b111561244c5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506124436040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250612cc1565b6001905061275c565b600061246b73146500cfd35b22e4a392fe0adc06de1a1368ed48611ae7565b111561250d5773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506125046040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250612cc1565b6001905061275c565b600061252c73a2998efd205fb9d4b4963afb70778d6354ad3a41611ae7565b11156125ce5773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506125c56040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250612cc1565b6001905061275c565b60006125ed736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611ae7565b111561265157736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061275c565b60006126707320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611ae7565b11156126d4577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061275c565b60006126f37351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611ae7565b1115612757577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061275c565b600090505b90565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806127e7575060006127e5600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611ae7565b145b156127f8576127f66000611af2565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561286257600080fd5b505af1158015612876573d6000803e3d6000fd5b505050506040513d602081101561288c57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146129d557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561295a57600080fd5b505af115801561296e573d6000803e3d6000fd5b505050506040513d602081101561298457600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015612a6b578082015181840152602081019050612a50565b50505050905090810190601f168015612a985780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015612ab857600080fd5b505af1158015612acc573d6000803e3d6000fd5b505050506040513d6020811015612ae257600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a764000001811115612b15576000801b915050612cba565b6060612b2085612cdb565b90506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015612bc4578082015181840152602081019050612ba9565b50505050905090810190601f168015612bf15780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015612c2a578082015181840152602081019050612c0f565b50505050905090810190601f168015612c575780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b158015612c7957600080fd5b505af1158015612c8d573d6000803e3d6000fd5b50505050506040513d6020811015612ca457600080fd5b8101908080519060200190929190505050925050505b9392505050565b8060029080519060200190612cd79291906131a5565b5050565b6060612ce5612d5b565b612ced613225565b612cf981610400612d67565b612d0281612db1565b60008090505b8351811015612d4457612d37848281518110612d2057fe5b602002602001015183612dbf90919063ffffffff16565b8080600101915050612d08565b50612d4e81612de4565b8060000151915050919050565b60405180590338823950565b6000819050600060208281612d7857fe5b0614612d915760208181612d8857fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b612dbc816004612df2565b50565b612dcc8260028351612e13565b612ddf8183612f5390919063ffffffff16565b505050565b612def816007612df2565b50565b612e0f601f60058360ff16901b1783612ffe90919063ffffffff16565b5050565b60178111612e3f57612e3a8160058460ff16901b60ff161784612ffe90919063ffffffff16565b612f4e565b60ff8111612e8057612e64601860058460ff16901b1784612ffe90919063ffffffff16565b612e7a8160018561303e9092919063ffffffff16565b50612f4d565b61ffff8111612ec257612ea6601960058460ff16901b1784612ffe90919063ffffffff16565b612ebc8160028561303e9092919063ffffffff16565b50612f4c565b63ffffffff8111612f0657612eea601a60058460ff16901b1784612ffe90919063ffffffff16565b612f008160048561303e9092919063ffffffff16565b50612f4b565b67ffffffffffffffff8111612f4a57612f32601b60058460ff16901b1784612ffe90919063ffffffff16565b612f488160088561303e9092919063ffffffff16565b505b5b5b5b5b505050565b612f5b613225565b82602001518360000151518351011115612f8b57612f8a836002612f84866020015186516130a5565b026130c1565b5b60008060008451905085518051602081830101945086518101825260208701935050505b60208110612fd25781518352602083019250602082019150602081039050612faf565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b81602001516001836000015151011115613024576130238260028460200151026130c1565b5b815180516020818301018381536001820183525050505050565b613046613225565b8360200151846000015151830111156130745761307384600261306d8760200151866130a5565b026130c1565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b6000818311156130b7578290506130bb565b8190505b92915050565b6060826000015190506130d48383612d67565b6130de8382612f53565b50505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600080191681525090565b604051806060016040528060008152602001600015158152602001600080191681525090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600080191681525090565b60405180608001604052806004905b606081526020019060019003908161318d5790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106131e657805160ff1916838001178555613214565b82800160010185558215613214579182015b828111156132135782518255916020019190600101906131f8565b5b509050613221919061323f565b5090565b604051806040016040528060608152602001600081525090565b61326191905b8082111561325d576000816000905550600101613245565b5090565b9056fe50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722ea265627a7a72315820f4d58d9bf5e540ffca00df25de377b88923c9f786426f6fa37ba53413c65d82a64736f6c634300050c0032",
  "sourceMap": "122:1332:5:-;;;236:10:2;228:5;;:18;;;;;;;;;;;;;;;;;;122:1332:5;;;;;;",
  "deployedSourceMap": "122:1332:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15686:124:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15686:124:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15686:124:6;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15686:124:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15686:124:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15686:124:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15686:124:6;;;;;;;;;;;;;;;:::i;:::-;;2070:358:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2070:358:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15818:181:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15818:181:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15818:181:6;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15818:181:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15818:181:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15818:181:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15818:181:6;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15818:181:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15818:181:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15818:181:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15818:181:6;;;;;;;;;;;;;;;:::i;:::-;;1856:206:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1856:206:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;60:20:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;60:20:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;769:295:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;769:295:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;441:464:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;441:464:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;441:464:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;441:464:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;441:464:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;441:464:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;441:464:5;;;;;;;;;;;;;;;:::i;:::-;;416:19:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;416:19:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;911:534:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;911:534:5;;;;;;;;;;;;;;;;;:::i;:::-;;2436:193:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2436:193:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1073:366;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1073:366:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1073:366:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;237:27:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;237:27:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1447:401:3;;;:::i;:::-;;15686:124:6;15762:40;15773:5;15780:7;15799:1;15789:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;15789:12:6;;;;15762:10;:40::i;:::-;15686:124;;:::o;2070:358:3:-;2119:4;2135:15;2153:7;:19;2161:10;2153:19;;;;;;;;;;;;;;;:33;;;2135:51;;2202:36;2215:10;2227;2202:36;;;;;;;;;;;;;;;;;;;;;;;;2285:1;2249:7;:19;2257:10;2249:19;;;;;;;;;;;;;;;:33;;:37;;;;2297:10;:19;;:31;2317:10;2297:31;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2297:31:3;2346:42;2377:10;2346:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2406:10;2399:17;;;2070:358;:::o;15818:181:6:-;15989:1;15981:10;;15944:22;:34;15975:1;15967:10;;15944:34;;;;;;;;;;;:47;;;;15818:181;;;:::o;1856:206:3:-;1900:4;1921:82;1934:7;:19;1942:10;1934:19;;;;;;;;;;;;;;;:33;;;1969:7;:19;1977:10;1969:19;;;;;;;;;;;;;;;:33;;;1921:82;;;;;;;;;;;;;;;;;;;;;;;;2021:7;:19;2029:10;2021:19;;;;;;;;;;;;;;;:33;;;2014:40;;1856:206;:::o;60:20:2:-;;;;;;;;;;;;;:::o;769:295:3:-;877:20;;:::i;:::-;927:8;908:9;:16;;:27;;;;;;;;;;;968:10;946:9;:19;;:32;;;;;1005:9;989:7;:13;997:4;989:13;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:4;1025:7;:19;1033:10;1025:19;;;;;;;;;;;;;;;:22;;:29;;;;769:295;;;;:::o;441:464:5:-;578:20;:18;:20::i;:::-;564:34;;:10;:34;;;556:43;;;;;;608:20;679:1;666:7;649:25;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;649:25:5;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;649:25:5;;;639:36;;;;;;631:45;;:49;;;;;;608:72;;704:12;689;:27;;;;728:35;750:12;728:35;;;;;;;;;;;;;;;;;;770:34;782:12;;795:8;770:11;:34::i;:::-;811:7;:15;819:6;811:15;;;;;;;;;;;;;;;:18;836:27;846:6;854:8;836:9;:27::i;:::-;;877:7;:17;885:8;877:17;;;;;;;;;;;:20;;870:27;;;441:464;;;;:::o;416:19:3:-;;;;:::o;911:534:5:-;985:29;1016:1;985:32;;1024:21;1048:6;1024:30;;1064:12;1080:130;1116:21;231:1;1185:16;1080:25;:130::i;:::-;1064:146;;1233:9;1220:22;;1251:42;1264:10;1276;1288:4;1251:12;:42::i;:::-;1310:40;1345:4;1310:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1362:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;911:534;;;;:::o;2436:193:3:-;2498:4;142:5:2;;;;;;;;;;;128:19;;:10;:19;;;120:28;;;;;;2514:11:3;2528:7;;2514:21;;2556:1;2546:7;:11;;;;2568:10;:19;;:27;2588:6;2568:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2568:27:3;2613:6;2606:13;;;2436:193;:::o;1073:366::-;1144:23;;:::i;:::-;1197:12;1178:9;:16;;:31;;;;;1235:4;1220:9;:12;;:19;;;;;1274:1;1258:12;:17;1254:138;;;1309:4;1291:9;:15;;:22;;;;;;;;;;;1254:138;;;1375:5;1357:9;:15;;:23;;;;;;;;;;;1254:138;1420:9;1404:7;:13;1412:4;1404:13;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1073:366;;;:::o;237:27:5:-;;;;:::o;1447:401:3:-;1501:23;;:::i;:::-;1554:10;1535:9;:16;;:29;;;;;;;;;;;1601:7;:19;1609:10;1601:19;;;;;;;;;;;;;;;:33;;;1575:9;:23;;:59;;;;;1660:7;:19;1668:10;1660:19;;;;;;;;;;;;;;;:22;;;1645:9;:12;;:37;;;;;1715:9;1693:7;:19;1701:10;1693:19;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1772:9;1735:7;:19;1743:10;1735:19;;;;;;;;;;;;;;;:33;;;:46;;;;;;;;;;;1797:43;1830:9;1797:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1447:401;:::o;38024:132:6:-;38084:24;12155:1;12131:26;;12139:3;;;;;;;;;;;12131:26;;;12130:64;;;;12192:1;12163:25;12183:3;;;;;;;;;;;12163:11;:25::i;:::-;:30;12130:64;12126:132;;;12211:35;11777:1;12211:19;:35::i;:::-;;12126:132;12293:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12293:16:6;;;;;;;;;;;;;;;;12272:37;;12280:8;;;;;;;;;;;12272:37;;;12268:108;;12347:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12347:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12347:16:6;;;;;;;;;;;;;;;;12326:8;;:38;;;;;;;;;;;;;;;;;;12268:108;38128:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;38128:20:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38128:20:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;38128:20:6;;;;;;;;;;;;;;;;38121:27;;38024:132;:::o;259:765:4:-;326:4;344:14;361:7;:13;369:4;361:13;;;;;;;;;;;:19;;;;;;;;;;;;344:36;;391:14;408:7;:13;416:4;408:13;;;;;;;;;;;:23;;;391:40;;461:4;448:17;;:9;:17;;;:39;;;;482:5;469:18;;:9;:18;;;448:39;444:543;;;531:13;559:1;547:9;:13;531:29;;575:13;591:7;:15;599:6;591:15;;;;;;;;;;;;;;;:29;;;575:45;;650:8;638:20;;;;678:33;691:9;702:8;678:33;;;;;;;;;;;;;;;;;;;;;;;;748:9;726:18;;:31;;;;;;;;;;;779:28;798:8;779:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;833:1;822:12;;444:543;;;;;915:9;904:7;;:20;;;;;;;;;;;944:31;965:9;944:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;444:543;1013:1;1001:13;;259:765;;;;;;:::o;46097:2683:6:-;46199:16;46247:1;46237:7;:11;46236:32;;;;;46265:2;46254:7;:13;;46236:32;46228:41;;;;;;46290:2;46280:12;;;;46349:19;46381:1;46371:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46371:12:6;;;;46349:34;;46417:7;46406:20;;46394:6;46401:1;46394:9;;;;;;;;;;;:32;;;;;;;;;;;46437:19;46469:2;46459:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46459:13:6;;;;46437:35;;46483:27;46523:2;46513:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46513:13:6;;;;46483:43;;46537:30;46570:40;:38;:40::i;:::-;46537:73;;46660:4;46652:6;46645:20;47013:9;47003:8;46999:24;46994:1;46986:6;46982:14;46972:25;46968:56;46961:4;46953:6;46949:17;46942:83;47062:4;47046:14;47039:28;47115:22;47108:4;47092:14;47088:25;47081:57;47159:18;47190:2;47180:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47180:13:6;;;;47159:34;;47253:6;47246:4;47239:5;47235:16;47228:32;47281:25;47319:1;47309:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47309:12:6;;;;47281:40;;47332;47342:5;47349:2;47353:1;47356:12;47370:1;47332:9;:40::i;:::-;;47383:20;;:::i;:::-;:62;;;;;;;;47407:6;47383:62;;;;47415:6;47383:62;;;;47423:14;47383:62;;;;47439:5;47383:62;;;;;47456:15;47474:47;;;;;;;;;;;;;;;;;;47499:4;47505:15;47474:14;:47::i;:::-;47456:65;;47532:30;47575:1;47565:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47565:12:6;;;;47532:45;;47645:4;47631:12;47627:23;47621:30;47710:65;47707:1;47703:73;47696:4;47677:17;47673:28;47665:112;47836:63;47833:1;47829:71;47822:4;47803:17;47799:28;47791:110;47960:61;47957:1;47953:69;47946:4;47927:17;47923:28;47915:108;48082:59;48079:1;48075:67;48068:4;48049:17;48045:28;48037:106;48202:57;48199:1;48195:65;48188:4;48169:17;48165:28;48157:104;48320:55;48317:1;48313:63;48306:4;48287:17;48283:28;48275:102;48436:53;48433:1;48429:61;48422:4;48403:17;48399:28;48391:100;48550:51;48547:1;48543:59;48536:4;48517:17;48513:28;48505:98;47597:1017;48624:123;48656:7;48692:17;48711:4;48716:1;48711:7;;;;;;;;;;;48720:15;48727:4;48732:1;48727:7;;;;;;;;;;;48720:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48720:15:6;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;48720:15:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;48720:15:6;;;;;;;;;;;;;;;;48737:4;48742:1;48737:7;;;;;;;;;;;48675:70;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48675:70:6;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48675:70:6;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48675:70:6;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;48675:70:6;;;48665:81;;;;;;48624:31;:123::i;:::-;48765:7;48758:14;;;;;;;;;;;46097:2683;;;;;:::o;38164:151::-;38223:10;38291:5;38279:18;38270:27;;38255:53;;;:::o;12880:208::-;12945:16;13059:21;:19;:21::i;:::-;13052:28;;12880:208;;;:::o;38467:171::-;38547:23;12155:1;12131:26;;12139:3;;;;;;;;;;;12131:26;;;12130:64;;;;12192:1;12163:25;12183:3;;;;;;;;;;;12163:11;:25::i;:::-;:30;12130:64;12126:132;;;12211:35;11777:1;12211:19;:35::i;:::-;;12126:132;12293:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12293:16:6;;;;;;;;;;;;;;;;12272:37;;12280:8;;;;;;;;;;;12272:37;;;12268:108;;12347:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12347:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12347:16:6;;;;;;;;;;;;;;;;12326:8;;:38;;;;;;;;;;;;;;;;;;12268:108;38590:8;;;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;38590:40:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38590:40:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;38590:40:6;;;;;;;;;;;;;;;;38583:47;;38467:171;:::o;55551:707::-;55679:25;55717:14;55744:9;55734:7;:19;55717:36;;55786:9;55772:3;:10;:23;;55764:32;;;;;;55852:6;55866:11;55861:2;:16;55852:25;;55969:6;55983:9;55978:2;:14;55969:23;;56003:227;56034:7;56020:11;56015:2;:16;:26;56010:1;:32;56003:227;;;56115:1;56108:5;56104:13;56098:20;56156:3;56152:1;56147:3;56143:11;56136:24;56068:107;56194:2;56189:7;;;;56216:2;56211:7;;;;56003:227;;;56247:3;56240:10;;;;;55551:707;;;;;;;:::o;35804:384::-;35924:11;12155:1;12131:26;;12139:3;;;;;;;;;;;12131:26;;;12130:64;;;;12192:1;12163:25;12183:3;;;;;;;;;;;12163:11;:25::i;:::-;:30;12130:64;12126:132;;;12211:35;11777:1;12211:19;:35::i;:::-;;12126:132;12293:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12293:16:6;;;;;;;;;;;;;;;;12272:37;;12280:8;;;;;;;;;;;12272:37;;;12268:108;;12347:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12347:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12347:16:6;;;;;;;;;;;;;;;;12326:8;;:38;;;;;;;;;;;;;;;;;;12268:108;35948:22;35985:1;35973:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35948:39;;36011:5;36017:1;36011:8;;;;;;;;;;;35998:7;36006:1;35998:10;;;;;;;;;;;;;:21;;;;36043:5;36049:1;36043:8;;;;;;;;;;;36030:7;36038:1;36030:10;;;;;;;;;;;;;:21;;;;36075:5;36081:1;36075:8;;;;;;;;;;;36062:7;36070:1;36062:10;;;;;;;;;;;;;:21;;;;36107:5;36113:1;36107:8;;;;;;;;;;;36094:7;36102:1;36094:10;;;;;;;;;;;;;:21;;;;36133:47;36148:11;36161:7;36170:9;36133:14;:47::i;:::-;36126:54;;;35804:384;;;;;:::o;48788:154::-;48923:11;48888:22;:32;48911:8;48888:32;;;;;;;;;;;:46;;;;48788:154;;:::o;13372:2070::-;13421:16;13512:1;13454:55;13466:42;13454:11;:55::i;:::-;:59;13450:250;;;13566:42;13540:3;;:69;;;;;;;;;;;;;;;;;;13624:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13684:4;13677:11;;;;13450:250;13772:1;13714:55;13726:42;13714:11;:55::i;:::-;:59;13710:259;;;13834:42;13808:3;;:69;;;;;;;;;;;;;;;;;;13892:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;13953:4;13946:11;;;;13710:259;14041:1;13983:55;13995:42;13983:11;:55::i;:::-;:59;13979:254;;;14101:42;14075:3;;:69;;;;;;;;;;;;;;;;;;14159:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;14217:4;14210:11;;;;13979:254;14305:1;14247:55;14259:42;14247:11;:55::i;:::-;:59;14243:258;;;14367:42;14341:3;;:69;;;;;;;;;;;;;;;;;;14425:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14485:4;14478:11;;;;14243:258;14573:1;14515:55;14527:42;14515:11;:55::i;:::-;:59;14511:256;;;14634:42;14608:3;;:69;;;;;;;;;;;;;;;;;;14692:37;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14751:4;14744:11;;;;14511:256;14839:1;14781:55;14793:42;14781:11;:55::i;:::-;:59;14777:205;;;14901:42;14875:3;;:69;;;;;;;;;;;;;;;;;;14966:4;14959:11;;;;14777:205;15054:1;14996:55;15008:42;14996:11;:55::i;:::-;:59;14992:204;;;15115:42;15089:3;;:69;;;;;;;;;;;;;;;;;;15180:4;15173:11;;;;14992:204;15268:1;15210:55;15222:42;15210:11;:55::i;:::-;:59;15206:206;;;15331:42;15305:3;;:69;;;;;;;;;;;;;;;;;;15396:4;15389:11;;;;15206:206;15429:5;15422:12;;13372:2070;;:::o;30207:461::-;30326:11;12155:1;12131:26;;12139:3;;;;;;;;;;;12131:26;;;12130:64;;;;12192:1;12163:25;12183:3;;;;;;;;;;;12163:11;:25::i;:::-;:30;12130:64;12126:132;;;12211:35;11777:1;12211:19;:35::i;:::-;;12126:132;12293:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12293:16:6;;;;;;;;;;;;;;;;12272:37;;12280:8;;;;;;;;;;;12272:37;;;12268:108;;12347:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12347:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12347:16:6;;;;;;;;;;;;;;;;12326:8;;:38;;;;;;;;;;;;;;;;;;12268:108;30350:10;30363:8;;;;;;;;;;;:17;;;30381:11;30394:9;30363:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30363:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30363:41:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30363:41:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;30363:41:6;;;;;;;;;;;;;;;;30350:54;;30451:9;30437:11;:23;30427:7;:33;30419:5;:41;30415:109;;;30484:1;30477:8;;;;;;;30415:109;30534:17;30554:14;30562:5;30554:7;:14::i;:::-;30534:34;;30586:8;;;;;;;;;;;:28;;;30621:5;30628:1;30631:11;30644:4;30650:9;30586:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30586:74:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30586:74:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30586:74:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30586:74:6;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;30586:74:6;;;;;;;;;;;;;;;;30579:81;;;;12386:1;30207:461;;;;;:::o;13096:127::-;13202:13;13178:21;:37;;;;;;;;;;;;:::i;:::-;;13096:127;:::o;45714:375::-;45775:26;45814:19;:17;:19::i;:::-;45844:24;;:::i;:::-;45879:22;45891:3;45896:4;45879:11;:22::i;:::-;45912:16;:3;:14;:16::i;:::-;45944:6;45953:1;45944:10;;45939:90;45960:4;:11;45956:1;:15;45939:90;;;45993:24;46009:4;46014:1;46009:7;;;;;;;;;;;;;;45993:3;:15;;:24;;;;:::i;:::-;45973:3;;;;;;;45939:90;;;;46039:17;:3;:15;:17::i;:::-;46074:3;:7;;;46067:14;;;45714:375;;;:::o;59205:175::-;59301:4;59295:11;59356:4;59349:5;59345:16;59335:8;59329:4;59320:42;59268:105;:::o;4339:446::-;4414:13;4430:9;4414:25;;4471:1;4465:2;4454:8;:13;;;;;;:18;4450:83;;4518:2;4507:8;:13;;;;;;4501:2;:20;4489:32;;;;4450:83;4559:8;4543:4;:13;;:24;;;;;4657:4;4651:11;4689:3;4683:4;4676:17;4719:1;4714:3;4707:14;4757:8;4752:3;4748:18;4742:4;4735:32;4625:153;;;;:::o;10737:130::-;10809:50;10836:4;8844:1;10809:26;:50::i;:::-;10737:130;:::o;10342:181::-;10436:49;10447:4;8794:1;10471:6;:13;10436:10;:49::i;:::-;10496:19;10508:6;10496:4;:11;;:19;;;;:::i;:::-;;10342:181;;:::o;11009:138::-;11082:57;11109:4;9009:1;11082:26;:57::i;:::-;11009:138;:::o;9765:147::-;9866:38;9900:2;9895:1;9885:6;:11;;;;9884:18;9866:4;:11;;:38;;;;:::i;:::-;9765:147;;:::o;9019:738::-;9131:2;9121:6;:12;9117:633;;9150:42;9184:6;9179:1;9169:6;:11;;;;9168:22;;;9150:4;:11;;:42;;;;:::i;:::-;9117:633;;;9224:4;9214:6;:14;9210:540;;9245:38;9279:2;9274:1;9264:6;:11;;;;9263:18;9245:4;:11;;:38;;;;:::i;:::-;9298:25;9313:6;9321:1;9298:4;:14;;:25;;;;;:::i;:::-;;9210:540;;;9355:6;9345;:16;9341:409;;9378:38;9412:2;9407:1;9397:6;:11;;;;9396:18;9378:4;:11;;:38;;;;:::i;:::-;9431:25;9446:6;9454:1;9431:4;:14;;:25;;;;;:::i;:::-;;9341:409;;;9488:10;9478:6;:20;9474:276;;9515:38;9549:2;9544:1;9534:6;:11;;;;9533:18;9515:4;:11;;:38;;;;:::i;:::-;9568:25;9583:6;9591:1;9568:4;:14;;:25;;;;;:::i;:::-;;9474:276;;;9625:18;9615:6;:28;9611:139;;9660:38;9694:2;9689:1;9679:6;:11;;;;9678:18;9660:4;:11;;:38;;;;:::i;:::-;9713:25;9728:6;9736:1;9713:4;:14;;:25;;;;;:::i;:::-;;9611:139;9474:276;9341:409;9210:540;9117:633;9019:738;;;:::o;5425:1241::-;5504:21;;:::i;:::-;5575:4;:13;;;5557:4;:8;;;:15;5542:5;:12;:30;:46;5538:129;;;5605:50;5612:4;5653:1;5618:32;5622:4;:13;;;5637:5;:12;5618:3;:32::i;:::-;:36;5605:6;:50::i;:::-;5538:129;5677:9;5697:8;5716;5727:5;:12;5716:23;;5794:4;5788:11;5870:6;5864:13;5958:2;5949:6;5941;5937:19;5933:28;5925:36;;6082:5;6076:12;6068:6;6064:25;6056:6;6049:41;6146:2;6139:5;6135:14;6128:21;;5759:401;;6170:212;6183:2;6176:3;:9;6170:212;;6302:3;6296:10;6290:4;6283:24;6344:2;6336:10;;;;6368:2;6361:9;;;;6194:2;6187:9;;;;6170:212;;;6392:9;6424:1;6417:3;6412:2;:8;6404:3;:17;:21;6392:33;;6519:4;6515:9;6509:3;6503:10;6499:26;6572:4;6565;6559:11;6555:22;6617:7;6607:8;6604:21;6598:4;6591:35;6469:168;;6654:4;6647:11;;;;;;5425:1241;;;;:::o;6960:586::-;7060:4;:13;;;7056:1;7038:4;:8;;;:15;:19;:35;7034:99;;;7090:31;7097:4;7119:1;7103:4;:13;;;:17;7090:6;:31::i;:::-;7034:99;7187:4;7181:11;7263:6;7257:13;7355:2;7346:6;7338;7334:19;7330:28;7454:5;7448:4;7440:20;7501:1;7493:6;7489:14;7481:6;7474:30;7152:387;;;;;:::o;7840:748::-;7925:21;;:::i;:::-;7988:4;:13;;;7970:4;:8;;;:15;7963:4;:22;:38;7959:113;;;8018:42;8025:4;8058:1;8031:24;8035:4;:13;;;8050:4;8031:3;:24::i;:::-;:28;8018:6;:42::i;:::-;7959:113;8082:9;8108:1;8101:4;8094:3;:11;:15;8082:27;;8164:4;8158:11;8240:6;8234:13;8332:4;8323:6;8315;8311:19;8307:30;8470:5;8462:4;8458:9;8451:4;8445:11;8441:27;8438:38;8432:4;8425:52;8518:4;8510:6;8506:17;8498:6;8491:33;8129:430;;;8576:4;8569:11;;;7840:748;;;;;:::o;4978:151::-;5031:9;5062:2;5057;:7;5053:49;;;5088:2;5081:9;;;;5053:49;5119:2;5112:9;;4978:151;;;;;:::o;4793:177::-;4869:19;4891:4;:8;;;4869:30;;4910:21;4915:4;4921:9;4910:4;:21::i;:::-;4942:20;4949:4;4955:6;4942;:20::i;:::-;;4793:177;;;:::o;122:1332:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.5.12 < 0.6.0;\r\nimport \"./provableAPI.sol\";\r\nimport \"./Storagable.sol\";\r\nimport \"./Winnable.sol\";\r\n\r\n\r\ncontract oracle is usingProvable, Storagable, Winnable{\r\n\r\n\r\n  uint256 constant NUM_RANDOM_BYTES_REQUESTED = 1;\r\n  uint256 public latestNumber;\r\n\r\n\r\n\r\n  event LogNewProvableQuery(string description);\r\n  event generatedRandomNumber(uint256 randomNumber);\r\n  event idCheck(string a, bytes32 q_id);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function __callback(address punter, bytes32 _queryId, string memory _result/* bytes memory _proof*/) public {\r\n    require(msg.sender == provable_cbAddress());\r\n\r\n    uint256 randomNumber = uint256(keccak256(abi.encodePacked(_result))) % 2;\r\n\r\n    latestNumber = randomNumber;\r\n    emit generatedRandomNumber(randomNumber);\r\n    saveResults(latestNumber,_queryId);\r\n    punters[punter].id;\r\n    winOrLose(punter, _queryId);\r\n    delete waiting[_queryId].id;\r\n\r\n  }\r\n\r\n  function random(/*address punter*/uint _betAmount) payable public  {\r\n    uint256 QUERY_EXECUTION_DELAY =0;\r\n    uint GAS_FOR_CALLBACK = 200000;\r\n\r\n\r\n   bytes32 q_id =  provable_newRandomDSQuery(\r\n        QUERY_EXECUTION_DELAY,\r\n        NUM_RANDOM_BYTES_REQUESTED,\r\n        GAS_FOR_CALLBACK\r\n      );\r\n       _betAmount = msg.value;\r\n      createPlayer(msg.sender, _betAmount, q_id);\r\n\r\n\r\n     emit idCheck(\"The ID of this call is \", q_id);\r\n    emit LogNewProvableQuery(\"Provable query was sent, standing by for the answer.\");\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n",
  "sourcePath": "D:\\Users\\victo\\Desktop\\Crypto Programming\\Ethereum\\Coinflip\\contracts\\oracle.sol",
  "ast": {
    "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/oracle.sol",
    "exportedSymbols": {
      "oracle": [
        659
      ]
    },
    "id": 660,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 527,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".12",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:5"
      },
      {
        "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 528,
        "nodeType": "ImportDirective",
        "scope": 660,
        "sourceUnit": 6956,
        "src": "35:27:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/Storagable.sol",
        "file": "./Storagable.sol",
        "id": 529,
        "nodeType": "ImportDirective",
        "scope": 660,
        "sourceUnit": 415,
        "src": "64:26:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/Winnable.sol",
        "file": "./Winnable.sol",
        "id": 530,
        "nodeType": "ImportDirective",
        "scope": 660,
        "sourceUnit": 526,
        "src": "92:24:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 531,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6955,
              "src": "141:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6955",
                "typeString": "contract usingProvable"
              }
            },
            "id": 532,
            "nodeType": "InheritanceSpecifier",
            "src": "141:13:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 533,
              "name": "Storagable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 414,
              "src": "156:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Storagable_$414",
                "typeString": "contract Storagable"
              }
            },
            "id": 534,
            "nodeType": "InheritanceSpecifier",
            "src": "156:10:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 535,
              "name": "Winnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 525,
              "src": "168:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Winnable_$525",
                "typeString": "contract Winnable"
              }
            },
            "id": 536,
            "nodeType": "InheritanceSpecifier",
            "src": "168:8:5"
          }
        ],
        "contractDependencies": [
          120,
          414,
          525,
          6955
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 659,
        "linearizedBaseContracts": [
          659,
          525,
          414,
          120,
          6955
        ],
        "name": "oracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 539,
            "name": "NUM_RANDOM_BYTES_REQUESTED",
            "nodeType": "VariableDeclaration",
            "scope": 659,
            "src": "185:47:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 537,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "185:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 538,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "231:1:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 541,
            "name": "latestNumber",
            "nodeType": "VariableDeclaration",
            "scope": 659,
            "src": "237:27:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 540,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "237:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 545,
            "name": "LogNewProvableQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 543,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 545,
                  "src": "301:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 542,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "301:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "300:20:5"
            },
            "src": "275:46:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 549,
            "name": "generatedRandomNumber",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 547,
                  "indexed": false,
                  "name": "randomNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 549,
                  "src": "353:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 546,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "353:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "352:22:5"
            },
            "src": "325:50:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 555,
            "name": "idCheck",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 551,
                  "indexed": false,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 555,
                  "src": "393:8:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 550,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 553,
                  "indexed": false,
                  "name": "q_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 555,
                  "src": "403:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 552,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "403:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "392:24:5"
            },
            "src": "379:38:5"
          },
          {
            "body": {
              "id": 614,
              "nodeType": "Block",
              "src": "549:356:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 565,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6970,
                            "src": "564:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "564:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 567,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4778,
                            "src": "578:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "578:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "564:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 564,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6973,
                        6974
                      ],
                      "referencedDeclaration": 6973,
                      "src": "556:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "556:43:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 571,
                  "nodeType": "ExpressionStatement",
                  "src": "556:43:5"
                },
                {
                  "assignments": [
                    573
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 573,
                      "name": "randomNumber",
                      "nodeType": "VariableDeclaration",
                      "scope": 614,
                      "src": "608:20:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 572,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "608:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 584,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 578,
                                  "name": "_result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 561,
                                  "src": "666:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 576,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6957,
                                  "src": "649:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 577,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "649:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 579,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "649:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 575,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6964,
                            "src": "639:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "639:36:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "631:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "631:45:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "679:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "631:49:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "608:72:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 585,
                      "name": "latestNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 541,
                      "src": "689:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 586,
                      "name": "randomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 573,
                      "src": "704:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "689:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 588,
                  "nodeType": "ExpressionStatement",
                  "src": "689:27:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 590,
                        "name": "randomNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 573,
                        "src": "750:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 589,
                      "name": "generatedRandomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 549,
                      "src": "728:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "728:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 592,
                  "nodeType": "EmitStatement",
                  "src": "723:40:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 594,
                        "name": "latestNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 541,
                        "src": "782:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 595,
                        "name": "_queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 559,
                        "src": "795:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 593,
                      "name": "saveResults",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 264,
                      "src": "770:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32)"
                      }
                    },
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "770:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 597,
                  "nodeType": "ExpressionStatement",
                  "src": "770:34:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 598,
                        "name": "punters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "811:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_punter_$146_storage_$",
                          "typeString": "mapping(address => struct Storagable.punter storage ref)"
                        }
                      },
                      "id": 600,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 599,
                        "name": "punter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 557,
                        "src": "819:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "811:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_punter_$146_storage",
                        "typeString": "struct Storagable.punter storage ref"
                      }
                    },
                    "id": 601,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "id",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 145,
                    "src": "811:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 602,
                  "nodeType": "ExpressionStatement",
                  "src": "811:18:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 604,
                        "name": "punter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 557,
                        "src": "846:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 605,
                        "name": "_queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 559,
                        "src": "854:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 603,
                      "name": "winOrLose",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 524,
                      "src": "836:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (address,bytes32) returns (uint256)"
                      }
                    },
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "836:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 607,
                  "nodeType": "ExpressionStatement",
                  "src": "836:27:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "870:27:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 608,
                          "name": "waiting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 152,
                          "src": "877:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_bet_$139_storage_$",
                            "typeString": "mapping(bytes32 => struct Storagable.bet storage ref)"
                          }
                        },
                        "id": 610,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 609,
                          "name": "_queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 559,
                          "src": "885:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "877:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_bet_$139_storage",
                          "typeString": "struct Storagable.bet storage ref"
                        }
                      },
                      "id": 611,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 138,
                      "src": "877:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 613,
                  "nodeType": "ExpressionStatement",
                  "src": "870:27:5"
                }
              ]
            },
            "documentation": null,
            "id": 615,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 557,
                  "name": "punter",
                  "nodeType": "VariableDeclaration",
                  "scope": 615,
                  "src": "461:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 556,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 559,
                  "name": "_queryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 615,
                  "src": "477:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 558,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "477:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 561,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 615,
                  "src": "495:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 560,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "495:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "460:81:5"
            },
            "returnParameters": {
              "id": 563,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "549:0:5"
            },
            "scope": 659,
            "src": "441:464:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 657,
              "nodeType": "Block",
              "src": "978:467:5",
              "statements": [
                {
                  "assignments": [
                    621
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 621,
                      "name": "QUERY_EXECUTION_DELAY",
                      "nodeType": "VariableDeclaration",
                      "scope": 657,
                      "src": "985:29:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 620,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "985:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 623,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1016:1:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "985:32:5"
                },
                {
                  "assignments": [
                    625
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 625,
                      "name": "GAS_FOR_CALLBACK",
                      "nodeType": "VariableDeclaration",
                      "scope": 657,
                      "src": "1024:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 624,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1024:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 627,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "323030303030",
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1048:6:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000_by_1",
                      "typeString": "int_const 200000"
                    },
                    "value": "200000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1024:30:5"
                },
                {
                  "assignments": [
                    629
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 629,
                      "name": "q_id",
                      "nodeType": "VariableDeclaration",
                      "scope": 657,
                      "src": "1064:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 628,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1064:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 635,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 631,
                        "name": "QUERY_EXECUTION_DELAY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 621,
                        "src": "1116:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 632,
                        "name": "NUM_RANDOM_BYTES_REQUESTED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 539,
                        "src": "1148:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 633,
                        "name": "GAS_FOR_CALLBACK",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 625,
                        "src": "1185:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 630,
                      "name": "provable_newRandomDSQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6057,
                      "src": "1080:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                      }
                    },
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1080:130:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1064:146:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 636,
                      "name": "_betAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 617,
                      "src": "1220:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 637,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6970,
                        "src": "1233:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1233:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1220:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 640,
                  "nodeType": "ExpressionStatement",
                  "src": "1220:22:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 642,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6970,
                          "src": "1264:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1264:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 644,
                        "name": "_betAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 617,
                        "src": "1276:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 645,
                        "name": "q_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 629,
                        "src": "1288:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 641,
                      "name": "createPlayer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "1251:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address payable,uint256,bytes32)"
                      }
                    },
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1251:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 647,
                  "nodeType": "ExpressionStatement",
                  "src": "1251:42:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "546865204944206f6620746869732063616c6c20697320",
                        "id": 649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1318:25:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_254a10542895e9c592c25ec3f28abb60a26257a9d3f1e316ceaed442cc6f19de",
                          "typeString": "literal_string \"The ID of this call is \""
                        },
                        "value": "The ID of this call is "
                      },
                      {
                        "argumentTypes": null,
                        "id": 650,
                        "name": "q_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 629,
                        "src": "1345:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_254a10542895e9c592c25ec3f28abb60a26257a9d3f1e316ceaed442cc6f19de",
                          "typeString": "literal_string \"The ID of this call is \""
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 648,
                      "name": "idCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 555,
                      "src": "1310:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (string memory,bytes32)"
                      }
                    },
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1310:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 652,
                  "nodeType": "EmitStatement",
                  "src": "1305:45:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e",
                        "id": 654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1382:54:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c372616915d6b08d584e4f07c9f4ab3ef233d2320a376fb7b417ddfb52cb9d5",
                          "typeString": "literal_string \"Provable query was sent, standing by for the answer.\""
                        },
                        "value": "Provable query was sent, standing by for the answer."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6c372616915d6b08d584e4f07c9f4ab3ef233d2320a376fb7b417ddfb52cb9d5",
                          "typeString": "literal_string \"Provable query was sent, standing by for the answer.\""
                        }
                      ],
                      "id": 653,
                      "name": "LogNewProvableQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 545,
                      "src": "1362:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1362:75:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 656,
                  "nodeType": "EmitStatement",
                  "src": "1357:80:5"
                }
              ]
            },
            "documentation": null,
            "id": 658,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "random",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 617,
                  "name": "_betAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 658,
                  "src": "945:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 616,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "945:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "926:35:5"
            },
            "returnParameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "978:0:5"
            },
            "scope": 659,
            "src": "911:534:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 660,
        "src": "122:1332:5"
      }
    ],
    "src": "0:1456:5"
  },
  "legacyAST": {
    "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/oracle.sol",
    "exportedSymbols": {
      "oracle": [
        659
      ]
    },
    "id": 660,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 527,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".12",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:5"
      },
      {
        "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 528,
        "nodeType": "ImportDirective",
        "scope": 660,
        "sourceUnit": 6956,
        "src": "35:27:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/Storagable.sol",
        "file": "./Storagable.sol",
        "id": 529,
        "nodeType": "ImportDirective",
        "scope": 660,
        "sourceUnit": 415,
        "src": "64:26:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/Winnable.sol",
        "file": "./Winnable.sol",
        "id": 530,
        "nodeType": "ImportDirective",
        "scope": 660,
        "sourceUnit": 526,
        "src": "92:24:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 531,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6955,
              "src": "141:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6955",
                "typeString": "contract usingProvable"
              }
            },
            "id": 532,
            "nodeType": "InheritanceSpecifier",
            "src": "141:13:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 533,
              "name": "Storagable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 414,
              "src": "156:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Storagable_$414",
                "typeString": "contract Storagable"
              }
            },
            "id": 534,
            "nodeType": "InheritanceSpecifier",
            "src": "156:10:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 535,
              "name": "Winnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 525,
              "src": "168:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Winnable_$525",
                "typeString": "contract Winnable"
              }
            },
            "id": 536,
            "nodeType": "InheritanceSpecifier",
            "src": "168:8:5"
          }
        ],
        "contractDependencies": [
          120,
          414,
          525,
          6955
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 659,
        "linearizedBaseContracts": [
          659,
          525,
          414,
          120,
          6955
        ],
        "name": "oracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 539,
            "name": "NUM_RANDOM_BYTES_REQUESTED",
            "nodeType": "VariableDeclaration",
            "scope": 659,
            "src": "185:47:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 537,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "185:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 538,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "231:1:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 541,
            "name": "latestNumber",
            "nodeType": "VariableDeclaration",
            "scope": 659,
            "src": "237:27:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 540,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "237:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 545,
            "name": "LogNewProvableQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 543,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 545,
                  "src": "301:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 542,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "301:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "300:20:5"
            },
            "src": "275:46:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 549,
            "name": "generatedRandomNumber",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 547,
                  "indexed": false,
                  "name": "randomNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 549,
                  "src": "353:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 546,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "353:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "352:22:5"
            },
            "src": "325:50:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 555,
            "name": "idCheck",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 551,
                  "indexed": false,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 555,
                  "src": "393:8:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 550,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 553,
                  "indexed": false,
                  "name": "q_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 555,
                  "src": "403:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 552,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "403:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "392:24:5"
            },
            "src": "379:38:5"
          },
          {
            "body": {
              "id": 614,
              "nodeType": "Block",
              "src": "549:356:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 565,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6970,
                            "src": "564:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "564:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 567,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4778,
                            "src": "578:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "578:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "564:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 564,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6973,
                        6974
                      ],
                      "referencedDeclaration": 6973,
                      "src": "556:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "556:43:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 571,
                  "nodeType": "ExpressionStatement",
                  "src": "556:43:5"
                },
                {
                  "assignments": [
                    573
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 573,
                      "name": "randomNumber",
                      "nodeType": "VariableDeclaration",
                      "scope": 614,
                      "src": "608:20:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 572,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "608:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 584,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 578,
                                  "name": "_result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 561,
                                  "src": "666:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 576,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6957,
                                  "src": "649:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 577,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "649:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 579,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "649:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 575,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6964,
                            "src": "639:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "639:36:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "631:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "631:45:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "679:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "631:49:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "608:72:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 585,
                      "name": "latestNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 541,
                      "src": "689:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 586,
                      "name": "randomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 573,
                      "src": "704:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "689:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 588,
                  "nodeType": "ExpressionStatement",
                  "src": "689:27:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 590,
                        "name": "randomNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 573,
                        "src": "750:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 589,
                      "name": "generatedRandomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 549,
                      "src": "728:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "728:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 592,
                  "nodeType": "EmitStatement",
                  "src": "723:40:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 594,
                        "name": "latestNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 541,
                        "src": "782:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 595,
                        "name": "_queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 559,
                        "src": "795:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 593,
                      "name": "saveResults",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 264,
                      "src": "770:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32)"
                      }
                    },
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "770:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 597,
                  "nodeType": "ExpressionStatement",
                  "src": "770:34:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 598,
                        "name": "punters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "811:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_punter_$146_storage_$",
                          "typeString": "mapping(address => struct Storagable.punter storage ref)"
                        }
                      },
                      "id": 600,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 599,
                        "name": "punter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 557,
                        "src": "819:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "811:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_punter_$146_storage",
                        "typeString": "struct Storagable.punter storage ref"
                      }
                    },
                    "id": 601,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "id",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 145,
                    "src": "811:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 602,
                  "nodeType": "ExpressionStatement",
                  "src": "811:18:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 604,
                        "name": "punter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 557,
                        "src": "846:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 605,
                        "name": "_queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 559,
                        "src": "854:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 603,
                      "name": "winOrLose",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 524,
                      "src": "836:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (address,bytes32) returns (uint256)"
                      }
                    },
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "836:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 607,
                  "nodeType": "ExpressionStatement",
                  "src": "836:27:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "870:27:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 608,
                          "name": "waiting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 152,
                          "src": "877:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_bet_$139_storage_$",
                            "typeString": "mapping(bytes32 => struct Storagable.bet storage ref)"
                          }
                        },
                        "id": 610,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 609,
                          "name": "_queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 559,
                          "src": "885:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "877:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_bet_$139_storage",
                          "typeString": "struct Storagable.bet storage ref"
                        }
                      },
                      "id": 611,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 138,
                      "src": "877:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 613,
                  "nodeType": "ExpressionStatement",
                  "src": "870:27:5"
                }
              ]
            },
            "documentation": null,
            "id": 615,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 557,
                  "name": "punter",
                  "nodeType": "VariableDeclaration",
                  "scope": 615,
                  "src": "461:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 556,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 559,
                  "name": "_queryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 615,
                  "src": "477:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 558,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "477:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 561,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 615,
                  "src": "495:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 560,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "495:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "460:81:5"
            },
            "returnParameters": {
              "id": 563,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "549:0:5"
            },
            "scope": 659,
            "src": "441:464:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 657,
              "nodeType": "Block",
              "src": "978:467:5",
              "statements": [
                {
                  "assignments": [
                    621
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 621,
                      "name": "QUERY_EXECUTION_DELAY",
                      "nodeType": "VariableDeclaration",
                      "scope": 657,
                      "src": "985:29:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 620,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "985:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 623,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1016:1:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "985:32:5"
                },
                {
                  "assignments": [
                    625
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 625,
                      "name": "GAS_FOR_CALLBACK",
                      "nodeType": "VariableDeclaration",
                      "scope": 657,
                      "src": "1024:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 624,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1024:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 627,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "323030303030",
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1048:6:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000_by_1",
                      "typeString": "int_const 200000"
                    },
                    "value": "200000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1024:30:5"
                },
                {
                  "assignments": [
                    629
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 629,
                      "name": "q_id",
                      "nodeType": "VariableDeclaration",
                      "scope": 657,
                      "src": "1064:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 628,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1064:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 635,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 631,
                        "name": "QUERY_EXECUTION_DELAY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 621,
                        "src": "1116:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 632,
                        "name": "NUM_RANDOM_BYTES_REQUESTED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 539,
                        "src": "1148:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 633,
                        "name": "GAS_FOR_CALLBACK",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 625,
                        "src": "1185:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 630,
                      "name": "provable_newRandomDSQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6057,
                      "src": "1080:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                      }
                    },
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1080:130:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1064:146:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 636,
                      "name": "_betAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 617,
                      "src": "1220:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 637,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6970,
                        "src": "1233:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1233:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1220:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 640,
                  "nodeType": "ExpressionStatement",
                  "src": "1220:22:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 642,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6970,
                          "src": "1264:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1264:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 644,
                        "name": "_betAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 617,
                        "src": "1276:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 645,
                        "name": "q_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 629,
                        "src": "1288:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 641,
                      "name": "createPlayer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "1251:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address payable,uint256,bytes32)"
                      }
                    },
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1251:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 647,
                  "nodeType": "ExpressionStatement",
                  "src": "1251:42:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "546865204944206f6620746869732063616c6c20697320",
                        "id": 649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1318:25:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_254a10542895e9c592c25ec3f28abb60a26257a9d3f1e316ceaed442cc6f19de",
                          "typeString": "literal_string \"The ID of this call is \""
                        },
                        "value": "The ID of this call is "
                      },
                      {
                        "argumentTypes": null,
                        "id": 650,
                        "name": "q_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 629,
                        "src": "1345:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_254a10542895e9c592c25ec3f28abb60a26257a9d3f1e316ceaed442cc6f19de",
                          "typeString": "literal_string \"The ID of this call is \""
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 648,
                      "name": "idCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 555,
                      "src": "1310:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (string memory,bytes32)"
                      }
                    },
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1310:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 652,
                  "nodeType": "EmitStatement",
                  "src": "1305:45:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e",
                        "id": 654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1382:54:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c372616915d6b08d584e4f07c9f4ab3ef233d2320a376fb7b417ddfb52cb9d5",
                          "typeString": "literal_string \"Provable query was sent, standing by for the answer.\""
                        },
                        "value": "Provable query was sent, standing by for the answer."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6c372616915d6b08d584e4f07c9f4ab3ef233d2320a376fb7b417ddfb52cb9d5",
                          "typeString": "literal_string \"Provable query was sent, standing by for the answer.\""
                        }
                      ],
                      "id": 653,
                      "name": "LogNewProvableQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 545,
                      "src": "1362:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1362:75:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 656,
                  "nodeType": "EmitStatement",
                  "src": "1357:80:5"
                }
              ]
            },
            "documentation": null,
            "id": 658,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "random",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 617,
                  "name": "_betAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 658,
                  "src": "945:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 616,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "945:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "926:35:5"
            },
            "returnParameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "978:0:5"
            },
            "scope": 659,
            "src": "911:534:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 660,
        "src": "122:1332:5"
      }
    ],
    "src": "0:1456:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2020-10-29T10:36:57.136Z",
  "devdoc": {
    "methods": {
      "__callback(bytes32,string)": {
        "details": "The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}
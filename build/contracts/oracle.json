{
  "contractName": "oracle",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "LogNewProvableQuery",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "randomNumber",
          "type": "uint256"
        }
      ],
      "name": "generatedRandomNumber",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "latestNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_queryId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "update",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"LogNewProvableQuery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"randomNumber\",\"type\":\"uint256\"}],\"name\":\"generatedRandomNumber\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"latestNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"update\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"__callback(bytes32,string)\":{\"details\":\"The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/oracle.sol\":\"oracle\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/oracle.sol\":{\"keccak256\":\"0x88d0870b498910c73ab3c46ceb0e881c04f7ae92468fc4c36d716f94494d899c\",\"urls\":[\"bzz-raw://a75deb24d9d87d6672759a7cdecdcc4ff02370991667d4157244742d7cce16d2\",\"dweb:/ipfs/QmZgBHPaVhzNfFyFCyQhAUgUjyvq2LaKUg4b4rNM6b41dy\"]},\"/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/provableAPI.sol\":{\"keccak256\":\"0x6988135f2d9e695931e5efe9ad1b3ba859e0d2949d984eaaf787e038e09cab00\",\"urls\":[\"bzz-raw://a0846a0117c7e1f1a9957c8f011d875708ec1f7380286d2af58502b73f4da7d4\",\"dweb:/ipfs/QmYWTc5MLUXJra934htUjaikBB5QESXh9cMio7CdaXEB3e\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50620000226200002860201b60201c565b62001f48565b6000809050600062030d40905062000049826001836200009a60201b60201c565b507fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c47389604051808060200182810382526034815260200180620043c86034913960400191505060405180910390a15050565b60008083118015620000ad575060208311155b620000b757600080fd5b600a84029350606060016040519080825280601f01601f191660200182016040528015620000f45781602001600182028038833980820191505090505b5090508360f81b816000815181106200010957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f1916602001820160405280156200016f5781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f191660200182016040528015620001a95781602001600182028038833980820191505090505b5090506000620001be6200066d60201b60201c565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f191660200182016040528015620002135781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f191660200182016040528015620002535781602001600182028038833980820191505090505b5090506200026e8260186008846000620009a660201b60201c565b506200027962001e57565b60405180608001604052808781526020018881526020018681526020018481525090506000620002e66040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c62000a0860201b60201c565b9050606060086040519080825280601f01601f1916602001820160405280156200031f5781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a0100000000000000000000000000000000000000000000000000008104602283015379010000000000000000000000000000000000000000000000000081046021830153780100000000000000000000000000000000000000000000000081046020830153506200065a8282856001600481106200046057fe5b60200201516002876000600481106200047557fe5b60200201516040518082805190602001908083835b60208310620004af57805182526020820191506020810190506020830392506200048a565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015620004f2573d6000803e3d6000fd5b5050506040513d60208110156200050857600080fd5b8101908080519060200190929190505050876002600481106200052757fe5b60200201516040516020018085805190602001908083835b602083106200056457805182526020820191506020810190506020830392506200053f565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b60208310620005b7578051825260208201915060208101905060208303925062000592565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b60208310620006105780518252602082019150602081019050602083039250620005eb565b6001836020036101000a0380198251168184511680821785525050505050509050019450505050506040516020818303038152906040528051906020012062000da060201b60201c565b8199505050505050505050509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480620006fe57506000620006fc600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000dbc60201b60201c565b145b15620007185762000716600062000dc760201b60201c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200078357600080fd5b505af115801562000798573d6000803e3d6000fd5b505050506040513d6020811015620007af57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614620008fc57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200087f57600080fd5b505af115801562000894573d6000803e3d6000fd5b505050506040513d6020811015620008ab57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200096457600080fd5b505afa15801562000979573d6000803e3d6000fd5b505050506040513d60208110156200099057600080fd5b8101908080519060200190929190505050905090565b6060600082850190508084511015620009be57600080fd5b600086602001905060008460200190505b868860200101821015620009f95781890151808288015250602082019150602081019050620009cf565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148062000a995750600062000a97600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000dbc60201b60201c565b145b1562000ab35762000ab1600062000dc760201b60201c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801562000b1e57600080fd5b505af115801562000b33573d6000803e3d6000fd5b505050506040513d602081101562000b4a57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000c9757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801562000c1a57600080fd5b505af115801562000c2f573d6000803e3d6000fd5b505050506040513d602081101562000c4657600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6060600460405190808252806020026020018201604052801562000cd057816020015b606081526020019060019003908162000cba5790505b5090508360006004811062000ce157fe5b60200201518160008151811062000cf457fe5b60200260200101819052508360016004811062000d0d57fe5b60200201518160018151811062000d2057fe5b60200260200101819052508360026004811062000d3957fe5b60200201518160028151811062000d4c57fe5b60200260200101819052508360036004811062000d6557fe5b60200201518160038151811062000d7857fe5b602002602001018190525062000d9685828562000de060201b60201c565b9150509392505050565b8060036000848152602001908152602001600020819055505050565b6000813b9050919050565b600062000dd96200137460201b60201c565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148062000e715750600062000e6f600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000dbc60201b60201c565b145b1562000e8b5762000e89600062000dc760201b60201c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801562000ef657600080fd5b505af115801562000f0b573d6000803e3d6000fd5b505050506040513d602081101562000f2257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146200106f57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801562000ff257600080fd5b505af115801562001007573d6000803e3d6000fd5b505050506040513d60208110156200101e57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b8381101562001107578082015181840152602081019050620010ea565b50505050905090810190601f168015620011355780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b1580156200115657600080fd5b505af11580156200116b573d6000803e3d6000fd5b505050506040513d60208110156200118257600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a764000001811115620011b7576000801b9150506200136d565b6060620011ca856200194360201b60201c565b90506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b838110156200127057808201518184015260208101905062001253565b50505050905090810190601f1680156200129e5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015620012d9578082015181840152602081019050620012bc565b50505050905090810190601f168015620013075780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b1580156200132a57600080fd5b505af11580156200133f573d6000803e3d6000fd5b50505050506040513d60208110156200135757600080fd5b8101908080519060200190929190505050925050505b9392505050565b6000806200139c731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed62000dbc60201b60201c565b11156200144857731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200143e6040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250620019fe60201b60201c565b6001905062001940565b60006200146f73c03a2615d5efaf5f49f60b7bb6583eaec212fdf162000dbc60201b60201c565b11156200151b5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620015116040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250620019fe60201b60201c565b6001905062001940565b60006200154273b7a07bcf2ba2f2703b24c0691b5278999c59ac7e62000dbc60201b60201c565b1115620015ee5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620015e46040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250620019fe60201b60201c565b6001905062001940565b60006200161573146500cfd35b22e4a392fe0adc06de1a1368ed4862000dbc60201b60201c565b1115620016c15773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620016b76040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250620019fe60201b60201c565b6001905062001940565b6000620016e873a2998efd205fb9d4b4963afb70778d6354ad3a4162000dbc60201b60201c565b1115620017945773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200178a6040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250620019fe60201b60201c565b6001905062001940565b6000620017bb736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47562000dbc60201b60201c565b11156200182157736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062001940565b6000620018487320e12a1f859b3feae5fb2a0a32c18f5a65555bbf62000dbc60201b60201c565b1115620018ae577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062001940565b6000620018d57351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa62000dbc60201b60201c565b11156200193b577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062001940565b600090505b90565b60606200195562001a1a60201b60201c565b6200195f62001e7f565b620019788161040062001a2660201b62001fa41760201c565b6200198e8162001a7360201b62001fee1760201c565b60008090505b8351811015620019da57620019cc848281518110620019af57fe5b60200260200101518362001a8960201b62001ffc1790919060201c565b808060010191505062001994565b50620019f18162001abd60201b620020211760201c565b8060000151915050919050565b806002908051906020019062001a1692919062001e99565b5050565b60405180590338823950565b600081905060006020828162001a3857fe5b061462001a53576020818162001a4a57fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b62001a8681600462001ad360201b60201c565b50565b62001a9e826002835162001afb60201b60201c565b62001ab8818362001c8360201b620021901790919060201c565b505050565b62001ad081600762001ad360201b60201c565b50565b62001af7601f60058360ff16901b178362001d4360201b6200223b1790919060201c565b5050565b6017811162001b305762001b2a8160058460ff16901b60ff16178462001d4360201b6200223b1790919060201c565b62001c7e565b60ff811162001b815762001b5d601860058460ff16901b178462001d4360201b6200223b1790919060201c565b62001b7a8160018562001d8c60201b6200227b179092919060201c565b5062001c7d565b61ffff811162001bd35762001baf601960058460ff16901b178462001d4360201b6200223b1790919060201c565b62001bcc8160028562001d8c60201b6200227b179092919060201c565b5062001c7c565b63ffffffff811162001c275762001c03601a60058460ff16901b178462001d4360201b6200223b1790919060201c565b62001c208160048562001d8c60201b6200227b179092919060201c565b5062001c7b565b67ffffffffffffffff811162001c7a5762001c5b601b60058460ff16901b178462001d4360201b6200223b1790919060201c565b62001c788160088562001d8c60201b6200227b179092919060201c565b505b5b5b5b5b505050565b62001c8d62001e7f565b8260200151836000015151835101111562001cce5762001ccd83600262001cc08660200151865162001e0660201b60201c565b0262001e2460201b60201c565b5b60008060008451905085518051602081830101945086518101825260208701935050505b6020811062001d17578151835260208301925060208201915060208103905062001cf2565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b8160200151600183600001515101111562001d725762001d7182600284602001510262001e2460201b60201c565b5b815180516020818301018381536001820183525050505050565b62001d9662001e7f565b83602001518460000151518301111562001dd55762001dd484600262001dc787602001518662001e0660201b60201c565b0262001e2460201b60201c565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b60008183111562001e1a5782905062001e1e565b8190505b92915050565b60608260000151905062001e3f838362001a2660201b60201c565b62001e51838262001c8360201b60201c565b50505050565b60405180608001604052806004905b606081526020019060019003908162001e665790505090565b604051806040016040528060608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062001edc57805160ff191683800117855562001f0d565b8280016001018555821562001f0d579182015b8281111562001f0c57825182559160200191906001019062001eef565b5b50905062001f1c919062001f20565b5090565b62001f4591905b8082111562001f4157600081600090555060010162001f27565b5090565b90565b6124708062001f586000396000f3fe60806040526004361061003f5760003560e01c806327dc297e1461004457806338bbfa5014610116578063a2e620451461027f578063dc34b0aa14610289575b600080fd5b34801561005057600080fd5b506101146004803603604081101561006757600080fd5b81019080803590602001909291908035906020019064010000000081111561008e57600080fd5b8201836020820111156100a057600080fd5b803590602001918460018302840111640100000000831117156100c257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506102b4565b005b34801561012257600080fd5b5061027d6004803603606081101561013957600080fd5b81019080803590602001909291908035906020019064010000000081111561016057600080fd5b82018360208201111561017257600080fd5b8035906020019184600183028401116401000000008311171561019457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156101f757600080fd5b82018360208201111561020957600080fd5b8035906020019184600183028401116401000000008311171561022b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506102f7565b005b6102876103fd565b005b34801561029557600080fd5b5061029e610466565b6040518082815260200191505060405180910390f35b6102f3828260006040519080825280601f01601f1916602001820160405280156102ed5781602001600182028038833980820191505090505b506102f7565b5050565b6102ff61046c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033657600080fd5b60006064836040516020018082805190602001908083835b60208310610371578051825260208201915060208101905060208303925061034e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c816103b657fe5b069050806005819055507fc13d60fe9dffdb6908d2d446cd18134373a51db0738ee04f296eeb9128121cbc816040518082815260200191505060405180910390a150505050565b6000809050600062030d40905061041682600183610789565b507fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c473896040518080602001828103825260348152602001806124086034913960400191505060405180910390a15050565b60055481565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806104f4575060006104f2600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610d24565b145b15610505576105036000610d2f565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561056f57600080fd5b505af1158015610583573d6000803e3d6000fd5b505050506040513d602081101561059957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106e257600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561066757600080fd5b505af115801561067b573d6000803e3d6000fd5b505050506040513d602081101561069157600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561074957600080fd5b505afa15801561075d573d6000803e3d6000fd5b505050506040513d602081101561077357600080fd5b8101908080519060200190929190505050905090565b6000808311801561079b575060208311155b6107a457600080fd5b600a84029350606060016040519080825280601f01601f1916602001820160405280156107e05781602001600182028038833980820191505090505b5090508360f81b816000815181106107f457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f1916602001820160405280156108595781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f1916602001820160405280156108925781602001600182028038833980820191505090505b509050600061089f610d40565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f1916602001820160405280156108f35781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f1916602001820160405280156109325781602001600182028038833980820191505090505b509050610945826018600884600061105d565b5061094e612321565b604051806080016040528087815260200188815260200186815260200184815250905060006109b36040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c6110bc565b9050606060086040519080825280601f01601f1916602001820160405280156109eb5781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a010000000000000000000000000000000000000000000000000000810460228301537901000000000000000000000000000000000000000000000000008104602183015378010000000000000000000000000000000000000000000000008104602083015350610d11828285600160048110610b2a57fe5b6020020151600287600060048110610b3e57fe5b60200201516040518082805190602001908083835b60208310610b765780518252602082019150602081019050602083039250610b53565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015610bb8573d6000803e3d6000fd5b5050506040513d6020811015610bcd57600080fd5b810190808051906020019092919050505087600260048110610beb57fe5b60200201516040516020018085805190602001908083835b60208310610c265780518252602082019150602081019050602083039250610c03565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b60208310610c775780518252602082019150602081019050602083039250610c54565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b60208310610cce5780518252602082019150602081019050602083039250610cab565b6001836020036101000a03801982511681845116808217855250505050505090500194505050505060405160208183030381529060405280519060200120611429565b8199505050505050505050509392505050565b6000813b9050919050565b6000610d39611445565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610dc857506000610dc6600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610d24565b145b15610dd957610dd76000610d2f565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610e4357600080fd5b505af1158015610e57573d6000803e3d6000fd5b505050506040513d6020811015610e6d57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610fb657600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610f3b57600080fd5b505af1158015610f4f573d6000803e3d6000fd5b505050506040513d6020811015610f6557600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561101d57600080fd5b505afa158015611031573d6000803e3d6000fd5b505050506040513d602081101561104757600080fd5b8101908080519060200190929190505050905090565b606060008285019050808451101561107457600080fd5b600086602001905060008460200190505b8688602001018210156110ad5781890151808288015250602082019150602081019050611085565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061114457506000611142600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610d24565b145b15611155576111536000610d2f565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156111bf57600080fd5b505af11580156111d3573d6000803e3d6000fd5b505050506040513d60208110156111e957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461133257600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156112b757600080fd5b505af11580156112cb573d6000803e3d6000fd5b505050506040513d60208110156112e157600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6060600460405190808252806020026020018201604052801561136957816020015b60608152602001906001900390816113545790505b5090508360006004811061137957fe5b60200201518160008151811061138b57fe5b6020026020010181905250836001600481106113a357fe5b6020020151816001815181106113b557fe5b6020026020010181905250836002600481106113cd57fe5b6020020151816002815181106113df57fe5b6020026020010181905250836003600481106113f757fe5b60200201518160038151811061140957fe5b602002602001018190525061141f85828561199c565b9150509392505050565b8060036000848152602001908152602001600020819055505050565b600080611465731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610d24565b111561150757731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506114fe6040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250611efe565b60019050611999565b600061152673c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610d24565b11156115c85773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506115bf6040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250611efe565b60019050611999565b60006115e773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610d24565b11156116895773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506116806040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250611efe565b60019050611999565b60006116a873146500cfd35b22e4a392fe0adc06de1a1368ed48610d24565b111561174a5773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506117416040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250611efe565b60019050611999565b600061176973a2998efd205fb9d4b4963afb70778d6354ad3a41610d24565b111561180b5773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506118026040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250611efe565b60019050611999565b600061182a736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610d24565b111561188e57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611999565b60006118ad7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610d24565b1115611911577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611999565b60006119307351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610d24565b1115611994577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611999565b600090505b90565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611a2457506000611a22600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610d24565b145b15611a3557611a336000610d2f565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611a9f57600080fd5b505af1158015611ab3573d6000803e3d6000fd5b505050506040513d6020811015611ac957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611c1257600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611b9757600080fd5b505af1158015611bab573d6000803e3d6000fd5b505050506040513d6020811015611bc157600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015611ca8578082015181840152602081019050611c8d565b50505050905090810190601f168015611cd55780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015611cf557600080fd5b505af1158015611d09573d6000803e3d6000fd5b505050506040513d6020811015611d1f57600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a764000001811115611d52576000801b915050611ef7565b6060611d5d85611f18565b90506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015611e01578082015181840152602081019050611de6565b50505050905090810190601f168015611e2e5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015611e67578082015181840152602081019050611e4c565b50505050905090810190601f168015611e945780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b158015611eb657600080fd5b505af1158015611eca573d6000803e3d6000fd5b50505050506040513d6020811015611ee157600080fd5b8101908080519060200190929190505050925050505b9392505050565b8060029080519060200190611f14929190612348565b5050565b6060611f22611f98565b611f2a6123c8565b611f3681610400611fa4565b611f3f81611fee565b60008090505b8351811015611f8157611f74848281518110611f5d57fe5b602002602001015183611ffc90919063ffffffff16565b8080600101915050611f45565b50611f8b81612021565b8060000151915050919050565b60405180590338823950565b6000819050600060208281611fb557fe5b0614611fce5760208181611fc557fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b611ff981600461202f565b50565b6120098260028351612050565b61201c818361219090919063ffffffff16565b505050565b61202c81600761202f565b50565b61204c601f60058360ff16901b178361223b90919063ffffffff16565b5050565b6017811161207c576120778160058460ff16901b60ff16178461223b90919063ffffffff16565b61218b565b60ff81116120bd576120a1601860058460ff16901b178461223b90919063ffffffff16565b6120b78160018561227b9092919063ffffffff16565b5061218a565b61ffff81116120ff576120e3601960058460ff16901b178461223b90919063ffffffff16565b6120f98160028561227b9092919063ffffffff16565b50612189565b63ffffffff811161214357612127601a60058460ff16901b178461223b90919063ffffffff16565b61213d8160048561227b9092919063ffffffff16565b50612188565b67ffffffffffffffff81116121875761216f601b60058460ff16901b178461223b90919063ffffffff16565b6121858160088561227b9092919063ffffffff16565b505b5b5b5b5b505050565b6121986123c8565b826020015183600001515183510111156121c8576121c78360026121c1866020015186516122e2565b026122fe565b5b60008060008451905085518051602081830101945086518101825260208701935050505b6020811061220f57815183526020830192506020820191506020810390506121ec565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b81602001516001836000015151011115612261576122608260028460200151026122fe565b5b815180516020818301018381536001820183525050505050565b6122836123c8565b8360200151846000015151830111156122b1576122b08460026122aa8760200151866122e2565b026122fe565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b6000818311156122f4578290506122f8565b8190505b92915050565b6060826000015190506123118383611fa4565b61231b8382612190565b50505050565b60405180608001604052806004905b60608152602001906001900390816123305790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061238957805160ff19168380011785556123b7565b828001600101855582156123b7579182015b828111156123b657825182559160200191906001019061239b565b5b5090506123c491906123e2565b5090565b604051806040016040528060608152602001600081525090565b61240491905b808211156124005760008160009055506001016123e8565b5090565b9056fe50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722ea265627a7a72315820b6aa03cedc78da98248e2a7c9ece75a55a10e0723e4453619cfb87e56125e51364736f6c634300050c003250726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e",
  "deployedBytecode": "",
  "sourceMap": "68:950:3:-;;;305:40;8:9:-1;5:2;;;30:1;27;20:12;5:2;305:40:3;331:8;:6;;;:8;;:::i;:::-;68:950;;666:341;706:29;737:1;706:32;;745:21;769:6;745:30;;782:130;818:21;155:1;887:16;782:25;;;:130;;:::i;:::-;;924:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;666:341;;:::o;46097:2683:4:-;46199:16;46247:1;46237:7;:11;46236:32;;;;;46265:2;46254:7;:13;;46236:32;46228:41;;;;;;46290:2;46280:12;;;;46349:19;46381:1;46371:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46371:12:4;;;;46349:34;;46417:7;46406:20;;46394:6;46401:1;46394:9;;;;;;;;;;;:32;;;;;;;;;;;46437:19;46469:2;46459:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46459:13:4;;;;46437:35;;46483:27;46523:2;46513:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46513:13:4;;;;46483:43;;46537:30;46570:40;:38;;;:40;;:::i;:::-;46537:73;;46660:4;46652:6;46645:20;47013:9;47003:8;46999:24;46994:1;46986:6;46982:14;46972:25;46968:56;46961:4;46953:6;46949:17;46942:83;47062:4;47046:14;47039:28;47115:22;47108:4;47092:14;47088:25;47081:57;47159:18;47190:2;47180:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47180:13:4;;;;47159:34;;47253:6;47246:4;47239:5;47235:16;47228:32;47281:25;47319:1;47309:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47309:12:4;;;;47281:40;;47332;47342:5;47349:2;47353:1;47356:12;47370:1;47332:9;;;:40;;:::i;:::-;;47383:20;;:::i;:::-;:62;;;;;;;;47407:6;47383:62;;;;47415:6;47383:62;;;;47423:14;47383:62;;;;47439:5;47383:62;;;;;47456:15;47474:47;;;;;;;;;;;;;;;;;;47499:4;47505:15;47474:14;;;:47;;:::i;:::-;47456:65;;47532:30;47575:1;47565:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47565:12:4;;;;47532:45;;47645:4;47631:12;47627:23;47621:30;47710:65;47707:1;47703:73;47696:4;47677:17;47673:28;47665:112;47836:63;47833:1;47829:71;47822:4;47803:17;47799:28;47791:110;47960:61;47957:1;47953:69;47946:4;47927:17;47923:28;47915:108;48082:59;48079:1;48075:67;48068:4;48049:17;48045:28;48037:106;48202:57;48199:1;48195:65;48188:4;48169:17;48165:28;48157:104;48320:55;48317:1;48313:63;48306:4;48287:17;48283:28;48275:102;48436:53;48433:1;48429:61;48422:4;48403:17;48399:28;48391:100;48550:51;48547:1;48543:59;48536:4;48517:17;48513:28;48505:98;47597:1017;48624:123;48656:7;48692:17;48711:4;48716:1;48711:7;;;;;;;;;;;48720:15;48727:4;48732:1;48727:7;;;;;;;;;;;48720:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48720:15:4;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;48720:15:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;48720:15:4;;;;;;;;;;;;;;;;48737:4;48742:1;48737:7;;;;;;;;;;;48675:70;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48675:70:4;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48675:70:4;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48675:70:4;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;48675:70:4;;;48665:81;;;;;;48624:31;;;:123;;:::i;:::-;48765:7;48758:14;;;;;;;;;;;46097:2683;;;;;:::o;38467:171::-;38547:23;12155:1;12131:26;;12139:3;;;;;;;;;;;12131:26;;;12130:64;;;;12192:1;12163:25;12183:3;;;;;;;;;;;12163:11;;;:25;;:::i;:::-;:30;12130:64;12126:132;;;12211:35;11777:1;12211:19;;;:35;;:::i;:::-;;12126:132;12293:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12293:16:4;;;;;;;;;;;;;;;;12272:37;;12280:8;;;;;;;;;;;12272:37;;;12268:108;;12347:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12347:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12347:16:4;;;;;;;;;;;;;;;;12326:8;;:38;;;;;;;;;;;;;;;;;;12268:108;38590:8;;;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;38590:40:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38590:40:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;38590:40:4;;;;;;;;;;;;;;;;38583:47;;38467:171;:::o;55551:707::-;55679:25;55717:14;55744:9;55734:7;:19;55717:36;;55786:9;55772:3;:10;:23;;55764:32;;;;;;55852:6;55866:11;55861:2;:16;55852:25;;55969:6;55983:9;55978:2;:14;55969:23;;56003:227;56034:7;56020:11;56015:2;:16;:26;56010:1;:32;56003:227;;;56115:1;56108:5;56104:13;56098:20;56156:3;56152:1;56147:3;56143:11;56136:24;56068:107;56194:2;56189:7;;;;56216:2;56211:7;;;;56003:227;;;56247:3;56240:10;;;;;55551:707;;;;;;;:::o;35804:384::-;35924:11;12155:1;12131:26;;12139:3;;;;;;;;;;;12131:26;;;12130:64;;;;12192:1;12163:25;12183:3;;;;;;;;;;;12163:11;;;:25;;:::i;:::-;:30;12130:64;12126:132;;;12211:35;11777:1;12211:19;;;:35;;:::i;:::-;;12126:132;12293:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12293:16:4;;;;;;;;;;;;;;;;12272:37;;12280:8;;;;;;;;;;;12272:37;;;12268:108;;12347:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12347:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12347:16:4;;;;;;;;;;;;;;;;12326:8;;:38;;;;;;;;;;;;;;;;;;12268:108;35948:22;35985:1;35973:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35948:39;;36011:5;36017:1;36011:8;;;;;;;;;;;35998:7;36006:1;35998:10;;;;;;;;;;;;;:21;;;;36043:5;36049:1;36043:8;;;;;;;;;;;36030:7;36038:1;36030:10;;;;;;;;;;;;;:21;;;;36075:5;36081:1;36075:8;;;;;;;;;;;36062:7;36070:1;36062:10;;;;;;;;;;;;;:21;;;;36107:5;36113:1;36107:8;;;;;;;;;;;36094:7;36102:1;36094:10;;;;;;;;;;;;;:21;;;;36133:47;36148:11;36161:7;36170:9;36133:14;;;:47;;:::i;:::-;36126:54;;;35804:384;;;;;:::o;48788:154::-;48923:11;48888:22;:32;48911:8;48888:32;;;;;;;;;;;:46;;;;48788:154;;:::o;38164:151::-;38223:10;38291:5;38279:18;38270:27;;38255:53;;;:::o;12880:208::-;12945:16;13059:21;:19;;;:21;;:::i;:::-;13052:28;;12880:208;;;:::o;30207:461::-;30326:11;12155:1;12131:26;;12139:3;;;;;;;;;;;12131:26;;;12130:64;;;;12192:1;12163:25;12183:3;;;;;;;;;;;12163:11;;;:25;;:::i;:::-;:30;12130:64;12126:132;;;12211:35;11777:1;12211:19;;;:35;;:::i;:::-;;12126:132;12293:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12293:16:4;;;;;;;;;;;;;;;;12272:37;;12280:8;;;;;;;;;;;12272:37;;;12268:108;;12347:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12347:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12347:16:4;;;;;;;;;;;;;;;;12326:8;;:38;;;;;;;;;;;;;;;;;;12268:108;30350:10;30363:8;;;;;;;;;;;:17;;;30381:11;30394:9;30363:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30363:41:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30363:41:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30363:41:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;30363:41:4;;;;;;;;;;;;;;;;30350:54;;30451:9;30437:11;:23;30427:7;:33;30419:5;:41;30415:109;;;30484:1;30477:8;;;;;;;30415:109;30534:17;30554:14;30562:5;30554:7;;;:14;;:::i;:::-;30534:34;;30586:8;;;;;;;;;;;:28;;;30621:5;30628:1;30631:11;30644:4;30650:9;30586:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30586:74:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30586:74:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30586:74:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30586:74:4;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;30586:74:4;;;;;;;;;;;;;;;;30579:81;;;;12386:1;30207:461;;;;;:::o;13372:2070::-;13421:16;13512:1;13454:55;13466:42;13454:11;;;:55;;:::i;:::-;:59;13450:250;;;13566:42;13540:3;;:69;;;;;;;;;;;;;;;;;;13624:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;13684:4;13677:11;;;;13450:250;13772:1;13714:55;13726:42;13714:11;;;:55;;:::i;:::-;:59;13710:259;;;13834:42;13808:3;;:69;;;;;;;;;;;;;;;;;;13892:39;;;;;;;;;;;;;;;;;;:23;;;:39;;:::i;:::-;13953:4;13946:11;;;;13710:259;14041:1;13983:55;13995:42;13983:11;;;:55;;:::i;:::-;:59;13979:254;;;14101:42;14075:3;;:69;;;;;;;;;;;;;;;;;;14159:36;;;;;;;;;;;;;;;;;;:23;;;:36;;:::i;:::-;14217:4;14210:11;;;;13979:254;14305:1;14247:55;14259:42;14247:11;;;:55;;:::i;:::-;:59;14243:258;;;14367:42;14341:3;;:69;;;;;;;;;;;;;;;;;;14425:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;14485:4;14478:11;;;;14243:258;14573:1;14515:55;14527:42;14515:11;;;:55;;:::i;:::-;:59;14511:256;;;14634:42;14608:3;;:69;;;;;;;;;;;;;;;;;;14692:37;;;;;;;;;;;;;;;;;;:23;;;:37;;:::i;:::-;14751:4;14744:11;;;;14511:256;14839:1;14781:55;14793:42;14781:11;;;:55;;:::i;:::-;:59;14777:205;;;14901:42;14875:3;;:69;;;;;;;;;;;;;;;;;;14966:4;14959:11;;;;14777:205;15054:1;14996:55;15008:42;14996:11;;;:55;;:::i;:::-;:59;14992:204;;;15115:42;15089:3;;:69;;;;;;;;;;;;;;;;;;15180:4;15173:11;;;;14992:204;15268:1;15210:55;15222:42;15210:11;;;:55;;:::i;:::-;:59;15206:206;;;15331:42;15305:3;;:69;;;;;;;;;;;;;;;;;;15396:4;15389:11;;;;15206:206;15429:5;15422:12;;13372:2070;;:::o;45714:375::-;45775:26;45814:19;:17;;;:19;;:::i;:::-;45844:24;;:::i;:::-;45879:22;45891:3;45896:4;45879:11;;;;;:22;;:::i;:::-;45912:16;:3;:14;;;;;:16;;:::i;:::-;45944:6;45953:1;45944:10;;45939:90;45960:4;:11;45956:1;:15;45939:90;;;45993:24;46009:4;46014:1;46009:7;;;;;;;;;;;;;;45993:3;:15;;;;;;:24;;;;:::i;:::-;45973:3;;;;;;;45939:90;;;;46039:17;:3;:15;;;;;:17;;:::i;:::-;46074:3;:7;;;46067:14;;;45714:375;;;:::o;13096:127::-;13202:13;13178:21;:37;;;;;;;;;;;;:::i;:::-;;13096:127;:::o;59205:175::-;59301:4;59295:11;59356:4;59349:5;59345:16;59335:8;59329:4;59320:42;59268:105;:::o;4339:446::-;4414:13;4430:9;4414:25;;4471:1;4465:2;4454:8;:13;;;;;;:18;4450:83;;4518:2;4507:8;:13;;;;;;4501:2;:20;4489:32;;;;4450:83;4559:8;4543:4;:13;;:24;;;;;4657:4;4651:11;4689:3;4683:4;4676:17;4719:1;4714:3;4707:14;4757:8;4752:3;4748:18;4742:4;4735:32;4625:153;;;;:::o;10737:130::-;10809:50;10836:4;8844:1;10809:26;;;:50;;:::i;:::-;10737:130;:::o;10342:181::-;10436:49;10447:4;8794:1;10471:6;:13;10436:10;;;:49;;:::i;:::-;10496:19;10508:6;10496:4;:11;;;;;;:19;;;;:::i;:::-;;10342:181;;:::o;11009:138::-;11082:57;11109:4;9009:1;11082:26;;;:57;;:::i;:::-;11009:138;:::o;9765:147::-;9866:38;9900:2;9895:1;9885:6;:11;;;;9884:18;9866:4;:11;;;;;;:38;;;;:::i;:::-;9765:147;;:::o;9019:738::-;9131:2;9121:6;:12;9117:633;;9150:42;9184:6;9179:1;9169:6;:11;;;;9168:22;;;9150:4;:11;;;;;;:42;;;;:::i;:::-;9117:633;;;9224:4;9214:6;:14;9210:540;;9245:38;9279:2;9274:1;9264:6;:11;;;;9263:18;9245:4;:11;;;;;;:38;;;;:::i;:::-;9298:25;9313:6;9321:1;9298:4;:14;;;;;;:25;;;;;:::i;:::-;;9210:540;;;9355:6;9345;:16;9341:409;;9378:38;9412:2;9407:1;9397:6;:11;;;;9396:18;9378:4;:11;;;;;;:38;;;;:::i;:::-;9431:25;9446:6;9454:1;9431:4;:14;;;;;;:25;;;;;:::i;:::-;;9341:409;;;9488:10;9478:6;:20;9474:276;;9515:38;9549:2;9544:1;9534:6;:11;;;;9533:18;9515:4;:11;;;;;;:38;;;;:::i;:::-;9568:25;9583:6;9591:1;9568:4;:14;;;;;;:25;;;;;:::i;:::-;;9474:276;;;9625:18;9615:6;:28;9611:139;;9660:38;9694:2;9689:1;9679:6;:11;;;;9678:18;9660:4;:11;;;;;;:38;;;;:::i;:::-;9713:25;9728:6;9736:1;9713:4;:14;;;;;;:25;;;;;:::i;:::-;;9611:139;9474:276;9341:409;9210:540;9117:633;9019:738;;;:::o;5425:1241::-;5504:21;;:::i;:::-;5575:4;:13;;;5557:4;:8;;;:15;5542:5;:12;:30;:46;5538:129;;;5605:50;5612:4;5653:1;5618:32;5622:4;:13;;;5637:5;:12;5618:3;;;:32;;:::i;:::-;:36;5605:6;;;:50;;:::i;:::-;5538:129;5677:9;5697:8;5716;5727:5;:12;5716:23;;5794:4;5788:11;5870:6;5864:13;5958:2;5949:6;5941;5937:19;5933:28;5925:36;;6082:5;6076:12;6068:6;6064:25;6056:6;6049:41;6146:2;6139:5;6135:14;6128:21;;5759:401;;6170:212;6183:2;6176:3;:9;6170:212;;6302:3;6296:10;6290:4;6283:24;6344:2;6336:10;;;;6368:2;6361:9;;;;6194:2;6187:9;;;;6170:212;;;6392:9;6424:1;6417:3;6412:2;:8;6404:3;:17;:21;6392:33;;6519:4;6515:9;6509:3;6503:10;6499:26;6572:4;6565;6559:11;6555:22;6617:7;6607:8;6604:21;6598:4;6591:35;6469:168;;6654:4;6647:11;;;;;;5425:1241;;;;:::o;6960:586::-;7060:4;:13;;;7056:1;7038:4;:8;;;:15;:19;:35;7034:99;;;7090:31;7097:4;7119:1;7103:4;:13;;;:17;7090:6;;;:31;;:::i;:::-;7034:99;7187:4;7181:11;7263:6;7257:13;7355:2;7346:6;7338;7334:19;7330:28;7454:5;7448:4;7440:20;7501:1;7493:6;7489:14;7481:6;7474:30;7152:387;;;;;:::o;7840:748::-;7925:21;;:::i;:::-;7988:4;:13;;;7970:4;:8;;;:15;7963:4;:22;:38;7959:113;;;8018:42;8025:4;8058:1;8031:24;8035:4;:13;;;8050:4;8031:3;;;:24;;:::i;:::-;:28;8018:6;;;:42;;:::i;:::-;7959:113;8082:9;8108:1;8101:4;8094:3;:11;:15;8082:27;;8164:4;8158:11;8240:6;8234:13;8332:4;8323:6;8315;8311:19;8307:30;8470:5;8462:4;8458:9;8451:4;8445:11;8441:27;8438:38;8432:4;8425:52;8518:4;8510:6;8506:17;8498:6;8491:33;8129:430;;;8576:4;8569:11;;;7840:748;;;;;:::o;4978:151::-;5031:9;5062:2;5057;:7;5053:49;;;5088:2;5081:9;;;;5053:49;5119:2;5112:9;;4978:151;;;;;:::o;4793:177::-;4869:19;4891:4;:8;;;4869:30;;4910:21;4915:4;4921:9;4910:4;;;:21;;:::i;:::-;4942:20;4949:4;4955:6;4942;;;:20;;:::i;:::-;;4793:177;;;:::o;68:950:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "68:950:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15686:124:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15686:124:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15686:124:4;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15686:124:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15686:124:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15686:124:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15686:124:4;;;;;;;;;;;;;;;:::i;:::-;;351:309:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;351:309:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;351:309:3;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;351:309:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;351:309:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;351:309:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;351:309:3;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;351:309:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;351:309:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;351:309:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;351:309:3;;;;;;;;;;;;;;;:::i;:::-;;666:341;;;:::i;:::-;;161:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;161:27:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15686:124:4;15762:40;15773:5;15780:7;15799:1;15789:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;15789:12:4;;;;15762:10;:40::i;:::-;15686:124;;:::o;351:309:3:-;469:20;:18;:20::i;:::-;455:34;;:10;:34;;;447:43;;;;;;499:20;570:3;557:7;540:25;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;540:25:3;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;540:25:3;;;530:36;;;;;;522:45;;:51;;;;;;499:74;;595:12;580;:27;;;;619:35;641:12;619:35;;;;;;;;;;;;;;;;;;351:309;;;;:::o;666:341::-;706:29;737:1;706:32;;745:21;769:6;745:30;;782:130;818:21;155:1;887:16;782:25;:130::i;:::-;;924:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;666:341;;:::o;161:27::-;;;;:::o;38024:132:4:-;38084:24;12155:1;12131:26;;12139:3;;;;;;;;;;;12131:26;;;12130:64;;;;12192:1;12163:25;12183:3;;;;;;;;;;;12163:11;:25::i;:::-;:30;12130:64;12126:132;;;12211:35;11777:1;12211:19;:35::i;:::-;;12126:132;12293:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12293:16:4;;;;;;;;;;;;;;;;12272:37;;12280:8;;;;;;;;;;;12272:37;;;12268:108;;12347:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12347:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12347:16:4;;;;;;;;;;;;;;;;12326:8;;:38;;;;;;;;;;;;;;;;;;12268:108;38128:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;38128:20:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38128:20:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;38128:20:4;;;;;;;;;;;;;;;;38121:27;;38024:132;:::o;46097:2683::-;46199:16;46247:1;46237:7;:11;46236:32;;;;;46265:2;46254:7;:13;;46236:32;46228:41;;;;;;46290:2;46280:12;;;;46349:19;46381:1;46371:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46371:12:4;;;;46349:34;;46417:7;46406:20;;46394:6;46401:1;46394:9;;;;;;;;;;;:32;;;;;;;;;;;46437:19;46469:2;46459:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46459:13:4;;;;46437:35;;46483:27;46523:2;46513:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46513:13:4;;;;46483:43;;46537:30;46570:40;:38;:40::i;:::-;46537:73;;46660:4;46652:6;46645:20;47013:9;47003:8;46999:24;46994:1;46986:6;46982:14;46972:25;46968:56;46961:4;46953:6;46949:17;46942:83;47062:4;47046:14;47039:28;47115:22;47108:4;47092:14;47088:25;47081:57;47159:18;47190:2;47180:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47180:13:4;;;;47159:34;;47253:6;47246:4;47239:5;47235:16;47228:32;47281:25;47319:1;47309:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47309:12:4;;;;47281:40;;47332;47342:5;47349:2;47353:1;47356:12;47370:1;47332:9;:40::i;:::-;;47383:20;;:::i;:::-;:62;;;;;;;;47407:6;47383:62;;;;47415:6;47383:62;;;;47423:14;47383:62;;;;47439:5;47383:62;;;;;47456:15;47474:47;;;;;;;;;;;;;;;;;;47499:4;47505:15;47474:14;:47::i;:::-;47456:65;;47532:30;47575:1;47565:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47565:12:4;;;;47532:45;;47645:4;47631:12;47627:23;47621:30;47710:65;47707:1;47703:73;47696:4;47677:17;47673:28;47665:112;47836:63;47833:1;47829:71;47822:4;47803:17;47799:28;47791:110;47960:61;47957:1;47953:69;47946:4;47927:17;47923:28;47915:108;48082:59;48079:1;48075:67;48068:4;48049:17;48045:28;48037:106;48202:57;48199:1;48195:65;48188:4;48169:17;48165:28;48157:104;48320:55;48317:1;48313:63;48306:4;48287:17;48283:28;48275:102;48436:53;48433:1;48429:61;48422:4;48403:17;48399:28;48391:100;48550:51;48547:1;48543:59;48536:4;48517:17;48513:28;48505:98;47597:1017;48624:123;48656:7;48692:17;48711:4;48716:1;48711:7;;;;;;;;;;;48720:15;48727:4;48732:1;48727:7;;;;;;;;;;;48720:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48720:15:4;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;48720:15:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;48720:15:4;;;;;;;;;;;;;;;;48737:4;48742:1;48737:7;;;;;;;;;;;48675:70;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48675:70:4;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48675:70:4;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48675:70:4;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;48675:70:4;;;48665:81;;;;;;48624:31;:123::i;:::-;48765:7;48758:14;;;;;;;;;;;46097:2683;;;;;:::o;38164:151::-;38223:10;38291:5;38279:18;38270:27;;38255:53;;;:::o;12880:208::-;12945:16;13059:21;:19;:21::i;:::-;13052:28;;12880:208;;;:::o;38467:171::-;38547:23;12155:1;12131:26;;12139:3;;;;;;;;;;;12131:26;;;12130:64;;;;12192:1;12163:25;12183:3;;;;;;;;;;;12163:11;:25::i;:::-;:30;12130:64;12126:132;;;12211:35;11777:1;12211:19;:35::i;:::-;;12126:132;12293:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12293:16:4;;;;;;;;;;;;;;;;12272:37;;12280:8;;;;;;;;;;;12272:37;;;12268:108;;12347:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12347:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12347:16:4;;;;;;;;;;;;;;;;12326:8;;:38;;;;;;;;;;;;;;;;;;12268:108;38590:8;;;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;38590:40:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38590:40:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;38590:40:4;;;;;;;;;;;;;;;;38583:47;;38467:171;:::o;55551:707::-;55679:25;55717:14;55744:9;55734:7;:19;55717:36;;55786:9;55772:3;:10;:23;;55764:32;;;;;;55852:6;55866:11;55861:2;:16;55852:25;;55969:6;55983:9;55978:2;:14;55969:23;;56003:227;56034:7;56020:11;56015:2;:16;:26;56010:1;:32;56003:227;;;56115:1;56108:5;56104:13;56098:20;56156:3;56152:1;56147:3;56143:11;56136:24;56068:107;56194:2;56189:7;;;;56216:2;56211:7;;;;56003:227;;;56247:3;56240:10;;;;;55551:707;;;;;;;:::o;35804:384::-;35924:11;12155:1;12131:26;;12139:3;;;;;;;;;;;12131:26;;;12130:64;;;;12192:1;12163:25;12183:3;;;;;;;;;;;12163:11;:25::i;:::-;:30;12130:64;12126:132;;;12211:35;11777:1;12211:19;:35::i;:::-;;12126:132;12293:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12293:16:4;;;;;;;;;;;;;;;;12272:37;;12280:8;;;;;;;;;;;12272:37;;;12268:108;;12347:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12347:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12347:16:4;;;;;;;;;;;;;;;;12326:8;;:38;;;;;;;;;;;;;;;;;;12268:108;35948:22;35985:1;35973:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35948:39;;36011:5;36017:1;36011:8;;;;;;;;;;;35998:7;36006:1;35998:10;;;;;;;;;;;;;:21;;;;36043:5;36049:1;36043:8;;;;;;;;;;;36030:7;36038:1;36030:10;;;;;;;;;;;;;:21;;;;36075:5;36081:1;36075:8;;;;;;;;;;;36062:7;36070:1;36062:10;;;;;;;;;;;;;:21;;;;36107:5;36113:1;36107:8;;;;;;;;;;;36094:7;36102:1;36094:10;;;;;;;;;;;;;:21;;;;36133:47;36148:11;36161:7;36170:9;36133:14;:47::i;:::-;36126:54;;;35804:384;;;;;:::o;48788:154::-;48923:11;48888:22;:32;48911:8;48888:32;;;;;;;;;;;:46;;;;48788:154;;:::o;13372:2070::-;13421:16;13512:1;13454:55;13466:42;13454:11;:55::i;:::-;:59;13450:250;;;13566:42;13540:3;;:69;;;;;;;;;;;;;;;;;;13624:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13684:4;13677:11;;;;13450:250;13772:1;13714:55;13726:42;13714:11;:55::i;:::-;:59;13710:259;;;13834:42;13808:3;;:69;;;;;;;;;;;;;;;;;;13892:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;13953:4;13946:11;;;;13710:259;14041:1;13983:55;13995:42;13983:11;:55::i;:::-;:59;13979:254;;;14101:42;14075:3;;:69;;;;;;;;;;;;;;;;;;14159:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;14217:4;14210:11;;;;13979:254;14305:1;14247:55;14259:42;14247:11;:55::i;:::-;:59;14243:258;;;14367:42;14341:3;;:69;;;;;;;;;;;;;;;;;;14425:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14485:4;14478:11;;;;14243:258;14573:1;14515:55;14527:42;14515:11;:55::i;:::-;:59;14511:256;;;14634:42;14608:3;;:69;;;;;;;;;;;;;;;;;;14692:37;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14751:4;14744:11;;;;14511:256;14839:1;14781:55;14793:42;14781:11;:55::i;:::-;:59;14777:205;;;14901:42;14875:3;;:69;;;;;;;;;;;;;;;;;;14966:4;14959:11;;;;14777:205;15054:1;14996:55;15008:42;14996:11;:55::i;:::-;:59;14992:204;;;15115:42;15089:3;;:69;;;;;;;;;;;;;;;;;;15180:4;15173:11;;;;14992:204;15268:1;15210:55;15222:42;15210:11;:55::i;:::-;:59;15206:206;;;15331:42;15305:3;;:69;;;;;;;;;;;;;;;;;;15396:4;15389:11;;;;15206:206;15429:5;15422:12;;13372:2070;;:::o;30207:461::-;30326:11;12155:1;12131:26;;12139:3;;;;;;;;;;;12131:26;;;12130:64;;;;12192:1;12163:25;12183:3;;;;;;;;;;;12163:11;:25::i;:::-;:30;12130:64;12126:132;;;12211:35;11777:1;12211:19;:35::i;:::-;;12126:132;12293:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12293:16:4;;;;;;;;;;;;;;;;12272:37;;12280:8;;;;;;;;;;;12272:37;;;12268:108;;12347:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12347:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12347:16:4;;;;;;;;;;;;;;;;12326:8;;:38;;;;;;;;;;;;;;;;;;12268:108;30350:10;30363:8;;;;;;;;;;;:17;;;30381:11;30394:9;30363:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30363:41:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30363:41:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30363:41:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;30363:41:4;;;;;;;;;;;;;;;;30350:54;;30451:9;30437:11;:23;30427:7;:33;30419:5;:41;30415:109;;;30484:1;30477:8;;;;;;;30415:109;30534:17;30554:14;30562:5;30554:7;:14::i;:::-;30534:34;;30586:8;;;;;;;;;;;:28;;;30621:5;30628:1;30631:11;30644:4;30650:9;30586:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30586:74:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30586:74:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30586:74:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30586:74:4;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;30586:74:4;;;;;;;;;;;;;;;;30579:81;;;;12386:1;30207:461;;;;;:::o;13096:127::-;13202:13;13178:21;:37;;;;;;;;;;;;:::i;:::-;;13096:127;:::o;45714:375::-;45775:26;45814:19;:17;:19::i;:::-;45844:24;;:::i;:::-;45879:22;45891:3;45896:4;45879:11;:22::i;:::-;45912:16;:3;:14;:16::i;:::-;45944:6;45953:1;45944:10;;45939:90;45960:4;:11;45956:1;:15;45939:90;;;45993:24;46009:4;46014:1;46009:7;;;;;;;;;;;;;;45993:3;:15;;:24;;;;:::i;:::-;45973:3;;;;;;;45939:90;;;;46039:17;:3;:15;:17::i;:::-;46074:3;:7;;;46067:14;;;45714:375;;;:::o;59205:175::-;59301:4;59295:11;59356:4;59349:5;59345:16;59335:8;59329:4;59320:42;59268:105;:::o;4339:446::-;4414:13;4430:9;4414:25;;4471:1;4465:2;4454:8;:13;;;;;;:18;4450:83;;4518:2;4507:8;:13;;;;;;4501:2;:20;4489:32;;;;4450:83;4559:8;4543:4;:13;;:24;;;;;4657:4;4651:11;4689:3;4683:4;4676:17;4719:1;4714:3;4707:14;4757:8;4752:3;4748:18;4742:4;4735:32;4625:153;;;;:::o;10737:130::-;10809:50;10836:4;8844:1;10809:26;:50::i;:::-;10737:130;:::o;10342:181::-;10436:49;10447:4;8794:1;10471:6;:13;10436:10;:49::i;:::-;10496:19;10508:6;10496:4;:11;;:19;;;;:::i;:::-;;10342:181;;:::o;11009:138::-;11082:57;11109:4;9009:1;11082:26;:57::i;:::-;11009:138;:::o;9765:147::-;9866:38;9900:2;9895:1;9885:6;:11;;;;9884:18;9866:4;:11;;:38;;;;:::i;:::-;9765:147;;:::o;9019:738::-;9131:2;9121:6;:12;9117:633;;9150:42;9184:6;9179:1;9169:6;:11;;;;9168:22;;;9150:4;:11;;:42;;;;:::i;:::-;9117:633;;;9224:4;9214:6;:14;9210:540;;9245:38;9279:2;9274:1;9264:6;:11;;;;9263:18;9245:4;:11;;:38;;;;:::i;:::-;9298:25;9313:6;9321:1;9298:4;:14;;:25;;;;;:::i;:::-;;9210:540;;;9355:6;9345;:16;9341:409;;9378:38;9412:2;9407:1;9397:6;:11;;;;9396:18;9378:4;:11;;:38;;;;:::i;:::-;9431:25;9446:6;9454:1;9431:4;:14;;:25;;;;;:::i;:::-;;9341:409;;;9488:10;9478:6;:20;9474:276;;9515:38;9549:2;9544:1;9534:6;:11;;;;9533:18;9515:4;:11;;:38;;;;:::i;:::-;9568:25;9583:6;9591:1;9568:4;:14;;:25;;;;;:::i;:::-;;9474:276;;;9625:18;9615:6;:28;9611:139;;9660:38;9694:2;9689:1;9679:6;:11;;;;9678:18;9660:4;:11;;:38;;;;:::i;:::-;9713:25;9728:6;9736:1;9713:4;:14;;:25;;;;;:::i;:::-;;9611:139;9474:276;9341:409;9210:540;9117:633;9019:738;;;:::o;5425:1241::-;5504:21;;:::i;:::-;5575:4;:13;;;5557:4;:8;;;:15;5542:5;:12;:30;:46;5538:129;;;5605:50;5612:4;5653:1;5618:32;5622:4;:13;;;5637:5;:12;5618:3;:32::i;:::-;:36;5605:6;:50::i;:::-;5538:129;5677:9;5697:8;5716;5727:5;:12;5716:23;;5794:4;5788:11;5870:6;5864:13;5958:2;5949:6;5941;5937:19;5933:28;5925:36;;6082:5;6076:12;6068:6;6064:25;6056:6;6049:41;6146:2;6139:5;6135:14;6128:21;;5759:401;;6170:212;6183:2;6176:3;:9;6170:212;;6302:3;6296:10;6290:4;6283:24;6344:2;6336:10;;;;6368:2;6361:9;;;;6194:2;6187:9;;;;6170:212;;;6392:9;6424:1;6417:3;6412:2;:8;6404:3;:17;:21;6392:33;;6519:4;6515:9;6509:3;6503:10;6499:26;6572:4;6565;6559:11;6555:22;6617:7;6607:8;6604:21;6598:4;6591:35;6469:168;;6654:4;6647:11;;;;;;5425:1241;;;;:::o;6960:586::-;7060:4;:13;;;7056:1;7038:4;:8;;;:15;:19;:35;7034:99;;;7090:31;7097:4;7119:1;7103:4;:13;;;:17;7090:6;:31::i;:::-;7034:99;7187:4;7181:11;7263:6;7257:13;7355:2;7346:6;7338;7334:19;7330:28;7454:5;7448:4;7440:20;7501:1;7493:6;7489:14;7481:6;7474:30;7152:387;;;;;:::o;7840:748::-;7925:21;;:::i;:::-;7988:4;:13;;;7970:4;:8;;;:15;7963:4;:22;:38;7959:113;;;8018:42;8025:4;8058:1;8031:24;8035:4;:13;;;8050:4;8031:3;:24::i;:::-;:28;8018:6;:42::i;:::-;7959:113;8082:9;8108:1;8101:4;8094:3;:11;:15;8082:27;;8164:4;8158:11;8240:6;8234:13;8332:4;8323:6;8315;8311:19;8307:30;8470:5;8462:4;8458:9;8451:4;8445:11;8441:27;8438:38;8432:4;8425:52;8518:4;8510:6;8506:17;8498:6;8491:33;8129:430;;;8576:4;8569:11;;;7840:748;;;;;:::o;4978:151::-;5031:9;5062:2;5057;:7;5053:49;;;5088:2;5081:9;;;;5053:49;5119:2;5112:9;;4978:151;;;;;:::o;4793:177::-;4869:19;4891:4;:8;;;4869:30;;4910:21;4915:4;4921:9;4910:4;:21::i;:::-;4942:20;4949:4;4955:6;4942;:20::i;:::-;;4793:177;;;:::o;68:950:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.5.12 < 0.6.0;\r\nimport \"./provableAPI.sol\";\r\n\r\n  contract oracle is usingProvable{\r\n\r\n\r\n  uint256 constant NUM_RANDOM_BYTES_REQUESTED = 1;\r\n  uint256 public latestNumber;\r\n\r\n\r\n  event LogNewProvableQuery(string description);\r\n  event generatedRandomNumber(uint256 randomNumber);\r\n\r\n\r\n  constructor() public {\r\n  update();\r\n  }\r\n\r\n  function __callback(bytes32 _queryId, string memory _result, bytes memory _proof) public {\r\n    require(msg.sender == provable_cbAddress());\r\n\r\n    uint256 randomNumber = uint256(keccak256(abi.encodePacked(_result))) % 100;\r\n    latestNumber = randomNumber;\r\n    emit generatedRandomNumber(randomNumber);\r\n  }\r\n\r\n  function update() payable public {\r\n    uint256 QUERY_EXECUTION_DELAY =0;\r\n    uint GAS_FOR_CALLBACK = 200000;\r\n    provable_newRandomDSQuery(\r\n        QUERY_EXECUTION_DELAY,\r\n        NUM_RANDOM_BYTES_REQUESTED,\r\n        GAS_FOR_CALLBACK\r\n      );\r\n    emit LogNewProvableQuery(\"Provable query was sent, standing by for the answer.\");\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n",
  "sourcePath": "D:\\Users\\victo\\Desktop\\Crypto Programming\\Ethereum\\Coinflip\\contracts\\oracle.sol",
  "ast": {
    "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/oracle.sol",
    "exportedSymbols": {
      "oracle": [
        317
      ]
    },
    "id": 318,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 232,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".12",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:3"
      },
      {
        "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 233,
        "nodeType": "ImportDirective",
        "scope": 318,
        "sourceUnit": 6614,
        "src": "35:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 234,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6613,
              "src": "87:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6613",
                "typeString": "contract usingProvable"
              }
            },
            "id": 235,
            "nodeType": "InheritanceSpecifier",
            "src": "87:13:3"
          }
        ],
        "contractDependencies": [
          6613
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 317,
        "linearizedBaseContracts": [
          317,
          6613
        ],
        "name": "oracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 238,
            "name": "NUM_RANDOM_BYTES_REQUESTED",
            "nodeType": "VariableDeclaration",
            "scope": 317,
            "src": "109:47:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 236,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "109:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 237,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "155:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 240,
            "name": "latestNumber",
            "nodeType": "VariableDeclaration",
            "scope": 317,
            "src": "161:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 239,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "161:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 244,
            "name": "LogNewProvableQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 242,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "223:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "223:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "222:20:3"
            },
            "src": "197:46:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 248,
            "name": "generatedRandomNumber",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 246,
                  "indexed": false,
                  "name": "randomNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "275:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "275:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "274:22:3"
            },
            "src": "247:50:3"
          },
          {
            "body": {
              "id": 254,
              "nodeType": "Block",
              "src": "326:19:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 251,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "331:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "331:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "331:8:3"
                }
              ]
            },
            "documentation": null,
            "id": 255,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "316:2:3"
            },
            "returnParameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "326:0:3"
            },
            "scope": 317,
            "src": "305:40:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 293,
              "nodeType": "Block",
              "src": "440:220:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 265,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6628,
                            "src": "455:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "455:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 267,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4436,
                            "src": "469:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "469:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "455:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6631,
                        6632
                      ],
                      "referencedDeclaration": 6631,
                      "src": "447:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "447:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "447:43:3"
                },
                {
                  "assignments": [
                    273
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 273,
                      "name": "randomNumber",
                      "nodeType": "VariableDeclaration",
                      "scope": 293,
                      "src": "499:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 272,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "499:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 284,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 278,
                                  "name": "_result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 259,
                                  "src": "557:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 276,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6615,
                                  "src": "540:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "540:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "540:25:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 275,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6622,
                            "src": "530:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "530:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "522:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "522:45:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "313030",
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "570:3:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "522:51:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "499:74:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 285,
                      "name": "latestNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 240,
                      "src": "580:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 286,
                      "name": "randomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "595:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "580:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 288,
                  "nodeType": "ExpressionStatement",
                  "src": "580:27:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 290,
                        "name": "randomNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "641:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 289,
                      "name": "generatedRandomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 248,
                      "src": "619:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "619:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 292,
                  "nodeType": "EmitStatement",
                  "src": "614:40:3"
                }
              ]
            },
            "documentation": null,
            "id": 294,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 257,
                  "name": "_queryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 294,
                  "src": "371:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "371:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 259,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 294,
                  "src": "389:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "389:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 261,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 294,
                  "src": "412:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "370:62:3"
            },
            "returnParameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "440:0:3"
            },
            "scope": 317,
            "src": "351:309:3",
            "stateMutability": "nonpayable",
            "superFunction": 1366,
            "visibility": "public"
          },
          {
            "body": {
              "id": 315,
              "nodeType": "Block",
              "src": "699:308:3",
              "statements": [
                {
                  "assignments": [
                    298
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 298,
                      "name": "QUERY_EXECUTION_DELAY",
                      "nodeType": "VariableDeclaration",
                      "scope": 315,
                      "src": "706:29:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 297,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "706:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 300,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "737:1:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "706:32:3"
                },
                {
                  "assignments": [
                    302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 302,
                      "name": "GAS_FOR_CALLBACK",
                      "nodeType": "VariableDeclaration",
                      "scope": 315,
                      "src": "745:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 301,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "745:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 304,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "323030303030",
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "769:6:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000_by_1",
                      "typeString": "int_const 200000"
                    },
                    "value": "200000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "745:30:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 306,
                        "name": "QUERY_EXECUTION_DELAY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
                        "src": "818:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 307,
                        "name": "NUM_RANDOM_BYTES_REQUESTED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "850:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 308,
                        "name": "GAS_FOR_CALLBACK",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "887:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 305,
                      "name": "provable_newRandomDSQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5715,
                      "src": "782:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                      }
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "782:130:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "782:130:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e",
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "944:54:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c372616915d6b08d584e4f07c9f4ab3ef233d2320a376fb7b417ddfb52cb9d5",
                          "typeString": "literal_string \"Provable query was sent, standing by for the answer.\""
                        },
                        "value": "Provable query was sent, standing by for the answer."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6c372616915d6b08d584e4f07c9f4ab3ef233d2320a376fb7b417ddfb52cb9d5",
                          "typeString": "literal_string \"Provable query was sent, standing by for the answer.\""
                        }
                      ],
                      "id": 311,
                      "name": "LogNewProvableQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 244,
                      "src": "924:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "924:75:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 314,
                  "nodeType": "EmitStatement",
                  "src": "919:80:3"
                }
              ]
            },
            "documentation": null,
            "id": 316,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "681:2:3"
            },
            "returnParameters": {
              "id": 296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "699:0:3"
            },
            "scope": 317,
            "src": "666:341:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 318,
        "src": "68:950:3"
      }
    ],
    "src": "0:1020:3"
  },
  "legacyAST": {
    "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/oracle.sol",
    "exportedSymbols": {
      "oracle": [
        317
      ]
    },
    "id": 318,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 232,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".12",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:3"
      },
      {
        "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 233,
        "nodeType": "ImportDirective",
        "scope": 318,
        "sourceUnit": 6614,
        "src": "35:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 234,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6613,
              "src": "87:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6613",
                "typeString": "contract usingProvable"
              }
            },
            "id": 235,
            "nodeType": "InheritanceSpecifier",
            "src": "87:13:3"
          }
        ],
        "contractDependencies": [
          6613
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 317,
        "linearizedBaseContracts": [
          317,
          6613
        ],
        "name": "oracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 238,
            "name": "NUM_RANDOM_BYTES_REQUESTED",
            "nodeType": "VariableDeclaration",
            "scope": 317,
            "src": "109:47:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 236,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "109:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 237,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "155:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 240,
            "name": "latestNumber",
            "nodeType": "VariableDeclaration",
            "scope": 317,
            "src": "161:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 239,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "161:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 244,
            "name": "LogNewProvableQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 242,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "223:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "223:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "222:20:3"
            },
            "src": "197:46:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 248,
            "name": "generatedRandomNumber",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 246,
                  "indexed": false,
                  "name": "randomNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "275:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "275:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "274:22:3"
            },
            "src": "247:50:3"
          },
          {
            "body": {
              "id": 254,
              "nodeType": "Block",
              "src": "326:19:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 251,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "331:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "331:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "331:8:3"
                }
              ]
            },
            "documentation": null,
            "id": 255,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "316:2:3"
            },
            "returnParameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "326:0:3"
            },
            "scope": 317,
            "src": "305:40:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 293,
              "nodeType": "Block",
              "src": "440:220:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 265,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6628,
                            "src": "455:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "455:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 267,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4436,
                            "src": "469:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "469:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "455:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6631,
                        6632
                      ],
                      "referencedDeclaration": 6631,
                      "src": "447:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "447:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "447:43:3"
                },
                {
                  "assignments": [
                    273
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 273,
                      "name": "randomNumber",
                      "nodeType": "VariableDeclaration",
                      "scope": 293,
                      "src": "499:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 272,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "499:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 284,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 278,
                                  "name": "_result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 259,
                                  "src": "557:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 276,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6615,
                                  "src": "540:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "540:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "540:25:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 275,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6622,
                            "src": "530:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "530:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "522:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "522:45:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "313030",
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "570:3:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "522:51:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "499:74:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 285,
                      "name": "latestNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 240,
                      "src": "580:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 286,
                      "name": "randomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "595:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "580:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 288,
                  "nodeType": "ExpressionStatement",
                  "src": "580:27:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 290,
                        "name": "randomNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "641:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 289,
                      "name": "generatedRandomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 248,
                      "src": "619:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "619:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 292,
                  "nodeType": "EmitStatement",
                  "src": "614:40:3"
                }
              ]
            },
            "documentation": null,
            "id": 294,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 257,
                  "name": "_queryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 294,
                  "src": "371:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "371:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 259,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 294,
                  "src": "389:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "389:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 261,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 294,
                  "src": "412:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "370:62:3"
            },
            "returnParameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "440:0:3"
            },
            "scope": 317,
            "src": "351:309:3",
            "stateMutability": "nonpayable",
            "superFunction": 1366,
            "visibility": "public"
          },
          {
            "body": {
              "id": 315,
              "nodeType": "Block",
              "src": "699:308:3",
              "statements": [
                {
                  "assignments": [
                    298
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 298,
                      "name": "QUERY_EXECUTION_DELAY",
                      "nodeType": "VariableDeclaration",
                      "scope": 315,
                      "src": "706:29:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 297,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "706:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 300,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "737:1:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "706:32:3"
                },
                {
                  "assignments": [
                    302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 302,
                      "name": "GAS_FOR_CALLBACK",
                      "nodeType": "VariableDeclaration",
                      "scope": 315,
                      "src": "745:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 301,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "745:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 304,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "323030303030",
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "769:6:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000_by_1",
                      "typeString": "int_const 200000"
                    },
                    "value": "200000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "745:30:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 306,
                        "name": "QUERY_EXECUTION_DELAY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
                        "src": "818:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 307,
                        "name": "NUM_RANDOM_BYTES_REQUESTED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "850:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 308,
                        "name": "GAS_FOR_CALLBACK",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "887:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 305,
                      "name": "provable_newRandomDSQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5715,
                      "src": "782:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                      }
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "782:130:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "782:130:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e",
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "944:54:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c372616915d6b08d584e4f07c9f4ab3ef233d2320a376fb7b417ddfb52cb9d5",
                          "typeString": "literal_string \"Provable query was sent, standing by for the answer.\""
                        },
                        "value": "Provable query was sent, standing by for the answer."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6c372616915d6b08d584e4f07c9f4ab3ef233d2320a376fb7b417ddfb52cb9d5",
                          "typeString": "literal_string \"Provable query was sent, standing by for the answer.\""
                        }
                      ],
                      "id": 311,
                      "name": "LogNewProvableQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 244,
                      "src": "924:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "924:75:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 314,
                  "nodeType": "EmitStatement",
                  "src": "919:80:3"
                }
              ]
            },
            "documentation": null,
            "id": 316,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "681:2:3"
            },
            "returnParameters": {
              "id": 296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "699:0:3"
            },
            "scope": 317,
            "src": "666:341:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 318,
        "src": "68:950:3"
      }
    ],
    "src": "0:1020:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-10-24T08:39:12.781Z",
  "devdoc": {
    "methods": {
      "__callback(bytes32,string)": {
        "details": "The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}
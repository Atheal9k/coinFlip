{
  "contractName": "oracle",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "LogNewProvableQuery",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "checkBalance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "checkBalance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "whatHappened",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "funds",
          "type": "uint256"
        }
      ],
      "name": "depositedFunds",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "randomNumber",
          "type": "uint256"
        }
      ],
      "name": "generatedRandomNumber",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "a",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "q_id",
          "type": "bytes32"
        }
      ],
      "name": "idCheck",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "whatHappened",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "funds",
          "type": "uint256"
        }
      ],
      "name": "withDrewFunds",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "youLose",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "youWin",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "createPlayer",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "n_punter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_betAmount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "q_id",
          "type": "bytes32"
        }
      ],
      "name": "fillPlayerInfo",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getPunterBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "latestNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "n_punter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_betAmount",
          "type": "uint256"
        }
      ],
      "name": "payPunter",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "numberCalled",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "q_id",
          "type": "bytes32"
        }
      ],
      "name": "saveResults",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawPunterBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_queryId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "punter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_betAmount",
          "type": "uint256"
        }
      ],
      "name": "random",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"LogNewProvableQuery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"checkBalance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"checkBalance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"whatHappened\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"funds\",\"type\":\"uint256\"}],\"name\":\"depositedFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"randomNumber\",\"type\":\"uint256\"}],\"name\":\"generatedRandomNumber\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"a\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"q_id\",\"type\":\"bytes32\"}],\"name\":\"idCheck\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"whatHappened\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"funds\",\"type\":\"uint256\"}],\"name\":\"withDrewFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"youLose\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"youWin\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createPlayer\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"n_punter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_betAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"q_id\",\"type\":\"bytes32\"}],\"name\":\"fillPlayerInfo\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getPunterBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"latestNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"n_punter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_betAmount\",\"type\":\"uint256\"}],\"name\":\"payPunter\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"punter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_betAmount\",\"type\":\"uint256\"}],\"name\":\"random\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numberCalled\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"q_id\",\"type\":\"bytes32\"}],\"name\":\"saveResults\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawPunterBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"__callback(bytes32,string)\":{\"details\":\"The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/oracle.sol\":\"oracle\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/Ownable.sol\":{\"keccak256\":\"0x933d3b74faed1f2e02c4d24e12b88b080203bf8862de1ffd5b4082f66cafbc75\",\"urls\":[\"bzz-raw://f92431d08e0e13c06d1bca6a6b12c2d434e48b0029fa9f3635e3ec4c0c937a2d\",\"dweb:/ipfs/QmexuenmxTwbnGP5d6enhScFjMuLTospfGczoLFUyAqX7H\"]},\"/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/Storagable.sol\":{\"keccak256\":\"0xc6bbfb3f6f70713533a8f384e6ef4f40a1851ec98801e9a4fda4bc7e144682c9\",\"urls\":[\"bzz-raw://65aa3784390e6e276ca6e29c3f969ccd1f3a499e18a1c5297dbaa92297610bb8\",\"dweb:/ipfs/Qmbj7VFpnaJ956x9pFDPnoMYL2eDvRCL9sM3gbJYNMt315\"]},\"/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/Winnable.sol\":{\"keccak256\":\"0xb2bf10fea182d9613830482364700819d6b36d051a63fc3df1a8505b05dc2f53\",\"urls\":[\"bzz-raw://3574e00be65f50b23a2aaabef7537b64bac127b483eda148bddf6bfb0fea12d4\",\"dweb:/ipfs/Qma3CEEEX7AdHJfX6SuWPvnsjS6MFPBbL9T3xjfoVQacNT\"]},\"/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/oracle.sol\":{\"keccak256\":\"0x9e18f051ddd15ec6aac1b049ad1c561863d161de7b163ff5c89610f5bea31dae\",\"urls\":[\"bzz-raw://8ab396e4a272f64794e71663805eff76884b7bf85bd1cb391428c0f805cfb8d1\",\"dweb:/ipfs/QmdunAhK6cKun6e6prskttdRyDXZqjPdJ3Sd6DBwi6gikK\"]},\"/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/provableAPI.sol\":{\"keccak256\":\"0x6988135f2d9e695931e5efe9ad1b3ba859e0d2949d984eaaf787e038e09cab00\",\"urls\":[\"bzz-raw://a0846a0117c7e1f1a9957c8f011d875708ec1f7380286d2af58502b73f4da7d4\",\"dweb:/ipfs/QmYWTc5MLUXJra934htUjaikBB5QESXh9cMio7CdaXEB3e\"]}},\"version\":1}",
  "bytecode": "0x608060405233600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613308806100546000396000f3fe6080604052600436106100c25760003560e01c80637be8af901161007f578063b69ef8a811610059578063b69ef8a8146104ad578063bfab3db9146104d8578063d79f5ec514610503578063dc34b0aa14610548576100c2565b80637be8af90146103ba5780638da5cb5b14610408578063a35bfd211461045f576100c2565b806327dc297e146100c757806332a1b7641461019957806338bbfa50146101c45780633fa9fcf81461032d5780634ff540d4146103375780635aa8113914610362575b600080fd5b3480156100d357600080fd5b50610197600480360360408110156100ea57600080fd5b81019080803590602001909291908035906020019064010000000081111561011157600080fd5b82018360208201111561012357600080fd5b8035906020019184600183028401116401000000008311171561014557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610573565b005b3480156101a557600080fd5b506101ae6105b6565b6040518082815260200191505060405180910390f35b3480156101d057600080fd5b5061032b600480360360608110156101e757600080fd5b81019080803590602001909291908035906020019064010000000081111561020e57600080fd5b82018360208201111561022057600080fd5b8035906020019184600183028401116401000000008311171561024257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102a557600080fd5b8201836020820111156102b757600080fd5b803590602001918460018302840111640100000000831117156102d957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610743565b005b6103356108ce565b005b34801561034357600080fd5b5061034c6109da565b6040518082815260200191505060405180910390f35b6103b86004803603606081101561037857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610ae7565b005b610406600480360360408110156103d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c86565b005b34801561041457600080fd5b5061041d610cda565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104ab6004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d00565b005b3480156104b957600080fd5b506104c2610ded565b6040518082815260200191505060405180910390f35b3480156104e457600080fd5b506104ed610df3565b6040518082815260200191505060405180910390f35b34801561050f57600080fd5b506105466004803603604081101561052657600080fd5b810190808035906020019092919080359060200190929190505050610eac565b005b34801561055457600080fd5b5061055d610f49565b6040518082815260200191505060405180910390f35b6105b2828260006040519080825280601f01601f1916602001820160405280156105ac5781602001600182028038833980820191505090505b50610743565b5050565b600080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490507fb471f40a10881404b70a4f7819c075d0ae5fec92ae9454b1ccdad5c0fe9a6ab28182604051808381526020018281526020019250505060405180910390a16000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156106cb573d6000803e3d6000fd5b507f888f4fb33f1429a5c0e82c8ca8b08617833224470b7efbaf5cb4d0b00e695e658160405180806020018381526020018281038252600d8152602001807f596f7520776974686472657720000000000000000000000000000000000000008152506020019250505060405180910390a18091505090565b61074b610f4f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461078257600080fd5b6000600760008581526020019081526020016000206002015490506000600a600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006002856040516020018082805190602001908083835b6020831061081057805182526020820191506020810190506020830392506107ed565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c8161085557fe5b06905080600b819055507fc13d60fe9dffdb6908d2d446cd18134373a51db0738ee04f296eeb9128121cbc816040518082815260200191505060405180910390a16108a2600b5487610eac565b6108ab8661126c565b506007600087815260200190815260200160002060020160009055505050505050565b6108d6613116565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600081602001818152505080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555090505050565b60007fb471f40a10881404b70a4f7819c075d0ae5fec92ae9454b1ccdad5c0fe9a6ab2600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154604051808381526020018281526020019250505060405180910390a1600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905090565b33600a600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610bc2613159565b83816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508281602001818152505081816040018181525050806007600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015590505050505050565b80600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825401925050819055505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809050600062030d4090506000610d1b8360018461157e565b9050349350610d2b338583610ae7565b7f5e35a070670d9d1b09ecfeeae77ca75380c3bf10808c2cc6ae99b217977e09bd816040518080602001838152602001828103825260178152602001807f546865204944206f6620746869732063616c6c206973200000000000000000008152506020019250505060405180910390a17fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c473896040518080602001828103825260348152602001806132a06034913960400191505060405180910390a15050505050565b60065481565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e4f57600080fd5b6000600654905060006006819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610ea4573d6000803e3d6000fd5b508091505090565b610eb4613193565b82816000018181525050818160400181815250506001831415610ee7576001816020019015159081151581525050610ef9565b60008160200190151590811515815250505b80600860008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555060408201518160020155905050505050565b600b5481565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610fd757506000610fd5600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611b19565b145b15610fe857610fe66000611b24565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561105257600080fd5b505af1158015611066573d6000803e3d6000fd5b505050506040513d602081101561107c57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111c557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561114a57600080fd5b505af115801561115e573d6000803e3d6000fd5b505050506040513d602081101561117457600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561122c57600080fd5b505afa158015611240573d6000803e3d6000fd5b505050506040513d602081101561125657600080fd5b8101908080519060200190929190505050905090565b6000806008600084815260200190815260200160002060010160009054906101000a900460ff1690506000600760008581526020019081526020016000206001015490506000600a600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506112f0613116565b600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff16151515158152505090506001151584151514806113d8575060001515841515145b156114f057600060028402905080600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f7f286286ddac21458cfcd9160c74a2bb53f361388c342a089321237fb3e21a24816040518082815260200191505060405180910390a1836006600082825403925050819055507f7e7d5e50adfbb4e81427323125a4d6250cf27f8b49ff7305f48c9fcb4d2525ea600285026040518080602001838152602001828103825260088152602001807f596f7520776f6e200000000000000000000000000000000000000000000000008152506020019250505060405180910390a16000905050611571565b826006600082825401925050819055507fdbc743cebacba388691ee70a334a0faaee0490d78d1e3be2ba9081622471cdad836040518080602001838152602001828103825260098152602001807f596f75206c6f73742000000000000000000000000000000000000000000000008152506020019250505060405180910390a15b6000925050505050919050565b60008083118015611590575060208311155b61159957600080fd5b600a84029350606060016040519080825280601f01601f1916602001820160405280156115d55781602001600182028038833980820191505090505b5090508360f81b816000815181106115e957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f19166020018201604052801561164e5781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f1916602001820160405280156116875781602001600182028038833980820191505090505b5090506000611694611b35565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f1916602001820160405280156116e85781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f1916602001820160405280156117275781602001600182028038833980820191505090505b50905061173a8260186008846000611e52565b506117436131b9565b604051806080016040528087815260200188815260200186815260200184815250905060006117a86040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c611eb1565b9050606060086040519080825280601f01601f1916602001820160405280156117e05781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a010000000000000000000000000000000000000000000000000000810460228301537901000000000000000000000000000000000000000000000000008104602183015378010000000000000000000000000000000000000000000000008104602083015350611b0682828560016004811061191f57fe5b602002015160028760006004811061193357fe5b60200201516040518082805190602001908083835b6020831061196b5780518252602082019150602081019050602083039250611948565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa1580156119ad573d6000803e3d6000fd5b5050506040513d60208110156119c257600080fd5b8101908080519060200190929190505050876002600481106119e057fe5b60200201516040516020018085805190602001908083835b60208310611a1b57805182526020820191506020810190506020830392506119f8565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b60208310611a6c5780518252602082019150602081019050602083039250611a49565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b60208310611ac35780518252602082019150602081019050602083039250611aa0565b6001836020036101000a0380198251168184511680821785525050505050509050019450505050506040516020818303038152906040528051906020012061221e565b8199505050505050505050509392505050565b6000813b9050919050565b6000611b2e61223a565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611bbd57506000611bbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611b19565b145b15611bce57611bcc6000611b24565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611c3857600080fd5b505af1158015611c4c573d6000803e3d6000fd5b505050506040513d6020811015611c6257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611dab57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611d3057600080fd5b505af1158015611d44573d6000803e3d6000fd5b505050506040513d6020811015611d5a57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b158015611e1257600080fd5b505afa158015611e26573d6000803e3d6000fd5b505050506040513d6020811015611e3c57600080fd5b8101908080519060200190929190505050905090565b6060600082850190508084511015611e6957600080fd5b600086602001905060008460200190505b868860200101821015611ea25781890151808288015250602082019150602081019050611e7a565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611f3957506000611f37600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611b19565b145b15611f4a57611f486000611b24565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611fb457600080fd5b505af1158015611fc8573d6000803e3d6000fd5b505050506040513d6020811015611fde57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461212757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156120ac57600080fd5b505af11580156120c0573d6000803e3d6000fd5b505050506040513d60208110156120d657600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6060600460405190808252806020026020018201604052801561215e57816020015b60608152602001906001900390816121495790505b5090508360006004811061216e57fe5b60200201518160008151811061218057fe5b60200260200101819052508360016004811061219857fe5b6020020151816001815181106121aa57fe5b6020026020010181905250836002600481106121c257fe5b6020020151816002815181106121d457fe5b6020026020010181905250836003600481106121ec57fe5b6020020151816003815181106121fe57fe5b6020026020010181905250612214858285612791565b9150509392505050565b8060036000848152602001908152602001600020819055505050565b60008061225a731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611b19565b11156122fc57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506122f36040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250612cf3565b6001905061278e565b600061231b73c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611b19565b11156123bd5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506123b46040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250612cf3565b6001905061278e565b60006123dc73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611b19565b111561247e5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506124756040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250612cf3565b6001905061278e565b600061249d73146500cfd35b22e4a392fe0adc06de1a1368ed48611b19565b111561253f5773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506125366040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250612cf3565b6001905061278e565b600061255e73a2998efd205fb9d4b4963afb70778d6354ad3a41611b19565b11156126005773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506125f76040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250612cf3565b6001905061278e565b600061261f736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611b19565b111561268357736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061278e565b60006126a27320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611b19565b1115612706577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061278e565b60006127257351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611b19565b1115612789577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061278e565b600090505b90565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061281957506000612817600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611b19565b145b1561282a576128286000611b24565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561289457600080fd5b505af11580156128a8573d6000803e3d6000fd5b505050506040513d60208110156128be57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612a0757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561298c57600080fd5b505af11580156129a0573d6000803e3d6000fd5b505050506040513d60208110156129b657600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015612a9d578082015181840152602081019050612a82565b50505050905090810190601f168015612aca5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015612aea57600080fd5b505af1158015612afe573d6000803e3d6000fd5b505050506040513d6020811015612b1457600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a764000001811115612b47576000801b915050612cec565b6060612b5285612d0d565b90506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015612bf6578082015181840152602081019050612bdb565b50505050905090810190601f168015612c235780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015612c5c578082015181840152602081019050612c41565b50505050905090810190601f168015612c895780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b158015612cab57600080fd5b505af1158015612cbf573d6000803e3d6000fd5b50505050506040513d6020811015612cd657600080fd5b8101908080519060200190929190505050925050505b9392505050565b8060029080519060200190612d099291906131e0565b5050565b6060612d17612d8d565b612d1f613260565b612d2b81610400612d99565b612d3481612de3565b60008090505b8351811015612d7657612d69848281518110612d5257fe5b602002602001015183612df190919063ffffffff16565b8080600101915050612d3a565b50612d8081612e16565b8060000151915050919050565b60405180590338823950565b6000819050600060208281612daa57fe5b0614612dc35760208181612dba57fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b612dee816004612e24565b50565b612dfe8260028351612e45565b612e118183612f8590919063ffffffff16565b505050565b612e21816007612e24565b50565b612e41601f60058360ff16901b178361303090919063ffffffff16565b5050565b60178111612e7157612e6c8160058460ff16901b60ff16178461303090919063ffffffff16565b612f80565b60ff8111612eb257612e96601860058460ff16901b178461303090919063ffffffff16565b612eac816001856130709092919063ffffffff16565b50612f7f565b61ffff8111612ef457612ed8601960058460ff16901b178461303090919063ffffffff16565b612eee816002856130709092919063ffffffff16565b50612f7e565b63ffffffff8111612f3857612f1c601a60058460ff16901b178461303090919063ffffffff16565b612f32816004856130709092919063ffffffff16565b50612f7d565b67ffffffffffffffff8111612f7c57612f64601b60058460ff16901b178461303090919063ffffffff16565b612f7a816008856130709092919063ffffffff16565b505b5b5b5b5b505050565b612f8d613260565b82602001518360000151518351011115612fbd57612fbc836002612fb6866020015186516130d7565b026130f3565b5b60008060008451905085518051602081830101945086518101825260208701935050505b602081106130045781518352602083019250602082019150602081039050612fe1565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b81602001516001836000015151011115613056576130558260028460200151026130f3565b5b815180516020818301018381536001820183525050505050565b613078613260565b8360200151846000015151830111156130a6576130a584600261309f8760200151866130d7565b026130f3565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b6000818311156130e9578290506130ed565b8190505b92915050565b6060826000015190506131068383612d99565b6131108382612f85565b50505050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600080191681526020016000151581525090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600080191681525090565b604051806060016040528060008152602001600015158152602001600080191681525090565b60405180608001604052806004905b60608152602001906001900390816131c85790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061322157805160ff191683800117855561324f565b8280016001018555821561324f579182015b8281111561324e578251825591602001919060010190613233565b5b50905061325c919061327a565b5090565b604051806040016040528060608152602001600081525090565b61329c91905b80821115613298576000816000905550600101613280565b5090565b9056fe50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722ea265627a7a7231582019b2ba962a4cd821ba6b4a74915d2880331caab2e46f2fcd0d57371715d5b73c64736f6c634300050c0032",
  "deployedBytecode": "0x6080604052600436106100c25760003560e01c80637be8af901161007f578063b69ef8a811610059578063b69ef8a8146104ad578063bfab3db9146104d8578063d79f5ec514610503578063dc34b0aa14610548576100c2565b80637be8af90146103ba5780638da5cb5b14610408578063a35bfd211461045f576100c2565b806327dc297e146100c757806332a1b7641461019957806338bbfa50146101c45780633fa9fcf81461032d5780634ff540d4146103375780635aa8113914610362575b600080fd5b3480156100d357600080fd5b50610197600480360360408110156100ea57600080fd5b81019080803590602001909291908035906020019064010000000081111561011157600080fd5b82018360208201111561012357600080fd5b8035906020019184600183028401116401000000008311171561014557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610573565b005b3480156101a557600080fd5b506101ae6105b6565b6040518082815260200191505060405180910390f35b3480156101d057600080fd5b5061032b600480360360608110156101e757600080fd5b81019080803590602001909291908035906020019064010000000081111561020e57600080fd5b82018360208201111561022057600080fd5b8035906020019184600183028401116401000000008311171561024257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102a557600080fd5b8201836020820111156102b757600080fd5b803590602001918460018302840111640100000000831117156102d957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610743565b005b6103356108ce565b005b34801561034357600080fd5b5061034c6109da565b6040518082815260200191505060405180910390f35b6103b86004803603606081101561037857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610ae7565b005b610406600480360360408110156103d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c86565b005b34801561041457600080fd5b5061041d610cda565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104ab6004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d00565b005b3480156104b957600080fd5b506104c2610ded565b6040518082815260200191505060405180910390f35b3480156104e457600080fd5b506104ed610df3565b6040518082815260200191505060405180910390f35b34801561050f57600080fd5b506105466004803603604081101561052657600080fd5b810190808035906020019092919080359060200190929190505050610eac565b005b34801561055457600080fd5b5061055d610f49565b6040518082815260200191505060405180910390f35b6105b2828260006040519080825280601f01601f1916602001820160405280156105ac5781602001600182028038833980820191505090505b50610743565b5050565b600080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490507fb471f40a10881404b70a4f7819c075d0ae5fec92ae9454b1ccdad5c0fe9a6ab28182604051808381526020018281526020019250505060405180910390a16000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156106cb573d6000803e3d6000fd5b507f888f4fb33f1429a5c0e82c8ca8b08617833224470b7efbaf5cb4d0b00e695e658160405180806020018381526020018281038252600d8152602001807f596f7520776974686472657720000000000000000000000000000000000000008152506020019250505060405180910390a18091505090565b61074b610f4f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461078257600080fd5b6000600760008581526020019081526020016000206002015490506000600a600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006002856040516020018082805190602001908083835b6020831061081057805182526020820191506020810190506020830392506107ed565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c8161085557fe5b06905080600b819055507fc13d60fe9dffdb6908d2d446cd18134373a51db0738ee04f296eeb9128121cbc816040518082815260200191505060405180910390a16108a2600b5487610eac565b6108ab8661126c565b506007600087815260200190815260200160002060020160009055505050505050565b6108d6613116565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600081602001818152505080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555090505050565b60007fb471f40a10881404b70a4f7819c075d0ae5fec92ae9454b1ccdad5c0fe9a6ab2600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154604051808381526020018281526020019250505060405180910390a1600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905090565b33600a600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610bc2613159565b83816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508281602001818152505081816040018181525050806007600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015590505050505050565b80600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825401925050819055505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809050600062030d4090506000610d1b8360018461157e565b9050349350610d2b338583610ae7565b7f5e35a070670d9d1b09ecfeeae77ca75380c3bf10808c2cc6ae99b217977e09bd816040518080602001838152602001828103825260178152602001807f546865204944206f6620746869732063616c6c206973200000000000000000008152506020019250505060405180910390a17fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c473896040518080602001828103825260348152602001806132a06034913960400191505060405180910390a15050505050565b60065481565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e4f57600080fd5b6000600654905060006006819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610ea4573d6000803e3d6000fd5b508091505090565b610eb4613193565b82816000018181525050818160400181815250506001831415610ee7576001816020019015159081151581525050610ef9565b60008160200190151590811515815250505b80600860008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555060408201518160020155905050505050565b600b5481565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610fd757506000610fd5600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611b19565b145b15610fe857610fe66000611b24565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561105257600080fd5b505af1158015611066573d6000803e3d6000fd5b505050506040513d602081101561107c57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111c557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561114a57600080fd5b505af115801561115e573d6000803e3d6000fd5b505050506040513d602081101561117457600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561122c57600080fd5b505afa158015611240573d6000803e3d6000fd5b505050506040513d602081101561125657600080fd5b8101908080519060200190929190505050905090565b6000806008600084815260200190815260200160002060010160009054906101000a900460ff1690506000600760008581526020019081526020016000206001015490506000600a600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506112f0613116565b600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff16151515158152505090506001151584151514806113d8575060001515841515145b156114f057600060028402905080600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f7f286286ddac21458cfcd9160c74a2bb53f361388c342a089321237fb3e21a24816040518082815260200191505060405180910390a1836006600082825403925050819055507f7e7d5e50adfbb4e81427323125a4d6250cf27f8b49ff7305f48c9fcb4d2525ea600285026040518080602001838152602001828103825260088152602001807f596f7520776f6e200000000000000000000000000000000000000000000000008152506020019250505060405180910390a16000905050611571565b826006600082825401925050819055507fdbc743cebacba388691ee70a334a0faaee0490d78d1e3be2ba9081622471cdad836040518080602001838152602001828103825260098152602001807f596f75206c6f73742000000000000000000000000000000000000000000000008152506020019250505060405180910390a15b6000925050505050919050565b60008083118015611590575060208311155b61159957600080fd5b600a84029350606060016040519080825280601f01601f1916602001820160405280156115d55781602001600182028038833980820191505090505b5090508360f81b816000815181106115e957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f19166020018201604052801561164e5781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f1916602001820160405280156116875781602001600182028038833980820191505090505b5090506000611694611b35565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f1916602001820160405280156116e85781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f1916602001820160405280156117275781602001600182028038833980820191505090505b50905061173a8260186008846000611e52565b506117436131b9565b604051806080016040528087815260200188815260200186815260200184815250905060006117a86040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c611eb1565b9050606060086040519080825280601f01601f1916602001820160405280156117e05781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a010000000000000000000000000000000000000000000000000000810460228301537901000000000000000000000000000000000000000000000000008104602183015378010000000000000000000000000000000000000000000000008104602083015350611b0682828560016004811061191f57fe5b602002015160028760006004811061193357fe5b60200201516040518082805190602001908083835b6020831061196b5780518252602082019150602081019050602083039250611948565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa1580156119ad573d6000803e3d6000fd5b5050506040513d60208110156119c257600080fd5b8101908080519060200190929190505050876002600481106119e057fe5b60200201516040516020018085805190602001908083835b60208310611a1b57805182526020820191506020810190506020830392506119f8565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b60208310611a6c5780518252602082019150602081019050602083039250611a49565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b60208310611ac35780518252602082019150602081019050602083039250611aa0565b6001836020036101000a0380198251168184511680821785525050505050509050019450505050506040516020818303038152906040528051906020012061221e565b8199505050505050505050509392505050565b6000813b9050919050565b6000611b2e61223a565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611bbd57506000611bbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611b19565b145b15611bce57611bcc6000611b24565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611c3857600080fd5b505af1158015611c4c573d6000803e3d6000fd5b505050506040513d6020811015611c6257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611dab57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611d3057600080fd5b505af1158015611d44573d6000803e3d6000fd5b505050506040513d6020811015611d5a57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b158015611e1257600080fd5b505afa158015611e26573d6000803e3d6000fd5b505050506040513d6020811015611e3c57600080fd5b8101908080519060200190929190505050905090565b6060600082850190508084511015611e6957600080fd5b600086602001905060008460200190505b868860200101821015611ea25781890151808288015250602082019150602081019050611e7a565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611f3957506000611f37600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611b19565b145b15611f4a57611f486000611b24565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611fb457600080fd5b505af1158015611fc8573d6000803e3d6000fd5b505050506040513d6020811015611fde57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461212757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156120ac57600080fd5b505af11580156120c0573d6000803e3d6000fd5b505050506040513d60208110156120d657600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6060600460405190808252806020026020018201604052801561215e57816020015b60608152602001906001900390816121495790505b5090508360006004811061216e57fe5b60200201518160008151811061218057fe5b60200260200101819052508360016004811061219857fe5b6020020151816001815181106121aa57fe5b6020026020010181905250836002600481106121c257fe5b6020020151816002815181106121d457fe5b6020026020010181905250836003600481106121ec57fe5b6020020151816003815181106121fe57fe5b6020026020010181905250612214858285612791565b9150509392505050565b8060036000848152602001908152602001600020819055505050565b60008061225a731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611b19565b11156122fc57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506122f36040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250612cf3565b6001905061278e565b600061231b73c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611b19565b11156123bd5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506123b46040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250612cf3565b6001905061278e565b60006123dc73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611b19565b111561247e5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506124756040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250612cf3565b6001905061278e565b600061249d73146500cfd35b22e4a392fe0adc06de1a1368ed48611b19565b111561253f5773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506125366040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250612cf3565b6001905061278e565b600061255e73a2998efd205fb9d4b4963afb70778d6354ad3a41611b19565b11156126005773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506125f76040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250612cf3565b6001905061278e565b600061261f736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611b19565b111561268357736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061278e565b60006126a27320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611b19565b1115612706577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061278e565b60006127257351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611b19565b1115612789577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061278e565b600090505b90565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061281957506000612817600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611b19565b145b1561282a576128286000611b24565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561289457600080fd5b505af11580156128a8573d6000803e3d6000fd5b505050506040513d60208110156128be57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612a0757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561298c57600080fd5b505af11580156129a0573d6000803e3d6000fd5b505050506040513d60208110156129b657600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015612a9d578082015181840152602081019050612a82565b50505050905090810190601f168015612aca5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015612aea57600080fd5b505af1158015612afe573d6000803e3d6000fd5b505050506040513d6020811015612b1457600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a764000001811115612b47576000801b915050612cec565b6060612b5285612d0d565b90506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015612bf6578082015181840152602081019050612bdb565b50505050905090810190601f168015612c235780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015612c5c578082015181840152602081019050612c41565b50505050905090810190601f168015612c895780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b158015612cab57600080fd5b505af1158015612cbf573d6000803e3d6000fd5b50505050506040513d6020811015612cd657600080fd5b8101908080519060200190929190505050925050505b9392505050565b8060029080519060200190612d099291906131e0565b5050565b6060612d17612d8d565b612d1f613260565b612d2b81610400612d99565b612d3481612de3565b60008090505b8351811015612d7657612d69848281518110612d5257fe5b602002602001015183612df190919063ffffffff16565b8080600101915050612d3a565b50612d8081612e16565b8060000151915050919050565b60405180590338823950565b6000819050600060208281612daa57fe5b0614612dc35760208181612dba57fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b612dee816004612e24565b50565b612dfe8260028351612e45565b612e118183612f8590919063ffffffff16565b505050565b612e21816007612e24565b50565b612e41601f60058360ff16901b178361303090919063ffffffff16565b5050565b60178111612e7157612e6c8160058460ff16901b60ff16178461303090919063ffffffff16565b612f80565b60ff8111612eb257612e96601860058460ff16901b178461303090919063ffffffff16565b612eac816001856130709092919063ffffffff16565b50612f7f565b61ffff8111612ef457612ed8601960058460ff16901b178461303090919063ffffffff16565b612eee816002856130709092919063ffffffff16565b50612f7e565b63ffffffff8111612f3857612f1c601a60058460ff16901b178461303090919063ffffffff16565b612f32816004856130709092919063ffffffff16565b50612f7d565b67ffffffffffffffff8111612f7c57612f64601b60058460ff16901b178461303090919063ffffffff16565b612f7a816008856130709092919063ffffffff16565b505b5b5b5b5b505050565b612f8d613260565b82602001518360000151518351011115612fbd57612fbc836002612fb6866020015186516130d7565b026130f3565b5b60008060008451905085518051602081830101945086518101825260208701935050505b602081106130045781518352602083019250602082019150602081039050612fe1565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b81602001516001836000015151011115613056576130558260028460200151026130f3565b5b815180516020818301018381536001820183525050505050565b613078613260565b8360200151846000015151830111156130a6576130a584600261309f8760200151866130d7565b026130f3565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b6000818311156130e9578290506130ed565b8190505b92915050565b6060826000015190506131068383612d99565b6131108382612f85565b50505050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600080191681526020016000151581525090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600080191681525090565b604051806060016040528060008152602001600015158152602001600080191681525090565b60405180608001604052806004905b60608152602001906001900390816131c85790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061322157805160ff191683800117855561324f565b8280016001018555821561324f579182015b8281111561324e578251825591602001919060010190613233565b5b50905061325c919061327a565b5090565b604051806040016040528060608152602001600081525090565b61329c91905b80821115613298576000816000905550600101613280565b5090565b9056fe50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722ea265627a7a7231582019b2ba962a4cd821ba6b4a74915d2880331caab2e46f2fcd0d57371715d5b73c64736f6c634300050c0032",
  "sourceMap": "122:1430:5:-;;;236:10:2;228:5;;:18;;;;;;;;;;;;;;;;;;122:1430:5;;;;;;",
  "deployedSourceMap": "122:1430:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15686:124:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15686:124:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15686:124:6;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15686:124:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15686:124:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15686:124:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15686:124:6;;;;;;;;;;;;;;;:::i;:::-;;2804:358:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2804:358:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;441:502:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;441:502:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;441:502:5;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;441:502:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;441:502:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;441:502:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;441:502:5;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;441:502:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;441:502:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;441:502:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;441:502:5;;;;;;;;;;;;;;;:::i;:::-;;848:382:3;;;:::i;:::-;;2590:206;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2590:206:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1238:356;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1238:356:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1606:139;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1606:139:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;60:20:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;60:20:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;953:590:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;953:590:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;439:19:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;439:19:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3170:193;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3170:193:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1758:370;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1758:370:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1758:370:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;237:27:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;237:27:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15686:124:6;15762:40;15773:5;15780:7;15799:1;15789:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;15789:12:6;;;;15762:10;:40::i;:::-;15686:124;;:::o;2804:358:3:-;2853:4;2869:15;2887:7;:19;2895:10;2887:19;;;;;;;;;;;;;;;:33;;;2869:51;;2936:36;2949:10;2961;2936:36;;;;;;;;;;;;;;;;;;;;;;;;3019:1;2983:7;:19;2991:10;2983:19;;;;;;;;;;;;;;;:33;;:37;;;;3031:10;:19;;:31;3051:10;3031:31;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3031:31:3;3080:42;3111:10;3080:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3140:10;3133:17;;;2804:358;:::o;441:502:5:-;559:20;:18;:20::i;:::-;545:34;;:10;:34;;;537:43;;;;;;587:14;604:7;:17;612:8;604:17;;;;;;;;;;;:20;;;587:37;;631:15;649:7;:17;657:8;649:17;;;;;;;;;;;;;;;;;;;;;631:35;;675:20;746:1;733:7;716:25;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;716:25:5;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;716:25:5;;;706:36;;;;;;698:45;;:49;;;;;;675:72;;771:12;756;:27;;;;795:35;817:12;795:35;;;;;;;;;;;;;;;;;;837:34;849:12;;862:8;837:11;:34::i;:::-;878:19;888:8;878:9;:19::i;:::-;;915:7;:17;923:8;915:17;;;;;;;;;;;:20;;908:27;;;441:502;;;;;;:::o;848:382:3:-;1043:23;;:::i;:::-;1096:10;1077:9;:16;;:29;;;;;;;;;;;1143:1;1117:9;:23;;:27;;;;;1209:9;1187:7;:19;1195:10;1187:19;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;848:382;:::o;2590:206::-;2634:4;2655:82;2668:7;:19;2676:10;2668:19;;;;;;;;;;;;;;;:33;;;2703:7;:19;2711:10;2703:19;;;;;;;;;;;;;;;:33;;;2655:82;;;;;;;;;;;;;;;;;;;;;;;;2755:7;:19;2763:10;2755:19;;;;;;;;;;;;;;;:33;;;2748:40;;2590:206;:::o;1238:356::-;1365:10;1349:7;:13;1357:4;1349:13;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;1413:8;1386:7;:17;1394:8;1386:17;;;;;;;;;;;;;;;:24;;;:35;;;;;;;;;;;;;;;;;;1434:17;;:::i;:::-;1478:8;1462:6;:13;;:24;;;;;;;;;;;1516:10;1497:6;:16;;:29;;;;;1549:4;1537:6;:9;;:16;;;;;1580:6;1564:7;:13;1572:4;1564:13;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1238:356;;;;:::o;1606:139::-;1727:10;1693:7;:17;1701:8;1693:17;;;;;;;;;;;;;;;:31;;;:44;;;;;;;;;;;1606:139;;:::o;60:20:2:-;;;;;;;;;;;;;:::o;953:590:5:-;1025:29;1056:1;1025:32;;1064:21;1088:6;1064:30;;1104:12;1120:130;1156:21;231:1;1225:16;1120:25;:130::i;:::-;1104:146;;1273:9;1260:22;;1344:45;1360:10;1372;1384:4;1344:14;:45::i;:::-;1408:40;1443:4;1408:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1460:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;953:590;;;;;:::o;439:19:3:-;;;;:::o;3170:193::-;3232:4;142:5:2;;;;;;;;;;;128:19;;:10;:19;;;120:28;;;;;;3248:11:3;3262:7;;3248:21;;3290:1;3280:7;:11;;;;3302:10;:19;;:27;3322:6;3302:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3302:27:3;3347:6;3340:13;;;3170:193;:::o;1758:370::-;1829:23;;:::i;:::-;1882:12;1863:9;:16;;:31;;;;;1920:4;1905:9;:12;;:19;;;;;1959:1;1943:12;:17;1939:138;;;1994:4;1976:9;:15;;:22;;;;;;;;;;;1939:138;;;2060:5;2042:9;:15;;:23;;;;;;;;;;;1939:138;2105:9;2089:7;:13;2097:4;2089:13;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1758:370;;;:::o;237:27:5:-;;;;:::o;38024:132:6:-;38084:24;12155:1;12131:26;;12139:3;;;;;;;;;;;12131:26;;;12130:64;;;;12192:1;12163:25;12183:3;;;;;;;;;;;12163:11;:25::i;:::-;:30;12130:64;12126:132;;;12211:35;11777:1;12211:19;:35::i;:::-;;12126:132;12293:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12293:16:6;;;;;;;;;;;;;;;;12272:37;;12280:8;;;;;;;;;;;12272:37;;;12268:108;;12347:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12347:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12347:16:6;;;;;;;;;;;;;;;;12326:8;;:38;;;;;;;;;;;;;;;;;;12268:108;38128:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;38128:20:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38128:20:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;38128:20:6;;;;;;;;;;;;;;;;38121:27;;38024:132;:::o;260:943:4:-;311:4;329:14;346:7;:13;354:4;346:13;;;;;;;;;;;:19;;;;;;;;;;;;329:36;;378:14;395:7;:13;403:4;395:13;;;;;;;;;;;:23;;;378:40;;431:21;455:7;:13;463:4;455:13;;;;;;;;;;;;;;;;;;;;;431:37;;479:23;;:::i;:::-;505:7;:21;513:12;505:21;;;;;;;;;;;;;;;479:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;558:4;545:17;;:9;:17;;;:39;;;;579:5;566:18;;:9;:18;;;545:39;541:625;;;628:13;656:1;644:9;:13;628:29;;708:8;670:7;:21;678:12;670:21;;;;;;;;;;;;;;;:35;;:46;;;;864:22;877:8;864:22;;;;;;;;;;;;;;;;;;923:9;901:18;;:31;;;;;;;;;;;954:32;984:1;973:9;:12;954:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1012:1;1001:12;;541:625;;;;1094:9;1083:7;;:20;;;;;;;;;;;1123:31;1144:9;1123:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;541:625;1192:1;1180:13;;260:943;;;;;;;:::o;46097:2683:6:-;46199:16;46247:1;46237:7;:11;46236:32;;;;;46265:2;46254:7;:13;;46236:32;46228:41;;;;;;46290:2;46280:12;;;;46349:19;46381:1;46371:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46371:12:6;;;;46349:34;;46417:7;46406:20;;46394:6;46401:1;46394:9;;;;;;;;;;;:32;;;;;;;;;;;46437:19;46469:2;46459:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46459:13:6;;;;46437:35;;46483:27;46523:2;46513:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46513:13:6;;;;46483:43;;46537:30;46570:40;:38;:40::i;:::-;46537:73;;46660:4;46652:6;46645:20;47013:9;47003:8;46999:24;46994:1;46986:6;46982:14;46972:25;46968:56;46961:4;46953:6;46949:17;46942:83;47062:4;47046:14;47039:28;47115:22;47108:4;47092:14;47088:25;47081:57;47159:18;47190:2;47180:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47180:13:6;;;;47159:34;;47253:6;47246:4;47239:5;47235:16;47228:32;47281:25;47319:1;47309:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47309:12:6;;;;47281:40;;47332;47342:5;47349:2;47353:1;47356:12;47370:1;47332:9;:40::i;:::-;;47383:20;;:::i;:::-;:62;;;;;;;;47407:6;47383:62;;;;47415:6;47383:62;;;;47423:14;47383:62;;;;47439:5;47383:62;;;;;47456:15;47474:47;;;;;;;;;;;;;;;;;;47499:4;47505:15;47474:14;:47::i;:::-;47456:65;;47532:30;47575:1;47565:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47565:12:6;;;;47532:45;;47645:4;47631:12;47627:23;47621:30;47710:65;47707:1;47703:73;47696:4;47677:17;47673:28;47665:112;47836:63;47833:1;47829:71;47822:4;47803:17;47799:28;47791:110;47960:61;47957:1;47953:69;47946:4;47927:17;47923:28;47915:108;48082:59;48079:1;48075:67;48068:4;48049:17;48045:28;48037:106;48202:57;48199:1;48195:65;48188:4;48169:17;48165:28;48157:104;48320:55;48317:1;48313:63;48306:4;48287:17;48283:28;48275:102;48436:53;48433:1;48429:61;48422:4;48403:17;48399:28;48391:100;48550:51;48547:1;48543:59;48536:4;48517:17;48513:28;48505:98;47597:1017;48624:123;48656:7;48692:17;48711:4;48716:1;48711:7;;;;;;;;;;;48720:15;48727:4;48732:1;48727:7;;;;;;;;;;;48720:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48720:15:6;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;48720:15:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;48720:15:6;;;;;;;;;;;;;;;;48737:4;48742:1;48737:7;;;;;;;;;;;48675:70;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48675:70:6;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48675:70:6;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48675:70:6;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;48675:70:6;;;48665:81;;;;;;48624:31;:123::i;:::-;48765:7;48758:14;;;;;;;;;;;46097:2683;;;;;:::o;38164:151::-;38223:10;38291:5;38279:18;38270:27;;38255:53;;;:::o;12880:208::-;12945:16;13059:21;:19;:21::i;:::-;13052:28;;12880:208;;;:::o;38467:171::-;38547:23;12155:1;12131:26;;12139:3;;;;;;;;;;;12131:26;;;12130:64;;;;12192:1;12163:25;12183:3;;;;;;;;;;;12163:11;:25::i;:::-;:30;12130:64;12126:132;;;12211:35;11777:1;12211:19;:35::i;:::-;;12126:132;12293:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12293:16:6;;;;;;;;;;;;;;;;12272:37;;12280:8;;;;;;;;;;;12272:37;;;12268:108;;12347:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12347:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12347:16:6;;;;;;;;;;;;;;;;12326:8;;:38;;;;;;;;;;;;;;;;;;12268:108;38590:8;;;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;38590:40:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38590:40:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;38590:40:6;;;;;;;;;;;;;;;;38583:47;;38467:171;:::o;55551:707::-;55679:25;55717:14;55744:9;55734:7;:19;55717:36;;55786:9;55772:3;:10;:23;;55764:32;;;;;;55852:6;55866:11;55861:2;:16;55852:25;;55969:6;55983:9;55978:2;:14;55969:23;;56003:227;56034:7;56020:11;56015:2;:16;:26;56010:1;:32;56003:227;;;56115:1;56108:5;56104:13;56098:20;56156:3;56152:1;56147:3;56143:11;56136:24;56068:107;56194:2;56189:7;;;;56216:2;56211:7;;;;56003:227;;;56247:3;56240:10;;;;;55551:707;;;;;;;:::o;35804:384::-;35924:11;12155:1;12131:26;;12139:3;;;;;;;;;;;12131:26;;;12130:64;;;;12192:1;12163:25;12183:3;;;;;;;;;;;12163:11;:25::i;:::-;:30;12130:64;12126:132;;;12211:35;11777:1;12211:19;:35::i;:::-;;12126:132;12293:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12293:16:6;;;;;;;;;;;;;;;;12272:37;;12280:8;;;;;;;;;;;12272:37;;;12268:108;;12347:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12347:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12347:16:6;;;;;;;;;;;;;;;;12326:8;;:38;;;;;;;;;;;;;;;;;;12268:108;35948:22;35985:1;35973:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35948:39;;36011:5;36017:1;36011:8;;;;;;;;;;;35998:7;36006:1;35998:10;;;;;;;;;;;;;:21;;;;36043:5;36049:1;36043:8;;;;;;;;;;;36030:7;36038:1;36030:10;;;;;;;;;;;;;:21;;;;36075:5;36081:1;36075:8;;;;;;;;;;;36062:7;36070:1;36062:10;;;;;;;;;;;;;:21;;;;36107:5;36113:1;36107:8;;;;;;;;;;;36094:7;36102:1;36094:10;;;;;;;;;;;;;:21;;;;36133:47;36148:11;36161:7;36170:9;36133:14;:47::i;:::-;36126:54;;;35804:384;;;;;:::o;48788:154::-;48923:11;48888:22;:32;48911:8;48888:32;;;;;;;;;;;:46;;;;48788:154;;:::o;13372:2070::-;13421:16;13512:1;13454:55;13466:42;13454:11;:55::i;:::-;:59;13450:250;;;13566:42;13540:3;;:69;;;;;;;;;;;;;;;;;;13624:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13684:4;13677:11;;;;13450:250;13772:1;13714:55;13726:42;13714:11;:55::i;:::-;:59;13710:259;;;13834:42;13808:3;;:69;;;;;;;;;;;;;;;;;;13892:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;13953:4;13946:11;;;;13710:259;14041:1;13983:55;13995:42;13983:11;:55::i;:::-;:59;13979:254;;;14101:42;14075:3;;:69;;;;;;;;;;;;;;;;;;14159:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;14217:4;14210:11;;;;13979:254;14305:1;14247:55;14259:42;14247:11;:55::i;:::-;:59;14243:258;;;14367:42;14341:3;;:69;;;;;;;;;;;;;;;;;;14425:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14485:4;14478:11;;;;14243:258;14573:1;14515:55;14527:42;14515:11;:55::i;:::-;:59;14511:256;;;14634:42;14608:3;;:69;;;;;;;;;;;;;;;;;;14692:37;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14751:4;14744:11;;;;14511:256;14839:1;14781:55;14793:42;14781:11;:55::i;:::-;:59;14777:205;;;14901:42;14875:3;;:69;;;;;;;;;;;;;;;;;;14966:4;14959:11;;;;14777:205;15054:1;14996:55;15008:42;14996:11;:55::i;:::-;:59;14992:204;;;15115:42;15089:3;;:69;;;;;;;;;;;;;;;;;;15180:4;15173:11;;;;14992:204;15268:1;15210:55;15222:42;15210:11;:55::i;:::-;:59;15206:206;;;15331:42;15305:3;;:69;;;;;;;;;;;;;;;;;;15396:4;15389:11;;;;15206:206;15429:5;15422:12;;13372:2070;;:::o;30207:461::-;30326:11;12155:1;12131:26;;12139:3;;;;;;;;;;;12131:26;;;12130:64;;;;12192:1;12163:25;12183:3;;;;;;;;;;;12163:11;:25::i;:::-;:30;12130:64;12126:132;;;12211:35;11777:1;12211:19;:35::i;:::-;;12126:132;12293:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12293:16:6;;;;;;;;;;;;;;;;12272:37;;12280:8;;;;;;;;;;;12272:37;;;12268:108;;12347:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12347:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12347:16:6;;;;;;;;;;;;;;;;12326:8;;:38;;;;;;;;;;;;;;;;;;12268:108;30350:10;30363:8;;;;;;;;;;;:17;;;30381:11;30394:9;30363:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30363:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30363:41:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30363:41:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;30363:41:6;;;;;;;;;;;;;;;;30350:54;;30451:9;30437:11;:23;30427:7;:33;30419:5;:41;30415:109;;;30484:1;30477:8;;;;;;;30415:109;30534:17;30554:14;30562:5;30554:7;:14::i;:::-;30534:34;;30586:8;;;;;;;;;;;:28;;;30621:5;30628:1;30631:11;30644:4;30650:9;30586:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30586:74:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30586:74:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30586:74:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30586:74:6;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;30586:74:6;;;;;;;;;;;;;;;;30579:81;;;;12386:1;30207:461;;;;;:::o;13096:127::-;13202:13;13178:21;:37;;;;;;;;;;;;:::i;:::-;;13096:127;:::o;45714:375::-;45775:26;45814:19;:17;:19::i;:::-;45844:24;;:::i;:::-;45879:22;45891:3;45896:4;45879:11;:22::i;:::-;45912:16;:3;:14;:16::i;:::-;45944:6;45953:1;45944:10;;45939:90;45960:4;:11;45956:1;:15;45939:90;;;45993:24;46009:4;46014:1;46009:7;;;;;;;;;;;;;;45993:3;:15;;:24;;;;:::i;:::-;45973:3;;;;;;;45939:90;;;;46039:17;:3;:15;:17::i;:::-;46074:3;:7;;;46067:14;;;45714:375;;;:::o;59205:175::-;59301:4;59295:11;59356:4;59349:5;59345:16;59335:8;59329:4;59320:42;59268:105;:::o;4339:446::-;4414:13;4430:9;4414:25;;4471:1;4465:2;4454:8;:13;;;;;;:18;4450:83;;4518:2;4507:8;:13;;;;;;4501:2;:20;4489:32;;;;4450:83;4559:8;4543:4;:13;;:24;;;;;4657:4;4651:11;4689:3;4683:4;4676:17;4719:1;4714:3;4707:14;4757:8;4752:3;4748:18;4742:4;4735:32;4625:153;;;;:::o;10737:130::-;10809:50;10836:4;8844:1;10809:26;:50::i;:::-;10737:130;:::o;10342:181::-;10436:49;10447:4;8794:1;10471:6;:13;10436:10;:49::i;:::-;10496:19;10508:6;10496:4;:11;;:19;;;;:::i;:::-;;10342:181;;:::o;11009:138::-;11082:57;11109:4;9009:1;11082:26;:57::i;:::-;11009:138;:::o;9765:147::-;9866:38;9900:2;9895:1;9885:6;:11;;;;9884:18;9866:4;:11;;:38;;;;:::i;:::-;9765:147;;:::o;9019:738::-;9131:2;9121:6;:12;9117:633;;9150:42;9184:6;9179:1;9169:6;:11;;;;9168:22;;;9150:4;:11;;:42;;;;:::i;:::-;9117:633;;;9224:4;9214:6;:14;9210:540;;9245:38;9279:2;9274:1;9264:6;:11;;;;9263:18;9245:4;:11;;:38;;;;:::i;:::-;9298:25;9313:6;9321:1;9298:4;:14;;:25;;;;;:::i;:::-;;9210:540;;;9355:6;9345;:16;9341:409;;9378:38;9412:2;9407:1;9397:6;:11;;;;9396:18;9378:4;:11;;:38;;;;:::i;:::-;9431:25;9446:6;9454:1;9431:4;:14;;:25;;;;;:::i;:::-;;9341:409;;;9488:10;9478:6;:20;9474:276;;9515:38;9549:2;9544:1;9534:6;:11;;;;9533:18;9515:4;:11;;:38;;;;:::i;:::-;9568:25;9583:6;9591:1;9568:4;:14;;:25;;;;;:::i;:::-;;9474:276;;;9625:18;9615:6;:28;9611:139;;9660:38;9694:2;9689:1;9679:6;:11;;;;9678:18;9660:4;:11;;:38;;;;:::i;:::-;9713:25;9728:6;9736:1;9713:4;:14;;:25;;;;;:::i;:::-;;9611:139;9474:276;9341:409;9210:540;9117:633;9019:738;;;:::o;5425:1241::-;5504:21;;:::i;:::-;5575:4;:13;;;5557:4;:8;;;:15;5542:5;:12;:30;:46;5538:129;;;5605:50;5612:4;5653:1;5618:32;5622:4;:13;;;5637:5;:12;5618:3;:32::i;:::-;:36;5605:6;:50::i;:::-;5538:129;5677:9;5697:8;5716;5727:5;:12;5716:23;;5794:4;5788:11;5870:6;5864:13;5958:2;5949:6;5941;5937:19;5933:28;5925:36;;6082:5;6076:12;6068:6;6064:25;6056:6;6049:41;6146:2;6139:5;6135:14;6128:21;;5759:401;;6170:212;6183:2;6176:3;:9;6170:212;;6302:3;6296:10;6290:4;6283:24;6344:2;6336:10;;;;6368:2;6361:9;;;;6194:2;6187:9;;;;6170:212;;;6392:9;6424:1;6417:3;6412:2;:8;6404:3;:17;:21;6392:33;;6519:4;6515:9;6509:3;6503:10;6499:26;6572:4;6565;6559:11;6555:22;6617:7;6607:8;6604:21;6598:4;6591:35;6469:168;;6654:4;6647:11;;;;;;5425:1241;;;;:::o;6960:586::-;7060:4;:13;;;7056:1;7038:4;:8;;;:15;:19;:35;7034:99;;;7090:31;7097:4;7119:1;7103:4;:13;;;:17;7090:6;:31::i;:::-;7034:99;7187:4;7181:11;7263:6;7257:13;7355:2;7346:6;7338;7334:19;7330:28;7454:5;7448:4;7440:20;7501:1;7493:6;7489:14;7481:6;7474:30;7152:387;;;;;:::o;7840:748::-;7925:21;;:::i;:::-;7988:4;:13;;;7970:4;:8;;;:15;7963:4;:22;:38;7959:113;;;8018:42;8025:4;8058:1;8031:24;8035:4;:13;;;8050:4;8031:3;:24::i;:::-;:28;8018:6;:42::i;:::-;7959:113;8082:9;8108:1;8101:4;8094:3;:11;:15;8082:27;;8164:4;8158:11;8240:6;8234:13;8332:4;8323:6;8315;8311:19;8307:30;8470:5;8462:4;8458:9;8451:4;8445:11;8441:27;8438:38;8432:4;8425:52;8518:4;8510:6;8506:17;8498:6;8491:33;8129:430;;;8576:4;8569:11;;;7840:748;;;;;:::o;4978:151::-;5031:9;5062:2;5057;:7;5053:49;;;5088:2;5081:9;;;;5053:49;5119:2;5112:9;;4978:151;;;;;:::o;4793:177::-;4869:19;4891:4;:8;;;4869:30;;4910:21;4915:4;4921:9;4910:4;:21::i;:::-;4942:20;4949:4;4955:6;4942;:20::i;:::-;;4793:177;;;:::o;122:1430:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.5.12 < 0.6.0;\r\nimport \"./provableAPI.sol\";\r\nimport \"./Storagable.sol\";\r\nimport \"./Winnable.sol\";\r\n\r\n\r\ncontract oracle is usingProvable, Storagable, Winnable{\r\n\r\n\r\n  uint256 constant NUM_RANDOM_BYTES_REQUESTED = 1;\r\n  uint256 public latestNumber;\r\n\r\n\r\n\r\n  event LogNewProvableQuery(string description);\r\n  event generatedRandomNumber(uint256 randomNumber);\r\n  event idCheck(string a, bytes32 q_id);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function __callback(bytes32 _queryId, string memory _result, bytes memory _proof) public {\r\n    require(msg.sender == provable_cbAddress());\r\n    bytes32 punter = waiting[_queryId].id;\r\n    address newLink = linking[_queryId];\r\n\r\n    uint256 randomNumber = uint256(keccak256(abi.encodePacked(_result))) % 2;\r\n\r\n    latestNumber = randomNumber;\r\n    emit generatedRandomNumber(randomNumber);\r\n    saveResults(latestNumber,_queryId);\r\n    winOrLose(_queryId);\r\n\r\n\r\n    delete waiting[_queryId].id;\r\n\r\n  }\r\n\r\n\r\n\r\n  function random(address punter, uint _betAmount) payable public  {\r\n    uint256 QUERY_EXECUTION_DELAY =0;\r\n    uint GAS_FOR_CALLBACK = 200000;\r\n\r\n\r\n   bytes32 q_id =  provable_newRandomDSQuery(\r\n        QUERY_EXECUTION_DELAY,\r\n        NUM_RANDOM_BYTES_REQUESTED,\r\n        GAS_FOR_CALLBACK\r\n      );\r\n       _betAmount = msg.value;\r\n      //createPlayer(msg.sender, _betAmount, q_id);\r\n      fillPlayerInfo (msg.sender, _betAmount, q_id);\r\n\r\n\r\n\r\n     emit idCheck(\"The ID of this call is \", q_id);\r\n    emit LogNewProvableQuery(\"Provable query was sent, standing by for the answer.\");\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n",
  "sourcePath": "D:\\Users\\victo\\Desktop\\Crypto Programming\\Ethereum\\Coinflip\\contracts\\oracle.sol",
  "ast": {
    "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/oracle.sol",
    "exportedSymbols": {
      "oracle": [
        756
      ]
    },
    "id": 757,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 615,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".12",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:5"
      },
      {
        "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 616,
        "nodeType": "ImportDirective",
        "scope": 757,
        "sourceUnit": 7053,
        "src": "35:27:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/Storagable.sol",
        "file": "./Storagable.sol",
        "id": 617,
        "nodeType": "ImportDirective",
        "scope": 757,
        "sourceUnit": 498,
        "src": "64:26:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/Winnable.sol",
        "file": "./Winnable.sol",
        "id": 618,
        "nodeType": "ImportDirective",
        "scope": 757,
        "sourceUnit": 614,
        "src": "92:24:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 619,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7052,
              "src": "141:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$7052",
                "typeString": "contract usingProvable"
              }
            },
            "id": 620,
            "nodeType": "InheritanceSpecifier",
            "src": "141:13:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 621,
              "name": "Storagable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 497,
              "src": "156:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Storagable_$497",
                "typeString": "contract Storagable"
              }
            },
            "id": 622,
            "nodeType": "InheritanceSpecifier",
            "src": "156:10:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 623,
              "name": "Winnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 613,
              "src": "168:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Winnable_$613",
                "typeString": "contract Winnable"
              }
            },
            "id": 624,
            "nodeType": "InheritanceSpecifier",
            "src": "168:8:5"
          }
        ],
        "contractDependencies": [
          199,
          497,
          613,
          7052
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 756,
        "linearizedBaseContracts": [
          756,
          613,
          497,
          199,
          7052
        ],
        "name": "oracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 627,
            "name": "NUM_RANDOM_BYTES_REQUESTED",
            "nodeType": "VariableDeclaration",
            "scope": 756,
            "src": "185:47:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 625,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "185:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 626,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "231:1:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 629,
            "name": "latestNumber",
            "nodeType": "VariableDeclaration",
            "scope": 756,
            "src": "237:27:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 628,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "237:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 633,
            "name": "LogNewProvableQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 631,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 633,
                  "src": "301:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "301:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "300:20:5"
            },
            "src": "275:46:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 637,
            "name": "generatedRandomNumber",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 635,
                  "indexed": false,
                  "name": "randomNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "353:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 634,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "353:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "352:22:5"
            },
            "src": "325:50:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 643,
            "name": "idCheck",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 639,
                  "indexed": false,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 643,
                  "src": "393:8:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 638,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 641,
                  "indexed": false,
                  "name": "q_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 643,
                  "src": "403:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "403:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "392:24:5"
            },
            "src": "379:38:5"
          },
          {
            "body": {
              "id": 709,
              "nodeType": "Block",
              "src": "530:413:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 653,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7067,
                            "src": "545:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "545:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 655,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4875,
                            "src": "559:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "559:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "545:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 652,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7070,
                        7071
                      ],
                      "referencedDeclaration": 7070,
                      "src": "537:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "537:43:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 659,
                  "nodeType": "ExpressionStatement",
                  "src": "537:43:5"
                },
                {
                  "assignments": [
                    661
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 661,
                      "name": "punter",
                      "nodeType": "VariableDeclaration",
                      "scope": 709,
                      "src": "587:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 660,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "587:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 666,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 662,
                        "name": "waiting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 233,
                        "src": "604:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_bet_$218_storage_$",
                          "typeString": "mapping(bytes32 => struct Storagable.bet storage ref)"
                        }
                      },
                      "id": 664,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 663,
                        "name": "_queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "612:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "604:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_bet_$218_storage",
                        "typeString": "struct Storagable.bet storage ref"
                      }
                    },
                    "id": 665,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "id",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 217,
                    "src": "604:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "587:37:5"
                },
                {
                  "assignments": [
                    668
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 668,
                      "name": "newLink",
                      "nodeType": "VariableDeclaration",
                      "scope": 709,
                      "src": "631:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 667,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "631:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 672,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 669,
                      "name": "linking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "649:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                        "typeString": "mapping(bytes32 => address)"
                      }
                    },
                    "id": 671,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 670,
                      "name": "_queryId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 645,
                      "src": "657:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "649:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "631:35:5"
                },
                {
                  "assignments": [
                    674
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 674,
                      "name": "randomNumber",
                      "nodeType": "VariableDeclaration",
                      "scope": 709,
                      "src": "675:20:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 673,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "675:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 685,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 679,
                                  "name": "_result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 647,
                                  "src": "733:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 677,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7054,
                                  "src": "716:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 678,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "716:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "716:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 676,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7061,
                            "src": "706:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "706:36:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "698:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "698:45:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "746:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "698:49:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "675:72:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 686,
                      "name": "latestNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 629,
                      "src": "756:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 687,
                      "name": "randomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 674,
                      "src": "771:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "756:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 689,
                  "nodeType": "ExpressionStatement",
                  "src": "756:27:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 691,
                        "name": "randomNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 674,
                        "src": "817:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 690,
                      "name": "generatedRandomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 637,
                      "src": "795:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "795:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 693,
                  "nodeType": "EmitStatement",
                  "src": "790:40:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 695,
                        "name": "latestNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 629,
                        "src": "849:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 696,
                        "name": "_queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "862:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 694,
                      "name": "saveResults",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 403,
                      "src": "837:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32)"
                      }
                    },
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "837:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 698,
                  "nodeType": "ExpressionStatement",
                  "src": "837:34:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 700,
                        "name": "_queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "888:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 699,
                      "name": "winOrLose",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 612,
                      "src": "878:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (bytes32) returns (uint256)"
                      }
                    },
                    "id": 701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "878:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 702,
                  "nodeType": "ExpressionStatement",
                  "src": "878:19:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "908:27:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 703,
                          "name": "waiting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 233,
                          "src": "915:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_bet_$218_storage_$",
                            "typeString": "mapping(bytes32 => struct Storagable.bet storage ref)"
                          }
                        },
                        "id": 705,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 704,
                          "name": "_queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 645,
                          "src": "923:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "915:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_bet_$218_storage",
                          "typeString": "struct Storagable.bet storage ref"
                        }
                      },
                      "id": 706,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 217,
                      "src": "915:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 708,
                  "nodeType": "ExpressionStatement",
                  "src": "908:27:5"
                }
              ]
            },
            "documentation": null,
            "id": 710,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 645,
                  "name": "_queryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 710,
                  "src": "461:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 647,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 710,
                  "src": "479:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 646,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 649,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 710,
                  "src": "502:19:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 648,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "502:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "460:62:5"
            },
            "returnParameters": {
              "id": 651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "530:0:5"
            },
            "scope": 756,
            "src": "441:502:5",
            "stateMutability": "nonpayable",
            "superFunction": 1805,
            "visibility": "public"
          },
          {
            "body": {
              "id": 754,
              "nodeType": "Block",
              "src": "1018:525:5",
              "statements": [
                {
                  "assignments": [
                    718
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 718,
                      "name": "QUERY_EXECUTION_DELAY",
                      "nodeType": "VariableDeclaration",
                      "scope": 754,
                      "src": "1025:29:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 717,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1025:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 720,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1056:1:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1025:32:5"
                },
                {
                  "assignments": [
                    722
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 722,
                      "name": "GAS_FOR_CALLBACK",
                      "nodeType": "VariableDeclaration",
                      "scope": 754,
                      "src": "1064:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 721,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1064:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 724,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "323030303030",
                    "id": 723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1088:6:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000_by_1",
                      "typeString": "int_const 200000"
                    },
                    "value": "200000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1064:30:5"
                },
                {
                  "assignments": [
                    726
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 726,
                      "name": "q_id",
                      "nodeType": "VariableDeclaration",
                      "scope": 754,
                      "src": "1104:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 725,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1104:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 732,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 728,
                        "name": "QUERY_EXECUTION_DELAY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 718,
                        "src": "1156:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 729,
                        "name": "NUM_RANDOM_BYTES_REQUESTED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 627,
                        "src": "1188:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 730,
                        "name": "GAS_FOR_CALLBACK",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 722,
                        "src": "1225:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 727,
                      "name": "provable_newRandomDSQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6154,
                      "src": "1120:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                      }
                    },
                    "id": 731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1120:130:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1104:146:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 733,
                      "name": "_betAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 714,
                      "src": "1260:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 734,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7067,
                        "src": "1273:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1273:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1260:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 737,
                  "nodeType": "ExpressionStatement",
                  "src": "1260:22:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 739,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7067,
                          "src": "1360:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1360:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 741,
                        "name": "_betAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 714,
                        "src": "1372:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 742,
                        "name": "q_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 726,
                        "src": "1384:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 738,
                      "name": "fillPlayerInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "1344:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address payable,uint256,bytes32)"
                      }
                    },
                    "id": 743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1344:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 744,
                  "nodeType": "ExpressionStatement",
                  "src": "1344:45:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "546865204944206f6620746869732063616c6c20697320",
                        "id": 746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1416:25:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_254a10542895e9c592c25ec3f28abb60a26257a9d3f1e316ceaed442cc6f19de",
                          "typeString": "literal_string \"The ID of this call is \""
                        },
                        "value": "The ID of this call is "
                      },
                      {
                        "argumentTypes": null,
                        "id": 747,
                        "name": "q_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 726,
                        "src": "1443:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_254a10542895e9c592c25ec3f28abb60a26257a9d3f1e316ceaed442cc6f19de",
                          "typeString": "literal_string \"The ID of this call is \""
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 745,
                      "name": "idCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 643,
                      "src": "1408:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (string memory,bytes32)"
                      }
                    },
                    "id": 748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1408:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 749,
                  "nodeType": "EmitStatement",
                  "src": "1403:45:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e",
                        "id": 751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1480:54:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c372616915d6b08d584e4f07c9f4ab3ef233d2320a376fb7b417ddfb52cb9d5",
                          "typeString": "literal_string \"Provable query was sent, standing by for the answer.\""
                        },
                        "value": "Provable query was sent, standing by for the answer."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6c372616915d6b08d584e4f07c9f4ab3ef233d2320a376fb7b417ddfb52cb9d5",
                          "typeString": "literal_string \"Provable query was sent, standing by for the answer.\""
                        }
                      ],
                      "id": 750,
                      "name": "LogNewProvableQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 633,
                      "src": "1460:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1460:75:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 753,
                  "nodeType": "EmitStatement",
                  "src": "1455:80:5"
                }
              ]
            },
            "documentation": null,
            "id": 755,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "random",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 712,
                  "name": "punter",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "969:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 711,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "969:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 714,
                  "name": "_betAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "985:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 713,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "985:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "968:33:5"
            },
            "returnParameters": {
              "id": 716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1018:0:5"
            },
            "scope": 756,
            "src": "953:590:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 757,
        "src": "122:1430:5"
      }
    ],
    "src": "0:1554:5"
  },
  "legacyAST": {
    "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/oracle.sol",
    "exportedSymbols": {
      "oracle": [
        756
      ]
    },
    "id": 757,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 615,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".12",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:5"
      },
      {
        "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 616,
        "nodeType": "ImportDirective",
        "scope": 757,
        "sourceUnit": 7053,
        "src": "35:27:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/Storagable.sol",
        "file": "./Storagable.sol",
        "id": 617,
        "nodeType": "ImportDirective",
        "scope": 757,
        "sourceUnit": 498,
        "src": "64:26:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Users/victo/Desktop/Crypto Programming/Ethereum/Coinflip/contracts/Winnable.sol",
        "file": "./Winnable.sol",
        "id": 618,
        "nodeType": "ImportDirective",
        "scope": 757,
        "sourceUnit": 614,
        "src": "92:24:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 619,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7052,
              "src": "141:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$7052",
                "typeString": "contract usingProvable"
              }
            },
            "id": 620,
            "nodeType": "InheritanceSpecifier",
            "src": "141:13:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 621,
              "name": "Storagable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 497,
              "src": "156:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Storagable_$497",
                "typeString": "contract Storagable"
              }
            },
            "id": 622,
            "nodeType": "InheritanceSpecifier",
            "src": "156:10:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 623,
              "name": "Winnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 613,
              "src": "168:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Winnable_$613",
                "typeString": "contract Winnable"
              }
            },
            "id": 624,
            "nodeType": "InheritanceSpecifier",
            "src": "168:8:5"
          }
        ],
        "contractDependencies": [
          199,
          497,
          613,
          7052
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 756,
        "linearizedBaseContracts": [
          756,
          613,
          497,
          199,
          7052
        ],
        "name": "oracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 627,
            "name": "NUM_RANDOM_BYTES_REQUESTED",
            "nodeType": "VariableDeclaration",
            "scope": 756,
            "src": "185:47:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 625,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "185:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 626,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "231:1:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 629,
            "name": "latestNumber",
            "nodeType": "VariableDeclaration",
            "scope": 756,
            "src": "237:27:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 628,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "237:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 633,
            "name": "LogNewProvableQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 631,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 633,
                  "src": "301:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "301:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "300:20:5"
            },
            "src": "275:46:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 637,
            "name": "generatedRandomNumber",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 635,
                  "indexed": false,
                  "name": "randomNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "353:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 634,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "353:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "352:22:5"
            },
            "src": "325:50:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 643,
            "name": "idCheck",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 639,
                  "indexed": false,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 643,
                  "src": "393:8:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 638,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 641,
                  "indexed": false,
                  "name": "q_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 643,
                  "src": "403:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "403:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "392:24:5"
            },
            "src": "379:38:5"
          },
          {
            "body": {
              "id": 709,
              "nodeType": "Block",
              "src": "530:413:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 653,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7067,
                            "src": "545:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "545:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 655,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4875,
                            "src": "559:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "559:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "545:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 652,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7070,
                        7071
                      ],
                      "referencedDeclaration": 7070,
                      "src": "537:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "537:43:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 659,
                  "nodeType": "ExpressionStatement",
                  "src": "537:43:5"
                },
                {
                  "assignments": [
                    661
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 661,
                      "name": "punter",
                      "nodeType": "VariableDeclaration",
                      "scope": 709,
                      "src": "587:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 660,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "587:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 666,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 662,
                        "name": "waiting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 233,
                        "src": "604:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_bet_$218_storage_$",
                          "typeString": "mapping(bytes32 => struct Storagable.bet storage ref)"
                        }
                      },
                      "id": 664,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 663,
                        "name": "_queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "612:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "604:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_bet_$218_storage",
                        "typeString": "struct Storagable.bet storage ref"
                      }
                    },
                    "id": 665,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "id",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 217,
                    "src": "604:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "587:37:5"
                },
                {
                  "assignments": [
                    668
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 668,
                      "name": "newLink",
                      "nodeType": "VariableDeclaration",
                      "scope": 709,
                      "src": "631:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 667,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "631:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 672,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 669,
                      "name": "linking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "649:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                        "typeString": "mapping(bytes32 => address)"
                      }
                    },
                    "id": 671,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 670,
                      "name": "_queryId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 645,
                      "src": "657:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "649:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "631:35:5"
                },
                {
                  "assignments": [
                    674
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 674,
                      "name": "randomNumber",
                      "nodeType": "VariableDeclaration",
                      "scope": 709,
                      "src": "675:20:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 673,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "675:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 685,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 679,
                                  "name": "_result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 647,
                                  "src": "733:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 677,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7054,
                                  "src": "716:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 678,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "716:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "716:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 676,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7061,
                            "src": "706:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "706:36:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "698:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "698:45:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "746:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "698:49:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "675:72:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 686,
                      "name": "latestNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 629,
                      "src": "756:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 687,
                      "name": "randomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 674,
                      "src": "771:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "756:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 689,
                  "nodeType": "ExpressionStatement",
                  "src": "756:27:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 691,
                        "name": "randomNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 674,
                        "src": "817:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 690,
                      "name": "generatedRandomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 637,
                      "src": "795:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "795:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 693,
                  "nodeType": "EmitStatement",
                  "src": "790:40:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 695,
                        "name": "latestNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 629,
                        "src": "849:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 696,
                        "name": "_queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "862:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 694,
                      "name": "saveResults",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 403,
                      "src": "837:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32)"
                      }
                    },
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "837:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 698,
                  "nodeType": "ExpressionStatement",
                  "src": "837:34:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 700,
                        "name": "_queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "888:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 699,
                      "name": "winOrLose",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 612,
                      "src": "878:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (bytes32) returns (uint256)"
                      }
                    },
                    "id": 701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "878:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 702,
                  "nodeType": "ExpressionStatement",
                  "src": "878:19:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "908:27:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 703,
                          "name": "waiting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 233,
                          "src": "915:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_bet_$218_storage_$",
                            "typeString": "mapping(bytes32 => struct Storagable.bet storage ref)"
                          }
                        },
                        "id": 705,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 704,
                          "name": "_queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 645,
                          "src": "923:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "915:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_bet_$218_storage",
                          "typeString": "struct Storagable.bet storage ref"
                        }
                      },
                      "id": 706,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 217,
                      "src": "915:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 708,
                  "nodeType": "ExpressionStatement",
                  "src": "908:27:5"
                }
              ]
            },
            "documentation": null,
            "id": 710,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 645,
                  "name": "_queryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 710,
                  "src": "461:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 647,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 710,
                  "src": "479:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 646,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 649,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 710,
                  "src": "502:19:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 648,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "502:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "460:62:5"
            },
            "returnParameters": {
              "id": 651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "530:0:5"
            },
            "scope": 756,
            "src": "441:502:5",
            "stateMutability": "nonpayable",
            "superFunction": 1805,
            "visibility": "public"
          },
          {
            "body": {
              "id": 754,
              "nodeType": "Block",
              "src": "1018:525:5",
              "statements": [
                {
                  "assignments": [
                    718
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 718,
                      "name": "QUERY_EXECUTION_DELAY",
                      "nodeType": "VariableDeclaration",
                      "scope": 754,
                      "src": "1025:29:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 717,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1025:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 720,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1056:1:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1025:32:5"
                },
                {
                  "assignments": [
                    722
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 722,
                      "name": "GAS_FOR_CALLBACK",
                      "nodeType": "VariableDeclaration",
                      "scope": 754,
                      "src": "1064:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 721,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1064:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 724,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "323030303030",
                    "id": 723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1088:6:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000_by_1",
                      "typeString": "int_const 200000"
                    },
                    "value": "200000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1064:30:5"
                },
                {
                  "assignments": [
                    726
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 726,
                      "name": "q_id",
                      "nodeType": "VariableDeclaration",
                      "scope": 754,
                      "src": "1104:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 725,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1104:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 732,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 728,
                        "name": "QUERY_EXECUTION_DELAY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 718,
                        "src": "1156:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 729,
                        "name": "NUM_RANDOM_BYTES_REQUESTED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 627,
                        "src": "1188:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 730,
                        "name": "GAS_FOR_CALLBACK",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 722,
                        "src": "1225:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 727,
                      "name": "provable_newRandomDSQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6154,
                      "src": "1120:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                      }
                    },
                    "id": 731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1120:130:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1104:146:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 733,
                      "name": "_betAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 714,
                      "src": "1260:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 734,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7067,
                        "src": "1273:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1273:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1260:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 737,
                  "nodeType": "ExpressionStatement",
                  "src": "1260:22:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 739,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7067,
                          "src": "1360:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1360:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 741,
                        "name": "_betAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 714,
                        "src": "1372:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 742,
                        "name": "q_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 726,
                        "src": "1384:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 738,
                      "name": "fillPlayerInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "1344:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address payable,uint256,bytes32)"
                      }
                    },
                    "id": 743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1344:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 744,
                  "nodeType": "ExpressionStatement",
                  "src": "1344:45:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "546865204944206f6620746869732063616c6c20697320",
                        "id": 746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1416:25:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_254a10542895e9c592c25ec3f28abb60a26257a9d3f1e316ceaed442cc6f19de",
                          "typeString": "literal_string \"The ID of this call is \""
                        },
                        "value": "The ID of this call is "
                      },
                      {
                        "argumentTypes": null,
                        "id": 747,
                        "name": "q_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 726,
                        "src": "1443:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_254a10542895e9c592c25ec3f28abb60a26257a9d3f1e316ceaed442cc6f19de",
                          "typeString": "literal_string \"The ID of this call is \""
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 745,
                      "name": "idCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 643,
                      "src": "1408:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (string memory,bytes32)"
                      }
                    },
                    "id": 748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1408:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 749,
                  "nodeType": "EmitStatement",
                  "src": "1403:45:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e",
                        "id": 751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1480:54:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c372616915d6b08d584e4f07c9f4ab3ef233d2320a376fb7b417ddfb52cb9d5",
                          "typeString": "literal_string \"Provable query was sent, standing by for the answer.\""
                        },
                        "value": "Provable query was sent, standing by for the answer."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6c372616915d6b08d584e4f07c9f4ab3ef233d2320a376fb7b417ddfb52cb9d5",
                          "typeString": "literal_string \"Provable query was sent, standing by for the answer.\""
                        }
                      ],
                      "id": 750,
                      "name": "LogNewProvableQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 633,
                      "src": "1460:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1460:75:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 753,
                  "nodeType": "EmitStatement",
                  "src": "1455:80:5"
                }
              ]
            },
            "documentation": null,
            "id": 755,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "random",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 712,
                  "name": "punter",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "969:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 711,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "969:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 714,
                  "name": "_betAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "985:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 713,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "985:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "968:33:5"
            },
            "returnParameters": {
              "id": 716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1018:0:5"
            },
            "scope": 756,
            "src": "953:590:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 757,
        "src": "122:1430:5"
      }
    ],
    "src": "0:1554:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2020-10-31T05:12:52.173Z",
  "devdoc": {
    "methods": {
      "__callback(bytes32,string)": {
        "details": "The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}